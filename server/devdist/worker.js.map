{"version":3,"file":"worker.js","mappingst2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACprziBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACllrtvlXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvjvhutYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxFA;AA0BA;AAAA;AACA;AAiCA;AA/BA;AAYA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClEA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AChzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAIA;AACA;AAEA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AAIA;AACA;AAIA;AACA;AAEA;AACA;AAKA;AAEA","sources":["webpack://vokabon/./node_modules/abort-controller/dist/abort-controller.js","webpack://vokabon/./node_modules/abort-controller/node_modules/event-target-shim/dist/event-target-shim.js","webpack://vokabon/./node_modules/abort-controller/polyfill.js","webpack://vokabon/./node_modules/base64-js/index.js","webpack://vokabon/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://vokabon/./node_modules/faunadb/index.js","webpack://vokabon/./node_modules/faunadb/src/Client.js","webpack://vokabon/./node_modules/faunadb/src/Expr.js","webpack://vokabon/./node_modules/faunadb/src/PageHelper.js","webpack://vokabon/./node_modules/faunadb/src/RequestResult.js","webpack://vokabon/./node_modules/faunadb/src/_http/errors.js","webpack://vokabon/./node_modules/faunadb/src/_http/fetchAdapter.js","webpack://vokabon/./node_modules/faunadb/src/_http/http2Adapter.js","webpack://vokabon/./node_modules/faunadb/src/_http/index.js","webpack://vokabon/./node_modules/faunadb/src/_json.js","webpack://vokabon/./node_modules/faunadb/src/_util.js","webpack://vokabon/./node_modules/faunadb/src/clientLogger.js","webpack://vokabon/./node_modules/faunadb/src/errors.js","webpack://vokabon/./node_modules/faunadb/src/query.js","webpack://vokabon/./node_modules/faunadb/src/stream.js","webpack://vokabon/./node_modules/faunadb/src/values.js","webpack://vokabon/./node_modules/fn-annotate/index.js","webpack://vokabon/./node_modules/object-assign/index.js","webpack://vokabon/./server/TypedRouter.ts","webpack://vokabon/./node_modules/util-deprecate/browser.js","webpack://vokabon/ignored|/Users/lume/vokabon/node_modules/faunadb/src/_http|http","webpack://vokabon/ignored|/Users/lume/vokabon/node_modules/faunadb/src/_http|http2","webpack://vokabon/ignored|/Users/lume/vokabon/node_modules/faunadb/src/_http|https","webpack://vokabon/ignored|/Users/lume/vokabon/node_modules/faunadb/src/_http|os","webpack://vokabon/ignored|/Users/lume/vokabon/node_modules/faunadb/src|boxen","webpack://vokabon/ignored|/Users/lume/vokabon/node_modules/faunadb/src|chalk","webpack://vokabon/ignored|/Users/lume/vokabon/node_modules/faunadb/src|util","webpack://vokabon/./node_modules/regexparam/dist/index.mjs","webpack://vokabon/./node_modules/worktop/request/index.mjs","webpack://vokabon/./node_modules/worktop/response/index.mjs","webpack://vokabon/./node_modules/worktop/router/index.mjs","webpack://vokabon/./node_modules/worktop/utils/index.mjs","webpack://vokabon/./node_modules/zod/lib/index.mjs","webpack://vokabon/webpack/bootstrap","webpack://vokabon/webpack/runtime/compat get default export","webpack://vokabon/webpack/runtime/define property getters","webpack://vokabon/webpack/runtime/global","webpack://vokabon/webpack/runtime/hasOwnProperty shorthand","webpack://vokabon/webpack/runtime/make namespace object","webpack://vokabon/./server/index.ts"],"sourcesContent":["/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar eventTargetShim = require('event-target-shim');\n\n/**\n * The signal class.\n * @see https://dom.spec.whatwg.org/#abortsignal\n */\nclass AbortSignal extends eventTargetShim.EventTarget {\n    /**\n     * AbortSignal cannot be constructed directly.\n     */\n    constructor() {\n        super();\n        throw new TypeError(\"AbortSignal cannot be constructed directly\");\n    }\n    /**\n     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.\n     */\n    get aborted() {\n        const aborted = abortedFlags.get(this);\n        if (typeof aborted !== \"boolean\") {\n            throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? \"null\" : typeof this}`);\n        }\n        return aborted;\n    }\n}\neventTargetShim.defineEventAttribute(AbortSignal.prototype, \"abort\");\n/**\n * Create an AbortSignal object.\n */\nfunction createAbortSignal() {\n    const signal = Object.create(AbortSignal.prototype);\n    eventTargetShim.EventTarget.call(signal);\n    abortedFlags.set(signal, false);\n    return signal;\n}\n/**\n * Abort a given signal.\n */\nfunction abortSignal(signal) {\n    if (abortedFlags.get(signal) !== false) {\n        return;\n    }\n    abortedFlags.set(signal, true);\n    signal.dispatchEvent({ type: \"abort\" });\n}\n/**\n * Aborted flag for each instances.\n */\nconst abortedFlags = new WeakMap();\n// Properties should be enumerable.\nObject.defineProperties(AbortSignal.prototype, {\n    aborted: { enumerable: true },\n});\n// `toString()` should return `\"[object AbortSignal]\"`\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortSignal\",\n    });\n}\n\n/**\n * The AbortController.\n * @see https://dom.spec.whatwg.org/#abortcontroller\n */\nclass AbortController {\n    /**\n     * Initialize this controller.\n     */\n    constructor() {\n        signals.set(this, createAbortSignal());\n    }\n    /**\n     * Returns the `AbortSignal` object associated with this object.\n     */\n    get signal() {\n        return getSignal(this);\n    }\n    /**\n     * Abort and signal to any observers that the associated activity is to be aborted.\n     */\n    abort() {\n        abortSignal(getSignal(this));\n    }\n}\n/**\n * Associated signals.\n */\nconst signals = new WeakMap();\n/**\n * Get the associated signal of a given controller.\n */\nfunction getSignal(controller) {\n    const signal = signals.get(controller);\n    if (signal == null) {\n        throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? \"null\" : typeof controller}`);\n    }\n    return signal;\n}\n// Properties should be enumerable.\nObject.defineProperties(AbortController.prototype, {\n    signal: { enumerable: true },\n    abort: { enumerable: true },\n});\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortController.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortController\",\n    });\n}\n\nexports.AbortController = AbortController;\nexports.AbortSignal = AbortSignal;\nexports.default = AbortController;\n\nmodule.exports = AbortController\nmodule.exports.AbortController = module.exports[\"default\"] = AbortController\nmodule.exports.AbortSignal = AbortSignal\n//# sourceMappingURL=abort-controller.js.map\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap();\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap();\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event);\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    );\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            );\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true;\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault();\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    });\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true });\n\n    // Define accessors\n    const keys = Object.keys(event);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key));\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget;\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation();\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        data.immediateStopped = true;\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation();\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this));\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true;\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this));\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event);\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value;\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event;\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto);\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event);\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    });\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n            const isFunc = typeof descriptor.value === \"function\";\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            );\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto);\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n        wrappers.set(proto, wrapper);\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nfunction wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event));\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nfunction isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nfunction setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase;\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nfunction setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget;\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nfunction setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener;\n}\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap();\n\n// Listener types\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget);\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this);\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next;\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null; // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this);\n\n            // Traverse to the tail while removing old value.\n            let prev = null;\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next;\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next);\n                    } else {\n                        listeners.delete(eventName);\n                    }\n                } else {\n                    prev = node;\n                }\n\n                node = node.next;\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                };\n                if (prev === null) {\n                    listeners.set(eventName, newNode);\n                } else {\n                    prev.next = newNode;\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    );\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this);\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    });\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map());\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length);\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i];\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this);\n        const optionsIsObj = isObject(options);\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        };\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName);\n        if (node === undefined) {\n            listeners.set(eventName, newNode);\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null;\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node;\n            node = node.next;\n        }\n\n        // Add it.\n        prev.next = newNode;\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this);\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n\n        let prev = null;\n        let node = listeners.get(eventName);\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n                return\n            }\n\n            prev = node;\n            node = node.next;\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this);\n        const eventName = event.type;\n        let node = listeners.get(eventName);\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event);\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null;\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n            } else {\n                prev = node;\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            );\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent);\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err);\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent);\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next;\n        }\n        setPassiveListener(wrappedEvent, null);\n        setEventPhase(wrappedEvent, 0);\n        setCurrentTarget(wrappedEvent, null);\n\n        return !wrappedEvent.defaultPrevented\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\n\nexports.defineEventAttribute = defineEventAttribute;\nexports.EventTarget = EventTarget;\nexports.default = EventTarget;\n\nmodule.exports = EventTarget\nmodule.exports.EventTarget = module.exports[\"default\"] = EventTarget\nmodule.exports.defineEventAttribute = defineEventAttribute\n//# sourceMappingURL=event-target-shim.js.map\n","/*globals require, self, window */\n\"use strict\"\n\nconst ac = require(\"./dist/abort-controller\")\n\n/*eslint-disable @mysticatea/prettier */\nconst g =\n    typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window :\n    typeof global !== \"undefined\" ? global :\n    /* otherwise */ undefined\n/*eslint-enable @mysticatea/prettier */\n\nif (g) {\n    if (typeof g.AbortController === \"undefined\") {\n        g.AbortController = ac.AbortController\n    }\n    if (typeof g.AbortSignal === \"undefined\") {\n        g.AbortSignal = ac.AbortSignal\n    }\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var query = require('./src/query')\nvar util = require('./src/_util')\nvar parseJSON = require('./src/_json').parseJSON\n\nmodule.exports = util.mergeObjects(\n  {\n    Client: require('./src/Client'),\n    Expr: require('./src/Expr'),\n    PageHelper: require('./src/PageHelper'),\n    RequestResult: require('./src/RequestResult'),\n\n    clientLogger: require('./src/clientLogger'),\n    errors: require('./src/errors'),\n    values: require('./src/values'),\n    query: query,\n    parseJSON: parseJSON,\n  },\n  query\n)\n","'use strict'\n\nvar packageJson = require('../package.json')\nvar PageHelper = require('./PageHelper')\nvar RequestResult = require('./RequestResult')\nvar errors = require('./errors')\nvar http = require('./_http')\nvar json = require('./_json')\nvar query = require('./query')\nvar stream = require('./stream')\nvar util = require('./_util')\nvar values = require('./values')\n\nvar notifyAboutNewVersion = util.notifyAboutNewVersion()\n\n/**\n * The callback that will be executed after every completed request.\n *\n * @callback Client~observerCallback\n * @param {RequestResult} res\n */\n\n/**\n * **WARNING: This is an experimental feature. There are no guarantees to\n * its API stability and/or service availability. DO NOT USE IT IN\n * PRODUCTION**.\n *\n * Creates a subscription to the result of the given read-only expression. When\n * executed, the expression must only perform reads and produce a single\n * streamable type, such as a reference or a version. Expressions that attempt\n * to perform writes or produce non-streamable types will result in an error.\n * Otherwise, any expression can be used to initiate a stream, including\n * user-defined function calls.\n *\n * The subscription returned by this method does not issue any requests until\n * the {@link module:stream~Subscription#start} method is called. Make sure to\n * subscribe to the events of interest, otherwise the received events are simply\n * ignored. For example:\n *\n * ```\n * client.stream(document.ref)\n *   .on('version', version => console.log(version))\n *   .on('error', error => console.log(error))\n *   .start()\n * ```\n *\n * Please note that streams are not temporal, meaning that there is no option to\n * configure its starting timestamp. The stream will, however, state its initial\n * subscription time via the {@link module:stream~Subscription#event:start}\n * event. A common programming mistake is to read a document, then initiate a\n * subscription. This approach can miss events that occurred between the initial\n * read and the subscription request. To prevent event loss, make sure the\n * subscription has started before performing a data load. The following example\n * buffer events until the document's data is loaded:\n *\n * ```\n * var buffer = []\n * var loaded = false\n *\n * client.stream(document.ref)\n *   .on('start', ts => {\n *     loadData(ts).then(data => {\n *       processData(data)\n *       processBuffer(buffer)\n *       loaded = true\n *     })\n *   })\n *   .on('version', version => {\n *     if (loaded) {\n *       processVersion(version)\n *     } else {\n *       buffer.push(version)\n *     }\n *   })\n *   .start()\n * ```\n *\n * The reduce boilerplate, the `document` helper implements a similar\n * functionality, except it discards events prior to the document's snapshot\n * time. The expression given to this helper must be a reference as it\n * internally runs a {@link module:query~Get} call with it. The example above\n * can be rewritten as:\n *\n * ```\n * client.stream.document(document.ref)\n *   .on('snapshot', data => processData(data))\n *   .on('version', version => processVersion(version))\n *   .start()\n * ```\n *\n * Be aware that streams are not available in all browsers. If the client can't\n * initiate a stream, an error event with the {@link\n * module:errors~StreamsNotSupported} error will be emmited.\n *\n * To stop a subscription, call the {@link module:stream~Subscription#close}\n * method:\n *\n * ```\n * var subscription = client.stream(document.ref)\n *   .on('version', version => processVersion(version))\n *   .start()\n *\n * // ...\n * subscription.close()\n * ```\n *\n * @param {module:query~ExprArg} expression\n *   The expression to subscribe to. Created from {@link module:query}\n *   functions.\n *\n * @param {?module:stream~Options} options\n *   Object that configures the stream.\n *\n * @property {function} document\n *  A document stream helper. See {@link Client#stream} for more information.\n *\n * @see module:stream~Subscription\n *\n * @function\n * @name Client#stream\n * @returns {module:stream~Subscription} A new subscription instance.\n */\n\n/**\n * A client for interacting with FaunaDB.\n *\n * Users will mainly call the {@link Client#query} method to execute queries, or\n * the {@link Client#stream} method to subscribe to streams.\n *\n * See the [FaunaDB Documentation](https://fauna.com/documentation) for detailed examples.\n *\n * All methods return promises containing a JSON object that represents the FaunaDB response.\n * Literal types in the response object will remain as strings, Arrays, and objects.\n * FaunaDB types, such as {@link Ref}, {@link SetRef}, {@link FaunaTime}, and {@link FaunaDate} will\n * be converted into the appropriate object.\n *\n * (So if a response contains `{ \"@ref\": \"collections/frogs/123\" }`,\n * it will be returned as `new Ref(\"collections/frogs/123\")`.)\n *\n * @constructor\n * @param {?Object} options\n *   Object that configures this FaunaDB client.\n * @param {?string} options.domain\n *   Base URL for the FaunaDB server.\n * @param {?{ string: string }} options.headers\n *   Base URL for the FaunaDB server.\n * @param {?('http'|'https')} options.scheme\n *   HTTP scheme to use.\n * @param {?number} options.port\n *   Port of the FaunaDB server.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @param {?number} options.timeout Read timeout in seconds.\n * @param {?Client~observerCallback} options.observer\n *   Callback that will be called after every completed request.\n * @param {?boolean} options.keepAlive\n *   Configures http/https keepAlive option (ignored in browser environments)\n * @param {?fetch} options.fetch\n *   a fetch compatible [API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) for making a request\n * @param {?number} options.queryTimeout\n *   Sets the maximum amount of time (in milliseconds) for query execution on the server\n * @param {?number} options.http2SessionIdleTime\n *   Sets the maximum amount of time (in milliseconds) an HTTP2 session may live\n *   when there's no activity. Must either be a non-negative integer, or Infinity to allow the\n *   HTTP2 session to live indefinitely (use `Client#close` to manually terminate the client).\n *   Only applicable for NodeJS environment (when http2 module is used). Default is 500ms;\n *   can also be configured via the FAUNADB_HTTP2_SESSION_IDLE_TIME environment variable\n *   which has the highest priority and overrides the option passed into the Client constructor.\n * @param {?boolean} options.checkNewVersion\n *   Enabled by default. Prints a message to the terminal when a newer driver is available.\n */\nfunction Client(options) {\n  var http2SessionIdleTime = getHttp2SessionIdleTime()\n\n  options = util.applyDefaults(options, {\n    domain: 'db.fauna.com',\n    scheme: 'https',\n    port: null,\n    secret: null,\n    timeout: 60,\n    observer: null,\n    keepAlive: true,\n    headers: {},\n    fetch: undefined,\n    queryTimeout: null,\n    http2SessionIdleTime: http2SessionIdleTime.value,\n    checkNewVersion: true,\n  })\n  notifyAboutNewVersion(options.checkNewVersion)\n\n  if (http2SessionIdleTime.shouldOverride) {\n    options.http2SessionIdleTime = http2SessionIdleTime.value\n  }\n\n  this._observer = options.observer\n  this._http = new http.HttpClient(options)\n  this.stream = stream.StreamAPI(this)\n}\n\n/**\n * Current API version.\n *\n * @type {string}\n */\nClient.apiVersion = packageJson.apiVersion\n\n/**\n * Executes a query via the FaunaDB Query API.\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi),\n * and the query functions in this documentation.\n * @param expression {module:query~ExprArg}\n *   The query to execute. Created from {@link module:query} functions.\n * @param {?Object} options\n *   Object that configures the current query, overriding FaunaDB client options.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @return {external:Promise<Object>} FaunaDB response object.\n */\nClient.prototype.query = function(expression, options) {\n  return this._execute('POST', '', query.wrap(expression), null, options)\n}\n\n/**\n * Returns a {@link PageHelper} for the given Query expression.\n * This provides a helpful API for paginating over FaunaDB responses.\n * @param expression {Expr}\n *   The Query expression to paginate over.\n * @param params {Object}\n *   Options to be passed to the paginate function. See [paginate](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n * @param options {?Object}\n *   Object that configures the current pagination queries, overriding FaunaDB client options.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @returns {PageHelper} A PageHelper that wraps the provided expression.\n */\nClient.prototype.paginate = function(expression, params, options) {\n  params = util.defaults(params, {})\n  options = util.defaults(options, {})\n\n  return new PageHelper(this, expression, params, options)\n}\n\n/**\n * Sends a `ping` request to FaunaDB.\n * @return {external:Promise<string>} Ping response.\n */\nClient.prototype.ping = function(scope, timeout) {\n  return this._execute('GET', 'ping', null, { scope: scope, timeout: timeout })\n}\n\n/**\n * Get the freshest timestamp reported to this client.\n * @returns {number} the last seen transaction time\n */\nClient.prototype.getLastTxnTime = function() {\n  return this._http.getLastTxnTime()\n}\n\n/**\n * Sync the freshest timestamp seen by this client.\n *\n * This has no effect if staler than currently stored timestamp.\n * WARNING: This should be used only when coordinating timestamps across\n *          multiple clients. Moving the timestamp arbitrarily forward into\n *          the future will cause transactions to stall.\n * @param time {number} the last seen transaction time\n */\nClient.prototype.syncLastTxnTime = function(time) {\n  this._http.syncLastTxnTime(time)\n}\n\n/**\n * Closes the client session and cleans up any held resources.\n * By default, it will wait for any ongoing requests to complete on their own;\n * streaming requests are terminated forcibly. Any subsequent requests will\n * error after the .close method is called.\n * Should be used at application termination in order to release any open resources\n * and allow the process to terminate e.g. when the custom http2SessionIdleTime parameter is used.\n *\n * @param {?object} opts Close options.\n * @param {?boolean} opts.force Specifying this property will force any ongoing\n * requests to terminate instead of gracefully waiting until they complete.\n * This may result in an ERR_HTTP2_STREAM_CANCEL error for NodeJS.\n * @returns {Promise<void>}\n */\nClient.prototype.close = function(opts) {\n  return this._http.close(opts)\n}\n\nClient.prototype._execute = function(method, path, data, query, options) {\n  query = util.defaults(query, null)\n\n  if (\n    path instanceof values.Ref ||\n    util.checkInstanceHasProperty(path, '_isFaunaRef')\n  ) {\n    path = path.value\n  }\n\n  if (query !== null) {\n    query = util.removeUndefinedValues(query)\n  }\n\n  var startTime = Date.now()\n  var self = this\n  var body =\n    ['GET', 'HEAD'].indexOf(method) >= 0 ? undefined : JSON.stringify(data)\n\n  return this._http\n    .execute(\n      Object.assign({}, options, {\n        path: path,\n        query: query,\n        method: method,\n        body: body,\n      })\n    )\n    .then(function(response) {\n      var endTime = Date.now()\n      var responseObject = json.parseJSON(response.body)\n      var result = new RequestResult(\n        method,\n        path,\n        query,\n        body,\n        data,\n        response.body,\n        responseObject,\n        response.status,\n        response.headers,\n        startTime,\n        endTime\n      )\n      self._handleRequestResult(response, result, options)\n\n      return responseObject['resource']\n    })\n}\n\nClient.prototype._handleRequestResult = function(response, result, options) {\n  var txnTimeHeaderKey = 'x-txn-time'\n\n  if (response.headers[txnTimeHeaderKey] != null) {\n    this.syncLastTxnTime(parseInt(response.headers[txnTimeHeaderKey], 10))\n  }\n\n  var observers = [this._observer, options && options.observer]\n\n  observers.forEach(observer => {\n    if (typeof observer == 'function') {\n      observer(result, this)\n    }\n  })\n\n  errors.FaunaHTTPError.raiseForStatusCode(result)\n}\n\nfunction getHttp2SessionIdleTime() {\n  var fromEnv = util.getEnvVariable('FAUNADB_HTTP2_SESSION_IDLE_TIME')\n  var parsed =\n    // Allow either \"Infinity\" or parsable integer string.\n    fromEnv === 'Infinity' ? Infinity : parseInt(fromEnv, 10)\n  var useEnvVar = !isNaN(parsed)\n\n  return {\n    shouldOverride: useEnvVar,\n    value: useEnvVar ? parsed : 500,\n  }\n}\n\nmodule.exports = Client\nmodule.exports.resetNotifyAboutNewVersion = function() {\n  notifyAboutNewVersion = util.notifyAboutNewVersion()\n}\n","'use strict'\n\nvar util = require('./_util')\n\n/**\n * A representation of a FaunaDB Query Expression. Generally, you shouldn't need\n * to use this class directly; use the Query helpers defined in {@link module:query}.\n *\n * @param {Object} obj The object that represents a Query to be treated as an Expression.\n * @constructor\n */\nfunction Expr(obj) {\n  this.raw = obj\n}\n\nExpr.prototype._isFaunaExpr = true\n\nExpr.prototype.toJSON = function() {\n  return this.raw\n}\n\nExpr.prototype.toFQL = function() {\n  return exprToString(this.raw)\n}\n\nvar varArgsFunctions = [\n  'Do',\n  'Call',\n  'Union',\n  'Intersection',\n  'Difference',\n  'Equals',\n  'Add',\n  'BitAnd',\n  'BitOr',\n  'BitXor',\n  'Divide',\n  'Max',\n  'Min',\n  'Modulo',\n  'Multiply',\n  'Subtract',\n  'LT',\n  'LTE',\n  'GT',\n  'GTE',\n  'And',\n  'Or',\n]\n\n// FQL function names come across the wire as all lowercase letters\n// (like the key of this object). Not all are properly snake-cased\n// on the Core side, which causes improper capitalizations.\n//\n// JS Driver patch: https://faunadb.atlassian.net/browse/FE-540\n// Core update: https://faunadb.atlassian.net/browse/ENG-2110\n\nvar specialCases = {\n  containsstrregex: 'ContainsStrRegex',\n  endswith: 'EndsWith',\n  findstr: 'FindStr',\n  findstrregex: 'FindStrRegex',\n  gt: 'GT',\n  gte: 'GTE',\n  is_nonempty: 'is_non_empty',\n  lowercase: 'LowerCase',\n  lt: 'LT',\n  lte: 'LTE',\n  ltrim: 'LTrim',\n  ngram: 'NGram',\n  rtrim: 'RTrim',\n  regexescape: 'RegexEscape',\n  replacestr: 'ReplaceStr',\n  replacestrregex: 'ReplaceStrRegex',\n  startswith: 'StartsWith',\n  substring: 'SubString',\n  titlecase: 'TitleCase',\n  uppercase: 'UpperCase',\n}\n\n/**\n *\n * @param {Expr} expression A FQL expression\n * @returns {Boolean} Returns true for valid expressions\n * @private\n */\nfunction isExpr(expression) {\n  return (\n    expression instanceof Expr ||\n    util.checkInstanceHasProperty(expression, '_isFaunaExpr')\n  )\n}\n\n/**\n *\n * @param {Object} obj An object to print\n * @returns {String} String representation of object\n * @private\n */\nfunction printObject(obj) {\n  return (\n    '{' +\n    Object.keys(obj)\n      .map(function(k) {\n        return '\"' + k + '\"' + ': ' + exprToString(obj[k])\n      })\n      .join(', ') +\n    '}'\n  )\n}\n\n/**\n *\n * @param {Array} arr An array to print\n * @param {Function} toStr Function used for stringification\n * @returns {String} String representation of array\n * @private\n */\nfunction printArray(arr, toStr) {\n  return arr\n    .map(function(item) {\n      return toStr(item)\n    })\n    .join(', ')\n}\n\n/**\n *\n * @param {String} fn A snake-case FQL function name\n * @returns {String} The correpsonding camel-cased FQL function name\n * @private\n */\nfunction convertToCamelCase(fn) {\n  // For FQL functions with special formatting concerns, we\n  // use the specialCases object above to define their casing.\n  if (fn in specialCases) fn = specialCases[fn]\n\n  return fn\n    .split('_')\n    .map(function(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1)\n    })\n    .join('')\n}\n\nvar exprToString = function(expr, caller) {\n  // If expr is a Expr, we want to parse expr.raw instead\n  if (isExpr(expr)) {\n    if ('value' in expr) return expr.toString()\n    expr = expr.raw\n  }\n\n  // Return early to avoid extra work if null\n  if (expr === null) {\n    return 'null'\n  }\n\n  // Return stringified value if expression is not an Object or Array\n  switch (typeof expr) {\n    case 'string':\n      return JSON.stringify(expr)\n    case 'symbol':\n    case 'number':\n    case 'boolean':\n      return expr.toString()\n    case 'undefined':\n      return 'undefined'\n  }\n\n  // Handle expression Arrays\n  if (Array.isArray(expr)) {\n    var array = printArray(expr, exprToString)\n    return varArgsFunctions.indexOf(caller) != -1 ? array : '[' + array + ']'\n  }\n\n  // Parse expression Objects\n  if ('match' in expr) {\n    var matchStr = exprToString(expr['match'])\n    var terms = expr['terms'] || []\n\n    if (isExpr(terms)) terms = terms.raw\n\n    if (Array.isArray(terms) && terms.length == 0)\n      return 'Match(' + matchStr + ')'\n\n    if (Array.isArray(terms)) {\n      return (\n        'Match(' + matchStr + ', [' + printArray(terms, exprToString) + '])'\n      )\n    }\n\n    return 'Match(' + matchStr + ', ' + exprToString(terms) + ')'\n  }\n\n  if ('paginate' in expr) {\n    var exprKeys = Object.keys(expr)\n    if (exprKeys.length === 1) {\n      return 'Paginate(' + exprToString(expr['paginate']) + ')'\n    }\n\n    var expr2 = Object.assign({}, expr)\n    delete expr2['paginate']\n\n    return (\n      'Paginate(' +\n      exprToString(expr['paginate']) +\n      ', ' +\n      printObject(expr2) +\n      ')'\n    )\n  }\n\n  if ('let' in expr && 'in' in expr) {\n    var letExpr = ''\n\n    if (Array.isArray(expr['let']))\n      letExpr = '[' + printArray(expr['let'], printObject) + ']'\n    else letExpr = printObject(expr['let'])\n\n    return 'Let(' + letExpr + ', ' + exprToString(expr['in']) + ')'\n  }\n\n  if ('object' in expr) return printObject(expr['object'])\n\n  if ('merge' in expr) {\n    if (expr.lambda) {\n      return (\n        'Merge(' +\n        exprToString(expr.merge) +\n        ', ' +\n        exprToString(expr.with) +\n        ', ' +\n        exprToString(expr.lambda) +\n        ')'\n      )\n    }\n\n    return (\n      'Merge(' + exprToString(expr.merge) + ', ' + exprToString(expr.with) + ')'\n    )\n  }\n\n  if ('lambda' in expr) {\n    return (\n      'Lambda(' +\n      exprToString(expr['lambda']) +\n      ', ' +\n      exprToString(expr['expr']) +\n      ')'\n    )\n  }\n\n  if ('filter' in expr) {\n    return (\n      'Filter(' +\n      exprToString(expr['collection']) +\n      ', ' +\n      exprToString(expr['filter']) +\n      ')'\n    )\n  }\n\n  if ('call' in expr) {\n    return (\n      'Call(' +\n      exprToString(expr['call']) +\n      ', ' +\n      exprToString(expr['arguments']) +\n      ')'\n    )\n  }\n\n  if ('map' in expr) {\n    return (\n      'Map(' +\n      exprToString(expr['collection']) +\n      ', ' +\n      exprToString(expr['map']) +\n      ')'\n    )\n  }\n\n  if ('foreach' in expr) {\n    return (\n      'Foreach(' +\n      exprToString(expr['collection']) +\n      ', ' +\n      exprToString(expr['foreach']) +\n      ')'\n    )\n  }\n\n  var keys = Object.keys(expr)\n  var fn = keys[0]\n  fn = convertToCamelCase(fn)\n\n  // The filter prevents zero arity functions from having a null argument\n  // This only works under the assumptions\n  // that there are no functions where a single 'null' argument makes sense.\n  var args = keys\n    .filter(k => expr[k] !== null || keys.length > 1)\n    .map(k => exprToString(expr[k], fn))\n    .join(', ')\n\n  return fn + '(' + args + ')'\n}\n\nExpr.toString = exprToString\n\nmodule.exports = Expr\n","'use strict'\n\nvar query = require('./query')\nvar objectAssign = require('object-assign')\n\n/**\n * A FaunaDB Lambda expression to be passed into one of the collection\n * functions: Map or Filter.\n *\n * @callback PageHelper~collectionFunction\n * @param {any} var\n *   The variable passed in by FaunaDB when this Lambda\n *   function is executed.\n * @return {Expr}\n *   The FaunaDB query expression to be returned by this Lambda.\n */\n\n/**\n * @callback PageHelper~eachFunction\n * @param {Object} page\n *   A page returned by FaunaDB's Paginate function.\n */\n\n/**\n * A wrapper that provides a helpful API for consuming FaunaDB pages.\n *\n * Generally this is constructed through the {@link Client#paginate} method.\n *\n * The {@link PageHelper#map} and {@link PageHelper#filter} methods will wrap the underlying query with a Map\n * and Filter query function, respectively. These will be executed on the server when a promise-returning function\n * is called.\n *\n * The {@link PageHelper#each} and {@link PageHelper#eachReverse} functions dispatch queries to FaunaDB, and return Promises\n * representing the completion of those queries. The callbacks provided to these functions are executed locally when the\n * queries return.\n *\n * The {@link PageHelper#nextPage} and {@link PageHelper#previousPage} functions also dispatch queries to FaunaDB,\n * but return their responses in a wrapped Promise.\n *\n * @param {Client} client\n *   The FaunaDB client used to paginate.\n * @param {Object} set\n *   The set to paginate.\n * @param {?Object} params\n *   Parameters to be passed to the FaunaDB Paginate function.\n * @param {?Object} options\n *   Object that configures the current pagination, overriding FaunaDB client options.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @constructor\n */\nfunction PageHelper(client, set, params, options) {\n  if (params === undefined) {\n    params = {}\n  }\n\n  if (options === undefined) {\n    options = {}\n  }\n\n  this.reverse = false\n  this.params = {}\n\n  this.before = undefined\n  this.after = undefined\n\n  objectAssign(this.params, params)\n\n  var cursorParams = this.params.cursor || this.params\n\n  if ('before' in cursorParams) {\n    this.before = cursorParams.before\n    delete cursorParams.before\n  } else if ('after' in cursorParams) {\n    this.after = cursorParams.after\n    delete cursorParams.after\n  }\n\n  this.options = {}\n  objectAssign(this.options, options)\n\n  this.client = client\n  this.set = set\n\n  /**\n   * @member {Array.<Function>}\n   * @type {Array.<Function>}\n   * @private\n   */\n  this._faunaFunctions = []\n}\n\n/**\n * Wraps the set to be paginated with a FaunaDB Map function.\n * As this function is executed on the server, the `lambda` param must\n * return a valid query expression.\n *\n * @param {PageHelper~collectionFunction} lambda\n *   The Lambda expression to be passed into the Map function.\n * @return {PageHelper}\n *\n */\nPageHelper.prototype.map = function(lambda) {\n  var rv = this._clone()\n  rv._faunaFunctions.push(function(q) {\n    return query.Map(q, lambda)\n  })\n  return rv\n}\n\n/**\n * Wraps the set to be paginated with a FaunaDB Filter funciton.\n * As this function is executed on the server, the `lambda` param must\n * return a valid query expression.\n *\n * @param {PageHelper~collectionFunction} lambda\n *   The lambda expression to be passed into the Filter function.\n * @return {PageHelper}\n */\nPageHelper.prototype.filter = function(lambda) {\n  var rv = this._clone()\n  rv._faunaFunctions.push(function(q) {\n    return query.Filter(q, lambda)\n  })\n  return rv\n}\n\n/**\n * Executes the provided function for each page.\n *\n * @param {PageHelper~eachFunction} lambda\n *   A function to be executed for each page.\n * @returns {external:Promise.<void>}\n */\nPageHelper.prototype.each = function(lambda) {\n  return this._retrieveNextPage(this.after, false).then(\n    this._consumePages(lambda, false)\n  )\n}\n\n/**\n * Executes the provided function for each page, in the reverse direction.\n * @param {PageHelper~eachFunction} lambda\n * @returns {external:Promise.<void>}\n */\nPageHelper.prototype.eachReverse = function(lambda) {\n  return this._retrieveNextPage(this.before, true).then(\n    this._consumePages(lambda, true)\n  )\n}\n\n/**\n * Queries for the previous page from the current cursor point; this mutates\n * the state of the PageHelper when the query completes, updating the internal\n * cursor state to that of the returned page.\n *\n * @returns {external:Promise.<object>}\n */\nPageHelper.prototype.previousPage = function() {\n  var self = this\n  return this._retrieveNextPage(this.before, true).then(\n    this._adjustCursors.bind(self)\n  )\n}\n\n/**\n * Queries for the next page from the current cursor point; this mutates\n * the state of the PageHelper when the query completes, updating the internal\n * cursor state to that of the returned page.\n *\n * @returns {external:Promise.<object>}\n */\nPageHelper.prototype.nextPage = function() {\n  var self = this\n  return this._retrieveNextPage(this.after, false).then(\n    this._adjustCursors.bind(self)\n  )\n}\n\nPageHelper.prototype._adjustCursors = function(page) {\n  if (page.after !== undefined) {\n    this.after = page.after\n  }\n\n  if (page.before !== undefined) {\n    this.before = page.before\n  }\n\n  return page.data\n}\n\nPageHelper.prototype._consumePages = function(lambda, reverse) {\n  var self = this\n  return function(page) {\n    var data = []\n    page.data.forEach(function(item) {\n      if (item.document) {\n        item.instance = item.document\n      }\n      if (item.value && item.value.document) {\n        item.value.instance = item.value.document\n      }\n      data.push(item)\n    })\n    lambda(data)\n\n    var nextCursor\n    if (reverse) {\n      nextCursor = page.before\n    } else {\n      nextCursor = page.after\n    }\n\n    if (nextCursor !== undefined) {\n      return self\n        ._retrieveNextPage(nextCursor, reverse)\n        .then(self._consumePages(lambda, reverse))\n    } else {\n      return Promise.resolve()\n    }\n  }\n}\n\n/**\n *\n * @returns {external:Promise.<Object>}\n * @private\n */\nPageHelper.prototype._retrieveNextPage = function(cursor, reverse) {\n  var opts = {}\n  objectAssign(opts, this.params)\n  var cursorOpts = opts.cursor || opts\n\n  if (cursor !== undefined) {\n    if (reverse) {\n      cursorOpts.before = cursor\n    } else {\n      cursorOpts.after = cursor\n    }\n  } else {\n    if (reverse) {\n      cursorOpts.before = null\n    }\n  }\n\n  var q = query.Paginate(this.set, opts)\n\n  if (this._faunaFunctions.length > 0) {\n    this._faunaFunctions.forEach(function(lambda) {\n      q = lambda(q)\n    })\n  }\n\n  return this.client.query(q, this.options)\n}\n\n/**\n * @private\n * @returns {PageHelper}\n */\nPageHelper.prototype._clone = function() {\n  return Object.create(PageHelper.prototype, {\n    client: { value: this.client },\n    set: { value: this.set },\n    _faunaFunctions: { value: this._faunaFunctions },\n    before: { value: this.before },\n    after: { value: this.after },\n    params: { value: this.params },\n  })\n}\n\nmodule.exports = PageHelper\n","'use strict'\n\n/**\n * A structure containing the request and response context for a given FaunaDB request.\n * Provided to an observer function optionally defined in the {@link Client} constructor.\n *\n * @param {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} method\n *   The HTTP method used in the request.\n * @param {string} path\n *   The path that was queried. Relative to the client's domain.\n * @param {string} query\n *   URL query parameters. Only set if `method` is \"GET\".\n * @param {Object} requestRaw\n *   The JSON request string.\n * @param {Object} requestContent\n *   The request data.\n * @param {string} responseRaw\n *   The unparsed response data, as a string.\n * @param {object | FaunaHttpErrorResponseContent} responseContent\n *   The response data parsed as JSON.\n * @param {number} statusCode\n *   The HTTP response status code.\n * @param {object} responseHeaders\n *   The HTTP headers returned in the response.\n * @param {number} startTime\n *   The time the request was issued by the client.\n * @param {number} endTime\n *   The time the response was received by the client.\n * @constructor\n */\nfunction RequestResult(\n  method,\n  path,\n  query,\n  requestRaw,\n  requestContent,\n  responseRaw,\n  responseContent,\n  statusCode,\n  responseHeaders,\n  startTime,\n  endTime\n) {\n  /** @type {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} */\n  this.method = method\n\n  /** @type {string} */\n  this.path = path\n\n  /**\n   * URL query. Null unless `method == 'get'`.\n   * *Not* related to {@link Client.query}.\n   * @type {object}\n   */\n  this.query = query\n\n  /** @type {string} */\n  this.requestRaw = requestRaw\n\n  /** @type {object} */\n  this.requestContent = requestContent\n\n  /** @type {string} */\n  this.responseRaw = responseRaw\n\n  /**\n   * Parsed value returned by the server.\n   * Includes \"resource\" wrapper dict, or may be an FaunaHttpErrorResponseContent instead\n   * @type {object | FaunaHttpErrorResponseContent}\n   */\n  this.responseContent = responseContent\n\n  /** @type {number} */\n  this.statusCode = statusCode\n\n  /** @type {object} */\n  this.responseHeaders = responseHeaders\n\n  /** @type {number} */\n  this.startTime = startTime\n\n  /** @type {number} */\n  this.endTime = endTime\n}\n\n/**\n * `this.endTime - this.startTime`: Time taken in milliseconds.\n * @type {number}\n */\nObject.defineProperty(RequestResult.prototype, 'timeTaken', {\n  get: function() {\n    return this.endTime - this.startTime\n  },\n})\n\nmodule.exports = RequestResult\n","'use strict'\nvar util = require('../_util')\n\n/**\n * Thrown by HttpClient when request hits specified timeout.\n *\n * @param {?string} message\n * @extends Error\n * @constructor\n */\nfunction TimeoutError(message) {\n  Error.call(this)\n\n  this.message = message || 'Request aborted due to timeout'\n  this.isTimeoutError = true\n}\n\nutil.inherits(TimeoutError, Error)\n\n/**\n * Thrown by HttpClient when request is aborted via Signal interface.\n *\n * @param {?string} message\n * @extends Error\n * @constructor\n */\nfunction AbortError(message) {\n  Error.call(this)\n\n  this.message = message || 'Request aborted'\n  this.isAbortError = true\n}\n\nutil.inherits(AbortError, Error)\n\nmodule.exports = {\n  TimeoutError: TimeoutError,\n  AbortError: AbortError,\n}\n","'use strict'\nrequire('abort-controller/polyfill')\nvar util = require('../_util')\nvar faunaErrors = require('../errors')\nvar errors = require('./errors')\n\n/**\n * Http client adapter built around fetch API.\n *\n * @constructor\n * @param {?object} options FetchAdapter options.\n * @param {?boolean} options.keepAlive Whether use keep-alive connection.\n * @param {?boolean} options.isHttps Whether use https connection.\n * @param {?function} options.fetch Fetch compatible API.\n * @private\n */\nfunction FetchAdapter(options) {\n  options = options || {}\n\n  /**\n   * Identifies a type of adapter.\n   *\n   * @type {string}\n   */\n  this.type = 'fetch'\n  /**\n   * Indicates whether the .close method has been called.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this._closed = false\n  this._fetch = util.resolveFetch(options.fetch)\n  /**\n   * A map that tracks ongoing requests to be able to cancel them when\n   * the .close method is called.\n   *\n   * @type {Map<Object, Object>}\n   * @private\n   */\n  this._pendingRequests = new Map()\n\n  if (util.isNodeEnv() && options.keepAlive) {\n    this._keepAliveEnabledAgent = new (options.isHttps\n      ? require('https')\n      : require('http')\n    ).Agent({ keepAlive: true })\n  }\n}\n\n/**\n * Issues http requests using fetch API.\n *\n * @param {object} options Request options.\n * @param {string} options.origin Request origin.\n * @param {string} options.path Request path.\n * @param {?object} options.query Request query.\n * @param {string} options.method Request method.\n * @param {?object} options.headers Request headers.\n * @param {?string} options.body Request body utf8 string.\n * @params {?object} options.streamConsumer Stream consumer.\n * @param {?object} options.signal Abort signal object.\n * @param {?number} options.timeout Request timeout.\n * @returns {Promise} Request result.\n */\nFetchAdapter.prototype.execute = function(options) {\n  if (this._closed) {\n    return Promise.reject(\n      new faunaErrors.ClientClosed(\n        'The Client has already been closed',\n        'No subsequent requests can be issued after the .close method is called. ' +\n          'Consider creating a new Client instance'\n      )\n    )\n  }\n\n  var self = this\n  var timerId = null\n  var isStreaming = options.streamConsumer != null\n  // Use timeout only if no signal provided\n  var useTimeout = !options.signal && !!options.timeout\n  var ctrl = new AbortController()\n  var pendingRequest = {\n    isStreaming: isStreaming,\n    isAbortedByClose: false,\n    // This callback can be set during the .close method call to be notified\n    // on request ending to resolve .close's Promise only after all of the requests complete.\n    onComplete: null,\n  }\n\n  self._pendingRequests.set(ctrl, pendingRequest)\n\n  var onComplete = function() {\n    self._pendingRequests.delete(ctrl)\n\n    if (options.signal) {\n      options.signal.removeEventListener('abort', onAbort)\n    }\n\n    if (pendingRequest.onComplete) {\n      pendingRequest.onComplete()\n    }\n  }\n\n  var onSettle = function() {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n  }\n\n  var onResponse = function(response) {\n    onSettle()\n\n    var headers = responseHeadersAsObject(response.headers)\n    var processStream = isStreaming && response.ok\n\n    // Regular request - return text content immediately.\n    if (!processStream) {\n      onComplete()\n\n      return response.text().then(function(content) {\n        return {\n          body: content,\n          headers: headers,\n          status: response.status,\n        }\n      })\n    }\n\n    attachStreamConsumer(response, options.streamConsumer, onComplete)\n\n    return {\n      // Syntactic stream representation.\n      body: '[stream]',\n      headers: headers,\n      status: response.status,\n    }\n  }\n\n  var onError = function(error) {\n    onSettle()\n    onComplete()\n\n    return Promise.reject(\n      remapIfAbortError(error, function() {\n        if (!isStreaming && pendingRequest.isAbortedByClose) {\n          return new faunaErrors.ClientClosed(\n            'The request is aborted due to the Client#close ' +\n              'call with the force=true option'\n          )\n        }\n\n        return useTimeout ? new errors.TimeoutError() : new errors.AbortError()\n      })\n    )\n  }\n\n  var onAbort = function() {\n    ctrl.abort()\n  }\n\n  if (useTimeout) {\n    timerId = setTimeout(function() {\n      timerId = null\n      ctrl.abort()\n    }, options.timeout)\n  }\n\n  if (options.signal) {\n    options.signal.addEventListener('abort', onAbort)\n  }\n\n  return this._fetch(\n    util.formatUrl(options.origin, options.path, options.query),\n    {\n      method: options.method,\n      headers: options.headers,\n      body: options.body,\n      agent: this._keepAliveEnabledAgent,\n      signal: ctrl.signal,\n    }\n  )\n    .then(onResponse)\n    .catch(onError)\n}\n\n/**\n * Moves to the closed state, aborts streaming requests.\n * Aborts non-streaming requests if force is true,\n * waits until they complete otherwise.\n *\n * @param {?object} opts Close options.\n * @param {?boolean} opts.force Whether to force resources clean up.\n * @returns {Promise<void>}\n */\nFetchAdapter.prototype.close = function(opts) {\n  opts = opts || {}\n\n  this._closed = true\n\n  var promises = []\n\n  var abortOrWait = function(pendingRequest, ctrl) {\n    var shouldAbort = pendingRequest.isStreaming || opts.force\n\n    if (shouldAbort) {\n      pendingRequest.isAbortedByClose = true\n\n      return ctrl.abort()\n    }\n\n    promises.push(\n      new Promise(function(resolve) {\n        pendingRequest.onComplete = resolve\n      })\n    )\n  }\n\n  this._pendingRequests.forEach(abortOrWait)\n\n  var noop = function() {}\n\n  return Promise.all(promises).then(noop)\n}\n\n/**\n * Attaches streamConsumer specifically either for browser or NodeJS.\n * Minimum browser compatibility based on current code:\n * Chrome                52\n * Edge                  79\n * Firefox               65\n * IE                    NA\n * Opera                 39\n * Safari                10.1\n * Android Webview       52\n * Chrome for Android    52\n * Firefox for Android   65\n * Opera for Android     41\n * Safari on iOS         10.3\n * Samsung Internet      6.0\n *\n * @param {object} response Fetch response.\n * @param {object} consumer StreamConsumer.\n * @param {function} onComplete Callback fired when the stream ends or errors.\n * @private\n */\nfunction attachStreamConsumer(response, consumer, onComplete) {\n  var onError = function(error) {\n    onComplete()\n    consumer.onError(remapIfAbortError(error))\n  }\n\n  if (util.isNodeEnv()) {\n    response.body\n      .on('error', onError)\n      .on('data', consumer.onData)\n      .on('end', function() {\n        onComplete()\n        // To simulate how browsers behave in case of \"end\" event.\n        consumer.onError(new TypeError('network error'))\n      })\n\n    return\n  }\n\n  // ATTENTION: The following code is meant to run in browsers and is not\n  // covered by current test automation. Manual testing on major browsers\n  // is required after making changes to it.\n  try {\n    var reader = response.body.getReader()\n    var decoder = new TextDecoder('utf-8')\n\n    function pump() {\n      return reader.read().then(function(msg) {\n        if (!msg.done) {\n          var chunk = decoder.decode(msg.value, { stream: true })\n\n          consumer.onData(chunk)\n\n          return pump()\n        }\n\n        onComplete()\n        // In case a browser hasn't thrown the \"network error\" on stream's end\n        // we need to force it in order to provide a way to handle stream's\n        // ending.\n        consumer.onError(new TypeError('network error'))\n      })\n    }\n\n    pump().catch(onError)\n  } catch (err) {\n    throw new faunaErrors.StreamsNotSupported(\n      'Please, consider providing a Fetch API-compatible function ' +\n        'with streamable response bodies. ' +\n        err\n    )\n  }\n}\n\n/**\n * Remaps an AbortError thrown by fetch to HttpClient's one\n * for timeout and abort use-cases.\n *\n * @param {Error} error Error object.\n * @param {?function} errorFactory A factory called to construct an abort error.\n * @returns {Error} Remapped or original error.\n * @private\n */\nfunction remapIfAbortError(error, errorFactory) {\n  var isAbortError = error && error.name === 'AbortError'\n\n  if (!isAbortError) {\n    return error\n  }\n\n  if (errorFactory) {\n    return errorFactory()\n  }\n\n  return new errors.AbortError()\n}\n\n/**\n * Converts fetch Headers object into POJO.\n *\n * @param {object} headers Fetch Headers object.\n * @returns {object} Response headers as a plain object.\n * @private\n */\nfunction responseHeadersAsObject(headers) {\n  var result = {}\n\n  for (var header of headers.entries()) {\n    var key = header[0]\n    var value = header[1]\n\n    result[key] = value\n  }\n\n  return result\n}\n\nmodule.exports = FetchAdapter\n","'use strict'\nvar http2 = require('http2')\nvar errors = require('./errors')\nvar faunaErrors = require('../errors')\nvar util = require('../_util')\n\nvar STREAM_PREFIX = 'stream::'\n\n/**\n * Http client adapter built around NodeJS http2 module.\n *\n * @constructor\n * @param {object} options Http2Adapter options.\n * @param {number} options.http2SessionIdleTime The time (in milliseconds) that\n * an HTTP2 session may live when there's no activity.\n * @private\n */\nfunction Http2Adapter(options) {\n  /**\n   * Identifies a type of adapter.\n   *\n   * @type {string}\n   */\n  this.type = 'http2'\n  /**\n   * Serves for reusing http2 sessions between multiple calls.\n   *\n   * @type {object}\n   * @private\n   */\n  this._sessionMap = {}\n  /**\n   * The time (in ms) that an HTTP2 session may live when there's no activity.\n   *\n   * @type {number}\n   * @private\n   */\n  this._http2SessionIdleTime = options.http2SessionIdleTime\n  /**\n   * Indicates whether the .close method has been called.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this._closed = false\n}\n\n/**\n * Resolves ClientHttp2Session to be reused across multiple requests.\n *\n * @param {string} origin Request origin to connect to.\n * @param {?boolean} isStreaming Whether it's a streaming request. A separate session\n * is created for streaming requests to avoid shared resources with regular\n * ones for the purpose of reliability.\n * @returns {object} An interface to operate with HTTP2 session.\n */\nHttp2Adapter.prototype._resolveSessionFor = function(origin, isStreaming) {\n  var sessionKey = isStreaming ? STREAM_PREFIX + origin : origin\n\n  if (this._sessionMap[sessionKey]) {\n    return this._sessionMap[sessionKey]\n  }\n\n  var self = this\n  var timerId = null\n  var ongoingRequests = 0\n\n  var cleanup = function() {\n    self._cleanupSessionFor(origin, isStreaming)\n  }\n\n  var clearInactivityTimeout = function() {\n    if (timerId) {\n      clearTimeout(timerId)\n      timerId = null\n    }\n  }\n\n  var setInactivityTimeout = function() {\n    clearInactivityTimeout()\n\n    if (self._http2SessionIdleTime === Infinity) {\n      return\n    }\n\n    var onTimeout = function() {\n      timerId = null\n\n      if (ongoingRequests === 0) {\n        cleanup()\n      }\n    }\n\n    timerId = setTimeout(onTimeout, self._http2SessionIdleTime)\n  }\n\n  var close = function(force) {\n    clearInactivityTimeout()\n\n    var shouldDestroy = force || isStreaming\n\n    if (shouldDestroy) {\n      session.destroy()\n\n      return Promise.resolve()\n    }\n\n    return new Promise(function(resolve) {\n      session.close(resolve)\n    })\n  }\n\n  var onRequestStart = function() {\n    ++ongoingRequests\n    clearInactivityTimeout()\n  }\n\n  var onRequestEnd = function() {\n    --ongoingRequests\n\n    var noOngoingRequests = ongoingRequests === 0\n    var isSessionClosed = self._closed || session.closed || session.destroyed\n\n    if (noOngoingRequests && !isSessionClosed) {\n      setInactivityTimeout()\n    }\n  }\n\n  var session = http2\n    .connect(origin)\n    .once('error', cleanup)\n    .once('goaway', cleanup)\n  var sessionInterface = {\n    session: session,\n    close: close,\n    onRequestStart: onRequestStart,\n    onRequestEnd: onRequestEnd,\n  }\n\n  this._sessionMap[sessionKey] = sessionInterface\n\n  return sessionInterface\n}\n\n/**\n * Performs cleanup for broken session.\n *\n * @param {string} origin Request origin to connect to.\n * @param {?boolean} isStreaming Whether it's a streaming request.\n * @returns {void}\n */\nHttp2Adapter.prototype._cleanupSessionFor = function(origin, isStreaming) {\n  var sessionKey = isStreaming ? STREAM_PREFIX + origin : origin\n\n  if (this._sessionMap[sessionKey]) {\n    this._sessionMap[sessionKey].session.close()\n    delete this._sessionMap[sessionKey]\n  }\n}\n\n/**\n * Issues http requests using http2 module.\n *\n * @param {object} options Request options.\n * @param {string} options.origin Request origin.\n * @param {string} options.path Request path.\n * @param {?object} options.query Request query.\n * @param {string} options.method Request method.\n * @param {?object} options.headers Request headers.\n * @param {?string} options.body Request body utf8 string.\n * @params {?object} options.streamConsumer Stream consumer.\n * @param {?object} options.signal Abort signal object.\n * @param {?number} options.timeout Request timeout.\n * @returns {Promise} Request result.\n */\nHttp2Adapter.prototype.execute = function(options) {\n  if (this._closed) {\n    return Promise.reject(\n      new faunaErrors.ClientClosed(\n        'The Client has already been closed',\n        'No subsequent requests can be issued after the .close method is called. ' +\n          'Consider creating a new Client instance'\n      )\n    )\n  }\n\n  var self = this\n  var isStreaming = options.streamConsumer != null\n\n  return new Promise(function(resolvePromise, rejectPromise) {\n    var isPromiseSettled = false\n    var isCanceled = false\n\n    var resolve = function(value) {\n      isPromiseSettled = true\n      resolvePromise(value)\n    }\n\n    // If an error has occurred after the Promise is settled\n    // we need to call streamConsumer.onError instead of reject function.\n    // Possible scenario is aborting request when stream is already being consumed.\n    var rejectOrOnError = function(error) {\n      var remapped = remapHttp2Error({ error, isClosed: self._closed })\n\n      if (isPromiseSettled && isStreaming) {\n        return options.streamConsumer.onError(remapped)\n      }\n\n      isPromiseSettled = true\n      rejectPromise(remapped)\n    }\n\n    var onSettled = function() {\n      sessionInterface.onRequestEnd()\n\n      if (options.signal) {\n        options.signal.removeEventListener('abort', onAbort)\n      }\n    }\n\n    var onError = function(error) {\n      onSettled()\n      rejectOrOnError(error)\n    }\n\n    var onAbort = function() {\n      isCanceled = true\n      onSettled()\n      request.close(http2.constants.NGHTTP2_CANCEL)\n      rejectOrOnError(new errors.AbortError())\n    }\n\n    var onTimeout = function() {\n      isCanceled = true\n      onSettled()\n      request.close(http2.constants.NGHTTP2_CANCEL)\n      rejectOrOnError(new errors.TimeoutError())\n    }\n\n    var onResponse = function(responseHeaders) {\n      var status = responseHeaders[http2.constants.HTTP2_HEADER_STATUS]\n      var isOkStatus = status >= 200 && status < 400\n      var processStream = isOkStatus && isStreaming\n      var responseBody = ''\n\n      var onData = function(chunk) {\n        if (processStream) {\n          return options.streamConsumer.onData(chunk)\n        }\n\n        responseBody += chunk\n      }\n\n      var onEnd = function() {\n        if (!isCanceled) {\n          onSettled()\n        }\n\n        if (!processStream) {\n          return resolve({\n            body: responseBody,\n            headers: responseHeaders,\n            status: status,\n          })\n        }\n\n        // Call .onError with TypeError only if the request hasn't been canceled\n        // and the Client hasn't been closed in order to align on how\n        // FetchAdapter works - it throws the TypeError due to underlying fetch API mechanics.\n        if (!isCanceled && !self._closed) {\n          options.streamConsumer.onError(new TypeError('network error'))\n        }\n      }\n\n      if (processStream) {\n        resolve({\n          // Syntactic stream representation.\n          body: '[stream]',\n          headers: responseHeaders,\n          status: status,\n        })\n      }\n\n      request.on('data', onData).on('end', onEnd)\n    }\n\n    try {\n      var pathname =\n        (options.path[0] === '/' ? options.path : '/' + options.path) +\n        util.querystringify(options.query, '?')\n      var requestHeaders = Object.assign({}, options.headers, {\n        [http2.constants.HTTP2_HEADER_PATH]: pathname,\n        [http2.constants.HTTP2_HEADER_METHOD]: options.method,\n      })\n      var sessionInterface = self._resolveSessionFor(\n        options.origin,\n        isStreaming\n      )\n      var request = sessionInterface.session\n        .request(requestHeaders)\n        .setEncoding('utf8')\n        .on('error', onError)\n        .on('response', onResponse)\n\n      sessionInterface.onRequestStart()\n\n      // Set up timeout only if no signal provided.\n      if (!options.signal && options.timeout) {\n        request.setTimeout(options.timeout, onTimeout)\n      }\n\n      if (options.signal) {\n        options.signal.addEventListener('abort', onAbort)\n      }\n\n      if (options.body != null) {\n        request.write(options.body)\n      }\n\n      request.end()\n    } catch (error) {\n      self._cleanupSessionFor(options.origin, isStreaming)\n      rejectOrOnError(error)\n    }\n  })\n}\n\n/**\n * Moves to the closed state, cleans up ongoing HTTP2 sessions if any.\n *\n * @param {?object} opts Close options.\n * @param {?boolean} opts.force Whether to force resources clean up.\n * @returns {Promise<void>}\n */\nHttp2Adapter.prototype.close = function(opts) {\n  opts = opts || {}\n\n  this._closed = true\n\n  var noop = function() {}\n\n  return Promise.all(\n    Object.values(this._sessionMap).map(function(sessionInterface) {\n      return sessionInterface.close(opts.force)\n    })\n  ).then(noop)\n}\n\n/**\n * Remaps internal NodeJS error into ClientClosed one.\n *\n * @private\n * @param {Error} error Error object.\n * @returns {Error} Remapped error.\n */\nfunction remapHttp2Error({ error, isClosed }) {\n  var shouldRemap =\n    isClosed &&\n    (error.code === 'ERR_HTTP2_GOAWAY_SESSION' ||\n      error.code === 'ERR_HTTP2_STREAM_CANCEL')\n\n  if (shouldRemap) {\n    return new faunaErrors.ClientClosed(\n      'The request is aborted due to the Client#close call'\n    )\n  }\n\n  return error\n}\n\nmodule.exports = Http2Adapter\n","'use strict'\nvar packageJson = require('../../package.json')\nconst { getBrowserOsDetails } = require('../_util')\nvar util = require('../_util')\nvar errors = require('./errors')\n\n/**\n * The driver's internal HTTP client.\n *\n * @constructor\n * @param {Object} options Same as the {@link Client} options.\n * @private\n */\nfunction HttpClient(options) {\n  var isHttps = options.scheme === 'https'\n\n  // If the port is a falsy value - replace it with default one.\n  if (!options.port) {\n    options.port = isHttps ? 443 : 80\n  }\n\n  // HTTP2 adapter is applicable only if it's NodeJS env and\n  // no fetch API override provided (to preserve backward-compatibility).\n  var useHttp2Adapter = !options.fetch && util.isNodeEnv() && isHttp2Supported()\n\n  this._adapter = useHttp2Adapter\n    ? new (require('./http2Adapter'))({\n        http2SessionIdleTime: options.http2SessionIdleTime,\n      })\n    : new (require('./fetchAdapter'))({\n        isHttps: isHttps,\n        fetch: options.fetch,\n        keepAlive: options.keepAlive,\n      })\n  this._baseUrl = options.scheme + '://' + options.domain + ':' + options.port\n  this._secret = options.secret\n  this._headers = Object.assign({}, options.headers, getDefaultHeaders())\n  this._queryTimeout = options.queryTimeout\n  this._lastSeen = null\n  this._timeout = Math.floor(options.timeout * 1000)\n}\n\n/**\n * Returns last seen transaction time.\n *\n * @returns {number} The last seen transaction time.\n */\nHttpClient.prototype.getLastTxnTime = function() {\n  return this._lastSeen\n}\n\n/**\n * Sets the last seen transaction if the given timestamp is greater than then\n * know last seen timestamp.\n *\n * @param {number} time transaction timestamp.\n */\nHttpClient.prototype.syncLastTxnTime = function(time) {\n  if (this._lastSeen == null || this._lastSeen < time) {\n    this._lastSeen = time\n  }\n}\n\n/**\n * Cleans up any held resources.\n *\n * @param {?object} opts Close options.\n * @param {?boolean} opts.force Whether to force resources clean up.\n * @returns {Promise<void>}\n */\nHttpClient.prototype.close = function(opts) {\n  return this._adapter.close(opts)\n}\n\n/**\n * Executes an HTTP request.\n *\n * @param {?object} options Request parameters.\n * @param {?string} options.method Request method.\n * @param {?string} options.path Request path.\n * @param {?string} options.body Request body.\n * @param {?object} options.query Request query.\n * @params {?object} options.streamConsumer Stream consumer, if presented\n * the request will be \"streamed\" into streamConsumer.onData function.\n * @params {function} options.streamConsumer.onData Function called with a chunk of data.\n * @params {function} options.streamConsumer.onError Function called\n * when an error occurred.\n * when the stream is ended.\n * @param {?object} options.signal Abort signal object.\n * @param {?object} options.fetch Fetch API compatible function.\n * @param {?object} options.secret FaunaDB secret.\n * @param {?object} options.queryTimeout FaunaDB query timeout.\n * @returns {Promise} The response promise.\n */\nHttpClient.prototype.execute = function(options) {\n  options = options || {}\n\n  var invalidStreamConsumer =\n    options.streamConsumer &&\n    (typeof options.streamConsumer.onData !== 'function' ||\n      typeof options.streamConsumer.onError !== 'function')\n\n  if (invalidStreamConsumer) {\n    return Promise.reject(new TypeError('Invalid \"streamConsumer\" provided'))\n  }\n\n  var secret = options.secret || this._secret\n  var queryTimeout = options.queryTimeout || this._queryTimeout\n  var headers = this._headers\n\n  headers['Authorization'] = secret && secretHeader(secret)\n  headers['X-Last-Seen-Txn'] = this._lastSeen\n  headers['X-Query-Timeout'] = queryTimeout\n\n  return this._adapter.execute({\n    origin: this._baseUrl,\n    path: options.path || '/',\n    query: options.query,\n    method: options.method || 'GET',\n    headers: util.removeNullAndUndefinedValues(headers),\n    body: options.body,\n    signal: options.signal,\n    timeout: this._timeout,\n    streamConsumer: options.streamConsumer,\n  })\n}\n\nfunction secretHeader(secret) {\n  return 'Bearer ' + secret\n}\n\n/** @ignore */\nfunction getDefaultHeaders() {\n  var driverEnv = {\n    driver: ['javascript', packageJson.version].join('-'),\n  }\n\n  var isServiceWorker\n\n  try {\n    isServiceWorker = global instanceof ServiceWorkerGlobalScope\n  } catch (error) {\n    isServiceWorker = false\n  }\n\n  try {\n    if (util.isNodeEnv()) {\n      driverEnv.runtime = ['nodejs', process.version].join('-')\n      driverEnv.env = util.getNodeRuntimeEnv()\n      var os = require('os')\n      driverEnv.os = [os.platform(), os.release()].join('-')\n    } else if (isServiceWorker) {\n      driverEnv.runtime = 'Service Worker'\n    } else {\n      driverEnv.runtime = util.getBrowserDetails()\n      driverEnv.env = 'browser'\n      driverEnv.os = getBrowserOsDetails()\n    }\n  } catch (_) {}\n\n  var headers = {\n    'X-FaunaDB-API-Version': packageJson.apiVersion,\n  }\n\n  // TODO: api cors must be enabled to accept header X-Driver-Env\n  if (util.isNodeEnv()) {\n    headers['X-Driver-Env'] = Object.keys(driverEnv)\n      .map(key => [key, driverEnv[key].toLowerCase()].join('='))\n      .join('; ')\n  }\n  return headers\n}\n\nfunction isHttp2Supported() {\n  try {\n    require('http2')\n\n    return true\n  } catch (_) {\n    return false\n  }\n}\n\nmodule.exports = {\n  HttpClient: HttpClient,\n  TimeoutError: errors.TimeoutError,\n  AbortError: errors.AbortError,\n}\n","'use strict'\n\nvar values = require('./values')\n\nfunction toJSON(object, pretty) {\n  pretty = typeof pretty !== 'undefined' ? pretty : false\n\n  if (pretty) {\n    return JSON.stringify(object, null, '  ')\n  } else {\n    return JSON.stringify(object)\n  }\n}\n\nfunction parseJSON(json) {\n  return JSON.parse(json, json_parse)\n}\n\n/*\n * Parses a line-separated JSON stream. For backwards compatibility with\n * concatenated JSON objects, it attempts to parse the received content as a\n * JSON object. Failures should occur when partial or multiple line-separated\n * JSON objects are received. Upon a parsing failure, attempt paring the\n * received content as line-separated JSON objects.\n *\n * See https://en.wikipedia.org/wiki/JSON_streaming#Line-delimited_JSON\n * See https://en.wikipedia.org/wiki/JSON_streaming#Concatenated_JSON\n *\n * @private\n */\nfunction parseJSONStreaming(content) {\n  var values = []\n\n  try {\n    values.push(parseJSON(content))\n    content = '' // whole content parsed\n  } catch (err) {\n    while (true) {\n      var pos = content.indexOf('\\n') + 1 // include \\n\n      if (pos <= 0) {\n        break\n      }\n      var slice = content.slice(0, pos).trim()\n      if (slice.length > 0) {\n        // discards empty slices due to leading \\n\n        values.push(parseJSON(slice))\n      }\n      content = content.slice(pos)\n    }\n  }\n\n  return {\n    values: values,\n    buffer: content,\n  }\n}\n\nfunction json_parse(_, val) {\n  if (typeof val !== 'object' || val === null) {\n    return val\n  } else if ('@ref' in val) {\n    var ref = val['@ref']\n\n    if (!('collection' in ref) && !('database' in ref)) {\n      return values.Native.fromName(ref['id'])\n    }\n\n    var col = json_parse('collection', ref['collection'])\n    var db = json_parse('database', ref['database'])\n\n    return new values.Ref(ref['id'], col, db)\n  } else if ('@obj' in val) {\n    return val['@obj']\n  } else if ('@set' in val) {\n    return new values.SetRef(val['@set'])\n  } else if ('@ts' in val) {\n    return new values.FaunaTime(val['@ts'])\n  } else if ('@date' in val) {\n    return new values.FaunaDate(val['@date'])\n  } else if ('@bytes' in val) {\n    return new values.Bytes(val['@bytes'])\n  } else if ('@query' in val) {\n    return new values.Query(val['@query'])\n  } else {\n    return val\n  }\n}\n\nmodule.exports = {\n  toJSON: toJSON,\n  parseJSON: parseJSON,\n  parseJSONStreaming: parseJSONStreaming,\n}\n","'use strict'\n\nvar packageJson = require('../package.json')\nvar chalk = require('chalk')\nvar boxen = require('boxen')\n\nvar crossGlobal =\n  typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof global !== 'undefined'\n    ? global\n    : self\n\n/**\n * Inherit the prototype methods from one constructor into another.\n * Source: https://github.com/kaelzhang/node-util-inherits\n * @param {function} ctor Constructor function which needs to inherit the prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n * @private\n */\nfunction inherits(ctor, superCtor) {\n  if (ctor === undefined || ctor === null) {\n    throw new TypeError(\n      'The constructor to \"inherits\" must not be null or undefined'\n    )\n  }\n\n  if (superCtor === undefined || superCtor === null) {\n    throw new TypeError(\n      'The super constructor to \"inherits\" must not be null or undefined'\n    )\n  }\n\n  if (superCtor.prototype === undefined) {\n    throw new TypeError(\n      'The super constructor to \"inherits\" must have a prototype'\n    )\n  }\n\n  ctor.super_ = superCtor\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true,\n    },\n  })\n}\n\n/**\n * Determines if the current environment is a NodeJS environment.\n * @private\n */\nfunction isNodeEnv() {\n  return (\n    typeof window === 'undefined' &&\n    typeof process !== 'undefined' &&\n    process.versions != null &&\n    process.versions.node != null\n  )\n}\n\n/**\n * Resolves environment variable if available.\n *\n * @param {string} envKey A name of env variable.\n * @return {void|string} Returns requested env variable or void.\n * @private\n */\nfunction getEnvVariable(envKey) {\n  var areEnvVarsAvailable = !!(\n    typeof process !== 'undefined' &&\n    process &&\n    process.env\n  )\n\n  if (areEnvVarsAvailable && process.env[envKey] != null) {\n    return process.env[envKey]\n  }\n}\n\n/**\n * JavaScript Client Detection\n * @private\n */\nfunction getBrowserDetails() {\n  var browser = navigator.appName\n  var browserVersion = '' + parseFloat(navigator.appVersion)\n  var nameOffset, verOffset, ix\n\n  // Opera\n  if ((verOffset = navigator.userAgent.indexOf('Opera')) != -1) {\n    browser = 'Opera'\n    browserVersion = navigator.userAgent.substring(verOffset + 6)\n    if ((verOffset = navigator.userAgent.indexOf('Version')) != -1) {\n      browserVersion = navigator.userAgent.substring(verOffset + 8)\n    }\n  }\n  // MSIE\n  else if ((verOffset = navigator.userAgent.indexOf('MSIE')) != -1) {\n    browser = 'Microsoft Internet Explorer'\n    browserVersion = navigator.userAgent.substring(verOffset + 5)\n  }\n\n  //IE 11 no longer identifies itself as MS IE, so trap it\n  //http://stackoverflow.com/questions/17907445/how-to-detect-ie11\n  else if (\n    browser == 'Netscape' &&\n    navigator.userAgent.indexOf('Trident/') != -1\n  ) {\n    browser = 'Microsoft Internet Explorer'\n    browserVersion = navigator.userAgent.substring(verOffset + 5)\n    if ((verOffset = navigator.userAgent.indexOf('rv:')) != -1) {\n      browserVersion = navigator.userAgent.substring(verOffset + 3)\n    }\n  }\n\n  // Chrome\n  else if ((verOffset = navigator.userAgent.indexOf('Chrome')) != -1) {\n    browser = 'Chrome'\n    browserVersion = navigator.userAgent.substring(verOffset + 7)\n  }\n  // Safari\n  else if ((verOffset = navigator.userAgent.indexOf('Safari')) != -1) {\n    browser = 'Safari'\n    browserVersion = navigator.userAgent.substring(verOffset + 7)\n    if ((verOffset = navigator.userAgent.indexOf('Version')) != -1) {\n      browserVersion = navigator.userAgent.substring(verOffset + 8)\n    }\n\n    // Chrome on iPad identifies itself as Safari. Actual results do not match what Google claims\n    //  at: https://developers.google.com/chrome/mobile/docs/user-agent?hl=ja\n    //  No mention of chrome in the user agent string. However it does mention CriOS, which presumably\n    //  can be keyed on to detect it.\n    if (navigator.userAgent.indexOf('CriOS') != -1) {\n      //Chrome on iPad spoofing Safari...correct it.\n      browser = 'Chrome'\n      //Don't believe there is a way to grab the accurate version number, so leaving that for now.\n    }\n  }\n  // Firefox\n  else if ((verOffset = navigator.userAgent.indexOf('Firefox')) != -1) {\n    browser = 'Firefox'\n    browserVersion = navigator.userAgent.substring(verOffset + 8)\n  }\n  // Other browsers\n  else if (\n    (nameOffset = navigator.userAgent.lastIndexOf(' ') + 1) <\n    (verOffset = navigator.userAgent.lastIndexOf('/'))\n  ) {\n    browser = navigator.userAgent.substring(nameOffset, verOffset)\n    browserVersion = navigator.userAgent.substring(verOffset + 1)\n    if (browser.toLowerCase() == browser.toUpperCase()) {\n      browser = navigator.appName\n    }\n  }\n  // trim the browser version string\n  if ((ix = browserVersion.indexOf(';')) != -1)\n    browserVersion = browserVersion.substring(0, ix)\n  if ((ix = browserVersion.indexOf(' ')) != -1)\n    browserVersion = browserVersion.substring(0, ix)\n  if ((ix = browserVersion.indexOf(')')) != -1)\n    browserVersion = browserVersion.substring(0, ix)\n\n  return [browser, browserVersion].join('-')\n}\n\nfunction getBrowserOsDetails() {\n  var os = 'unknown'\n  var clientStrings = [\n    { s: 'Windows 10', r: /(Windows 10.0|Windows NT 10.0)/ },\n    { s: 'Windows 8.1', r: /(Windows 8.1|Windows NT 6.3)/ },\n    { s: 'Windows 8', r: /(Windows 8|Windows NT 6.2)/ },\n    { s: 'Windows 7', r: /(Windows 7|Windows NT 6.1)/ },\n    { s: 'Windows Vista', r: /Windows NT 6.0/ },\n    { s: 'Windows Server 2003', r: /Windows NT 5.2/ },\n    { s: 'Windows XP', r: /(Windows NT 5.1|Windows XP)/ },\n    { s: 'Windows 2000', r: /(Windows NT 5.0|Windows 2000)/ },\n    { s: 'Windows ME', r: /(Win 9x 4.90|Windows ME)/ },\n    { s: 'Windows 98', r: /(Windows 98|Win98)/ },\n    { s: 'Windows 95', r: /(Windows 95|Win95|Windows_95)/ },\n    { s: 'Windows NT 4.0', r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ },\n    { s: 'Windows CE', r: /Windows CE/ },\n    { s: 'Windows 3.11', r: /Win16/ },\n    { s: 'Android', r: /Android/ },\n    { s: 'Open BSD', r: /OpenBSD/ },\n    { s: 'Sun OS', r: /SunOS/ },\n    { s: 'Chrome OS', r: /CrOS/ },\n    { s: 'Linux', r: /(Linux|X11(?!.*CrOS))/ },\n    { s: 'iOS', r: /(iPhone|iPad|iPod)/ },\n    { s: 'Mac OS X', r: /Mac OS X/ },\n    { s: 'Mac OS', r: /(Mac OS|MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },\n    { s: 'QNX', r: /QNX/ },\n    { s: 'UNIX', r: /UNIX/ },\n    { s: 'BeOS', r: /BeOS/ },\n    { s: 'OS/2', r: /OS\\/2/ },\n    {\n      s: 'Search Bot',\n      r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/,\n    },\n  ]\n  for (var id in clientStrings) {\n    var cs = clientStrings[id]\n    if (cs.r.test(navigator.userAgent)) {\n      os = cs.s\n      break\n    }\n  }\n\n  var osVersion = 'unknown'\n\n  if (/Windows/.test(os)) {\n    osVersion = /Windows (.*)/.exec(os)[1]\n    os = 'Windows'\n  }\n\n  switch (os) {\n    case 'Mac OS':\n    case 'Mac OS X':\n    case 'Android':\n      osVersion = /(?:Android|Mac OS|Mac OS X|MacPPC|MacIntel|Mac_PowerPC|Macintosh) ([\\.\\_\\d]+)/.exec(\n        navigator.userAgent\n      )[1]\n      break\n\n    case 'iOS':\n      osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(navigator.appVersion)\n      osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0)\n      break\n  }\n  return [os, osVersion].join('-')\n}\n\n/**\n * For checking process.env always use `hasOwnProperty`\n * Some providers could throw an error when trying to access env variables that does not exists\n * @private */\nfunction getNodeRuntimeEnv() {\n  var runtimeEnvs = [\n    {\n      name: 'Netlify',\n      check: function() {\n        return process.env.hasOwnProperty('NETLIFY_IMAGES_CDN_DOMAIN')\n      },\n    },\n    {\n      name: 'Vercel',\n      check: function() {\n        return process.env.hasOwnProperty('VERCEL')\n      },\n    },\n    {\n      name: 'Heroku',\n      check: function() {\n        return (\n          process.env.hasOwnProperty('PATH') &&\n          process.env.PATH.indexOf('.heroku') !== -1\n        )\n      },\n    },\n    {\n      name: 'AWS Lambda',\n      check: function() {\n        return process.env.hasOwnProperty('AWS_LAMBDA_FUNCTION_VERSION')\n      },\n    },\n    {\n      name: 'GCP Cloud Functions',\n      check: function() {\n        return (\n          process.env.hasOwnProperty('_') &&\n          process.env._.indexOf('google') !== -1\n        )\n      },\n    },\n    {\n      name: 'GCP Compute Instances',\n      check: function() {\n        return process.env.hasOwnProperty('GOOGLE_CLOUD_PROJECT')\n      },\n    },\n    {\n      name: 'Azure Cloud Functions',\n      check: function() {\n        return process.env.hasOwnProperty(\n          'WEBSITE_FUNCTIONS_AZUREMONITOR_CATEGORIES'\n        )\n      },\n    },\n    {\n      name: 'Azure Compute',\n      check: function() {\n        return (\n          process.env.hasOwnProperty('ORYX_ENV_TYPE') &&\n          process.env.hasOwnProperty('WEBSITE_INSTANCE_ID') &&\n          process.env.ORYX_ENV_TYPE === 'AppService'\n        )\n      },\n    },\n    {\n      name: 'Mongo Stitch',\n      check: function() {\n        return typeof crossGlobal.StitchError === 'function'\n      },\n    },\n    {\n      name: 'Render',\n      check: function() {\n        return process.env.hasOwnProperty('RENDER_SERVICE_ID')\n      },\n    },\n    {\n      name: 'Begin',\n      check: function() {\n        return process.env.hasOwnProperty('BEGIN_DATA_SCOPE_ID')\n      },\n    },\n  ]\n  var detectedEnv = runtimeEnvs.find(env => env.check())\n\n  return detectedEnv ? detectedEnv.name : 'unknown'\n}\n\n/**\n * If defined, returns the given value. Otherwise, returns the default value.\n * @param {any} obj The given value.\n * @param {any} def The default value.\n * @private\n */\nfunction defaults(obj, def) {\n  if (obj === undefined) {\n    return def\n  } else {\n    return obj\n  }\n}\n\n/**\n * Used for functions that take an options objects.\n * Fills in defaults for options not provided.\n * Throws errors for provided options that aren't recognized.\n * A default value of `undefined` is used to indicate that the option must be provided.\n * @private\n */\nfunction applyDefaults(provided, defaults) {\n  var out = {}\n\n  for (var providedKey in provided) {\n    if (!(providedKey in defaults)) {\n      throw new Error('No such option ' + providedKey)\n    }\n    out[providedKey] = provided[providedKey]\n  }\n\n  for (var defaultsKey in defaults) {\n    if (!(defaultsKey in out)) {\n      out[defaultsKey] = defaults[defaultsKey]\n    }\n  }\n\n  return out\n}\n\n/**\n * Returns a new object without any keys where the value would be null or undefined.\n * @private\n * */\nfunction removeNullAndUndefinedValues(object) {\n  var res = {}\n  for (var key in object) {\n    var val = object[key]\n    if (val !== null && val !== undefined) {\n      res[key] = val\n    }\n  }\n  return res\n}\n\n/**\n * Returns a new object without any keys where the value would be undefined.\n * @private\n * */\nfunction removeUndefinedValues(object) {\n  var res = {}\n  for (var key in object) {\n    var val = object[key]\n    if (val !== undefined) {\n      res[key] = val\n    }\n  }\n  return res\n}\n\n/**\n * Returns a boolean stating if the given object has a given property\n * @private\n * */\nfunction checkInstanceHasProperty(obj, prop) {\n  return typeof obj === 'object' && obj !== null && Boolean(obj[prop])\n}\n\nfunction formatUrl(base, path, query) {\n  query = typeof query === 'object' ? querystringify(query) : query\n  return [\n    base,\n    path ? (path.charAt(0) === '/' ? '' : '/' + path) : '',\n    query ? (query.charAt(0) === '?' ? '' : '?' + query) : '',\n  ].join('')\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || ''\n\n  var pairs = [],\n    value,\n    key\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?'\n\n  for (key in obj) {\n    if (checkInstanceHasProperty(obj, key)) {\n      value = obj[key]\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undefined || isNaN(value))) {\n        value = ''\n      }\n\n      key = encode(key)\n      value = encode(value)\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue\n      pairs.push(key + '=' + value)\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : ''\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input)\n  } catch (e) {\n    return null\n  }\n}\n\n/**\n * Merge two objects into one\n * @param obj1\n * @param obj2\n * @returns obj3 a new object based on obj1 and obj2\n */\nfunction mergeObjects(obj1, obj2) {\n  var obj3 = {}\n  for (var attrname in obj1) {\n    obj3[attrname] = obj1[attrname]\n  }\n  for (var attrname in obj2) {\n    obj3[attrname] = obj2[attrname]\n  }\n  return obj3\n}\n\n/**\n * Resolves which Fetch API compatible function to use. If an override is\n * provided, returns the override. If no override and the global (window) has\n * \"fetch\" property, return the native fetch. Otherwise returns the cross-fetch polyfill.\n *\n * @param {?function} fetchOverride An Fetch API compatible function to use.\n * @returns {function} A Fetch API compatible function.\n * @private\n */\nfunction resolveFetch(fetchOverride) {\n  if (typeof fetchOverride === 'function') {\n    return fetchOverride\n  }\n\n  if (typeof crossGlobal.fetch === 'function') {\n    // NB. Rebinding to global is needed for Safari\n    return crossGlobal.fetch.bind(crossGlobal)\n  }\n\n  return require('cross-fetch')\n}\n\nfunction notifyAboutNewVersion() {\n  var isNotified\n  const checkAndNotify = checkNewVersion => {\n    if (!isNodeEnv() || isNotified || !checkNewVersion) return\n    function onResponse(latestVersion) {\n      var isNewVersionAvailable = latestVersion > packageJson.version\n      if (isNewVersionAvailable) {\n        console.info(\n          boxen(\n            'New ' +\n              packageJson.name +\n              ' version available ' +\n              chalk.dim(packageJson.version) +\n              chalk.reset(' → ') +\n              chalk.green(latestVersion) +\n              `\\nChangelog: https://github.com/${packageJson.repository}/blob/main/CHANGELOG.md`,\n            { padding: 1, borderColor: 'yellow' }\n          )\n        )\n      }\n    }\n\n    isNotified = true\n    resolveFetch()('https://registry.npmjs.org/' + packageJson.name)\n      .then(resp => resp.json())\n      .then(json => onResponse(json['dist-tags'].latest))\n      .catch(err => {\n        console.error('Unable to check new driver version')\n        console.error(err)\n      })\n  }\n\n  return checkAndNotify\n}\n\nmodule.exports = {\n  notifyAboutNewVersion: notifyAboutNewVersion,\n  crossGlobal: crossGlobal,\n  mergeObjects: mergeObjects,\n  formatUrl: formatUrl,\n  querystringify: querystringify,\n  inherits: inherits,\n  isNodeEnv: isNodeEnv,\n  getEnvVariable: getEnvVariable,\n  defaults: defaults,\n  applyDefaults: applyDefaults,\n  removeNullAndUndefinedValues: removeNullAndUndefinedValues,\n  removeUndefinedValues: removeUndefinedValues,\n  checkInstanceHasProperty: checkInstanceHasProperty,\n  getBrowserDetails: getBrowserDetails,\n  getBrowserOsDetails: getBrowserOsDetails,\n  getNodeRuntimeEnv: getNodeRuntimeEnv,\n  resolveFetch: resolveFetch,\n}\n","'use strict'\n\nvar json = require('./_json')\n\n/**\n * Functions to assist with debug logging.\n * @module clientLogger\n */\n\n/**\n * A user provided log line handler.\n *\n * @callback loggerCallback\n * @param {string} logged\n */\n\n/**\n * Function that can be the `observer` for a {@link Client}.\n * Will call `loggerFunction` with a string representation of each {@link RequestResult}.\n *\n * An example logging string:\n * ```plain\n * Fauna POST /\n * Request JSON: {\n *   \"data\": ...\n * }\n * Response headers: {\n *    \"x-faunadb-host\": ...,\n *    \"x-faunadb-build\": ...,\n *    \"connection\": \"close\",\n *    \"content-length\": ...,\n *    \"content-type\": \"application/json;charset=utf-8\"\n *  }\n * Response JSON: {\n *    \"resource\": {\n *      \"ref\": { ... },\n *      \"class\": { ... },\n *      \"ts\": ...\n *    }\n *  }\n * Response (201): Network latency 13ms\n * ```\n *\n * @param {loggerCallback} loggerFunction\n * @return {Client~observerCallback}\n * @example\n * var client = new Client({\n *   ... other options ...\n *   observer: logger(console.log)\n * })\n * client.ping() // Logs the request and response.\n */\nfunction logger(loggerFunction) {\n  return function(requestResult, client) {\n    return loggerFunction(showRequestResult(requestResult), client)\n  }\n}\n\n/**\n * Convenience function used by {@link logger} to transform a {@link RequestResult}\n * to a string for logging.\n * @param {RequestResult} requestResult\n * @returns {string} string to be logged.\n */\nfunction showRequestResult(requestResult) {\n  var query = requestResult.query,\n    method = requestResult.method,\n    path = requestResult.path,\n    requestContent = requestResult.requestContent,\n    responseHeaders = requestResult.responseHeaders,\n    responseContent = requestResult.responseContent,\n    statusCode = requestResult.statusCode,\n    timeTaken = requestResult.timeTaken\n\n  var out = ''\n\n  function log(str) {\n    out = out + str\n  }\n\n  log('Fauna ' + method + ' /' + path + _queryString(query) + '\\n')\n  if (requestContent != null) {\n    log('  Request JSON: ' + _showJSON(requestContent) + '\\n')\n  }\n  log('  Response headers: ' + _showJSON(responseHeaders) + '\\n')\n  log('  Response JSON: ' + _showJSON(responseContent) + '\\n')\n  log('  Response (' + statusCode + '): Network latency ' + timeTaken + 'ms\\n')\n\n  return out\n}\n\nfunction _indent(str) {\n  var indentStr = '  '\n  return str.split('\\n').join('\\n' + indentStr)\n}\n\nfunction _showJSON(object) {\n  return _indent(json.toJSON(object, true))\n}\n\nfunction _queryString(query) {\n  if (query == null) {\n    return ''\n  }\n\n  var keys = Object.keys(query)\n  if (keys.length === 0) {\n    return ''\n  }\n\n  var pairs = keys.map(function(key) {\n    return key + '=' + query[key]\n  })\n  return '?' + pairs.join('&')\n}\n\nmodule.exports = {\n  logger: logger,\n  showRequestResult: showRequestResult,\n}\n","'use strict'\n\nvar util = require('./_util')\n\n/**\n * FaunaDB error types. Request errors can originate from the client (e.g. bad\n * method parameters) or from the FaunaDB Server (e.g. invalid queries,\n * timeouts.) Server errors will subclass {@link module:errors~FaunaHTTPError}.\n * Stream errors will subclass {@link module:errors~StreamError}.\n *\n * @module errors\n */\n\n/**\n * The base exception type for all FaunaDB errors.\n *\n * @param {string} message\n * @extends Error\n * @constructor\n */\nfunction FaunaError(name, message, description) {\n  Error.call(this)\n\n  /**\n   * Name of this exception.\n   * @type {string}\n   */\n  this.name = name\n\n  /**\n   * Message for this exception.\n   * @type {string}\n   */\n  this.message = message\n\n  /**\n   * Description for this exception.\n   * @type {string}\n   */\n  this.description = description\n}\n\nutil.inherits(FaunaError, Error)\n\n/**\n * Exception thrown by this client library when an invalid\n * value is provided as a function argument.\n *\n * @extends module:errors~FaunaError\n * @constructor\n */\nfunction InvalidValue(message) {\n  FaunaError.call(this, 'InvalidValue', message)\n}\n\nutil.inherits(InvalidValue, FaunaError)\n\n/**\n * Exception thrown by this client library when an invalid\n * value is provided as a function argument.\n *\n * @extends module:errors~FaunaError\n * @constructor\n */\nfunction InvalidArity(min, max, actual, callerFunc) {\n  var arityInfo = `${callerFunc} function requires ${messageForArity(\n    min,\n    max\n  )} argument(s) but ${actual} were given`\n  var documentationLink = logDocumentationLink(callerFunc)\n\n  FaunaError.call(this, 'InvalidArity', `${arityInfo}\\n${documentationLink}`)\n\n  /**\n   * Minimum number of arguments.\n   * @type {number}\n   */\n  this.min = min\n\n  /**\n   * Maximum number of arguments.\n   * @type {number}\n   */\n  this.max = max\n\n  /**\n   * Actual number of arguments called with.\n   * @type {number}\n   */\n  this.actual = actual\n\n  function messageForArity(min, max) {\n    if (max === null) return 'at least ' + min\n    if (min === null) return 'up to ' + max\n    if (min === max) return min\n    return 'from ' + min + ' to ' + max\n  }\n\n  function logDocumentationLink(functionName) {\n    var docsURL = 'https://docs.fauna.com/fauna/current/api/fql/functions/'\n    return `For more info, see the docs: ${docsURL}${functionName.toLowerCase()}`\n  }\n}\n\nutil.inherits(InvalidArity, FaunaError)\n\n/**\n * Base exception type for errors returned by the FaunaDB server.\n *\n * @param {RequestResult} requestResult\n *\n * @extends module:errors~FaunaError\n * @constructor\n */\nfunction FaunaHTTPError(name, requestResult) {\n  var response = requestResult.responseContent\n  var errors = response.errors\n  var message = errors.length === 0 ? '(empty \"errors\")' : errors[0].code\n  var description =\n    errors.length === 0 ? '(empty \"errors\")' : errors[0].description\n  FaunaError.call(this, name, message, description)\n\n  /**\n   * A wrapped {@link RequestResult} object, containing the request and response\n   * context of the failed request.\n   *\n   * @type {RequestResult}\n   */\n  this.requestResult = requestResult\n}\n\nutil.inherits(FaunaHTTPError, FaunaError)\n\n/**\n * Convenience method to return the errors from the response object.\n *\n * @returns {Object}\n */\nFaunaHTTPError.prototype.errors = function() {\n  return this.requestResult.responseContent.errors\n}\n\n/**\n * Takes a {@link RequestResult} and throws an appropriate exception if\n * it contains a failed request.\n *\n * @param requestResult {RequestResult}\n */\nFaunaHTTPError.raiseForStatusCode = function(requestResult) {\n  var code = requestResult.statusCode\n  if (code < 200 || code >= 300) {\n    switch (code) {\n      case 400:\n        throw new BadRequest(requestResult)\n      case 401:\n        throw new Unauthorized(requestResult)\n      case 403:\n        throw new PermissionDenied(requestResult)\n      case 404:\n        throw new NotFound(requestResult)\n      case 405:\n        throw new MethodNotAllowed(requestResult)\n      case 429:\n        throw new TooManyRequests(requestResult)\n      case 500:\n        throw new InternalError(requestResult)\n      case 503:\n        throw new UnavailableError(requestResult)\n      default:\n        throw new FaunaHTTPError('UnknownError', requestResult)\n    }\n  }\n}\n\n/**\n * A HTTP 400 error.\n *\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction BadRequest(requestResult) {\n  FaunaHTTPError.call(this, 'BadRequest', requestResult)\n}\n\nutil.inherits(BadRequest, FaunaHTTPError)\n\n/**\n * A HTTP 401 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction Unauthorized(requestResult) {\n  FaunaHTTPError.call(this, 'Unauthorized', requestResult)\n}\n\nutil.inherits(Unauthorized, FaunaHTTPError)\n\n/**\n * A HTTP 403 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction PermissionDenied(requestResult) {\n  FaunaHTTPError.call(this, 'PermissionDenied', requestResult)\n}\n\nutil.inherits(PermissionDenied, FaunaHTTPError)\n\n/**\n * A HTTP 404 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction NotFound(requestResult) {\n  FaunaHTTPError.call(this, 'NotFound', requestResult)\n}\n\nutil.inherits(NotFound, FaunaHTTPError)\n\n/**\n * A HTTP 405 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction MethodNotAllowed(requestResult) {\n  FaunaHTTPError.call(this, 'MethodNotAllowed', requestResult)\n}\n\nutil.inherits(MethodNotAllowed, FaunaHTTPError)\n\n/**\n * A HTTP 429 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction TooManyRequests(requestResult) {\n  FaunaHTTPError.call(this, 'TooManyRequests', requestResult)\n}\n\nutil.inherits(TooManyRequests, FaunaHTTPError)\n\n/**\n * A HTTP 500 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction InternalError(requestResult) {\n  FaunaHTTPError.call(this, 'InternalError', requestResult)\n}\n\nutil.inherits(InternalError, FaunaHTTPError)\n\n/**\n * A HTTP 503 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction UnavailableError(requestResult) {\n  FaunaHTTPError.call(this, 'UnavailableError', requestResult)\n}\n\nutil.inherits(UnavailableError, FaunaHTTPError)\n\n/**\n * The base exception type for all stream related errors.\n *\n * @constructor\n * @param {string} name The error class name.\n * @param {string} message The error message.\n * @param {string} description The error detailed description.\n * @extends module:errors~FaunaError\n */\nfunction StreamError(name, message, description) {\n  FaunaError.call(this, name, message, description)\n}\n\nutil.inherits(StreamError, FaunaError)\n\n/**\n * An error thrown by the client when streams are not supported by the current\n * platform.\n *\n * @constructor\n * @param {string} description The error description.\n * @extends module:errors~StreamError\n */\nfunction StreamsNotSupported(description) {\n  FaunaError.call(\n    this,\n    'StreamsNotSupported',\n    'streams not supported',\n    description\n  )\n}\n\nutil.inherits(StreamsNotSupported, StreamError)\n\n/**\n * An Error thrown by the server when something wrong happened with the\n * subscribed stream.\n * @constructor\n * @param {Object} event The error event.\n * @property {Object} event The error event.\n * @extends module:errors~StreamError\n */\nfunction StreamErrorEvent(event) {\n  var error = event.data || {}\n  FaunaError.call(this, 'StreamErrorEvent', error.code, error.description)\n  this.event = event\n}\n\nutil.inherits(StreamErrorEvent, StreamError)\n\n/**\n * An error thrown when attempting to operate on a closed Client instance.\n *\n * @param {string} message The error message.\n * @param {?string} description The error description.\n * @extends module:errors~FaunaError\n * @constructor\n */\nfunction ClientClosed(message, description) {\n  FaunaError.call(this, 'ClientClosed', message, description)\n}\n\nutil.inherits(ClientClosed, FaunaError)\n\nmodule.exports = {\n  FaunaError: FaunaError,\n  ClientClosed: ClientClosed,\n  FaunaHTTPError: FaunaHTTPError,\n  InvalidValue: InvalidValue,\n  InvalidArity: InvalidArity,\n  BadRequest: BadRequest,\n  Unauthorized: Unauthorized,\n  PermissionDenied: PermissionDenied,\n  NotFound: NotFound,\n  MethodNotAllowed: MethodNotAllowed,\n  TooManyRequests: TooManyRequests,\n  InternalError: InternalError,\n  UnavailableError: UnavailableError,\n  StreamError: StreamError,\n  StreamsNotSupported: StreamsNotSupported,\n  StreamErrorEvent: StreamErrorEvent,\n}\n","'use strict'\n\nvar annotate = require('fn-annotate')\nvar deprecate = require('util-deprecate')\nvar Expr = require('./Expr')\nvar errors = require('./errors')\nvar values = require('./values')\nvar objectAssign = require('object-assign')\nvar util = require('./_util')\n\n/**\n * This module contains functions used to construct FaunaDB Queries.\n *\n * See the [FaunaDB Query API Documentation](https://app.fauna.com/documentation/reference/queryapi)\n * for per-function documentation.\n *\n * @module query\n */\n\n/**\n * @typedef {(Expr|string|number|boolean|Object)} module:query~ExprTerm\n */\n\n/**\n * @typedef {(module:query~ExprTerm|Array<module:query~ExprTerm>)} module:query~ExprArg\n */\n\n// Type helpers\n\n/**\n * If one parameter is provided, constructs a literal Ref value.\n * The string `collections/widget/123` will be equivalent to `new values.Ref('123', new values.Ref('widget', values.Native.COLLECTIONS))`\n *\n * If two are provided, constructs a Ref() function that, when evaluated, returns a Ref value.\n *\n * @param {string|module:query~ExprArg} ref|cls\n *   Alone, the ref in path form. Combined with `id`, must be a collection ref.\n * @param {module:query~ExprArg} [id]\n *   A numeric id of the given collection.\n * @return {Expr}\n */\nfunction Ref() {\n  arity.between(1, 2, arguments, Ref.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ '@ref': wrap(arguments[0]) })\n    case 2:\n      return new Expr({ ref: wrap(arguments[0]), id: wrap(arguments[1]) })\n  }\n}\n\n/**\n * @param {Uint8Array|ArrayBuffer|module:query~ExprArg} bytes\n *   A base64 encoded string or a byte array\n * @return {Expr}\n */\nfunction Bytes(bytes) {\n  arity.exact(1, arguments, Bytes.name)\n  return new values.Bytes(bytes)\n}\n\n// Basic forms\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} msg\n *   The message to send back to the client.\n * @return {Expr}\n * */\nfunction Abort(msg) {\n  arity.exact(1, arguments, Abort.name)\n  return new Expr({ abort: wrap(msg) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} timestamp\n *   An Expr that will evaluate to a Time.\n * @param {module:query~ExprArg} expr\n *   The Expr to run at the given snapshot time.\n * @return {Expr}\n * */\nfunction At(timestamp, expr) {\n  arity.exact(2, arguments, At.name)\n  return new Expr({ at: wrap(timestamp), expr: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} bindings\n *   A set of bindings to use within the given expression.\n * @param {module:query~ExprArg} in\n *   The expression to run with the given bindings.\n * @return {Expr}\n * */\nfunction Let(vars, expr) {\n  arity.exact(2, arguments, Let.name)\n  var bindings = []\n\n  if (Array.isArray(vars)) {\n    bindings = vars.map(function(item) {\n      return wrapValues(item)\n    })\n  } else {\n    bindings = Object.keys(vars)\n      .filter(function(k) {\n        return vars[k] !== undefined\n      })\n      .map(function(k) {\n        var b = {}\n        b[k] = wrap(vars[k])\n        return b\n      })\n  }\n\n  if (typeof expr === 'function') {\n    if (Array.isArray(vars)) {\n      var expr_vars = []\n\n      vars.forEach(function(item) {\n        Object.keys(item).forEach(function(name) {\n          expr_vars.push(Var(name))\n        })\n      })\n\n      expr = expr.apply(null, expr_vars)\n    } else {\n      expr = expr.apply(\n        null,\n        Object.keys(vars).map(function(name) {\n          return Var(name)\n        })\n      )\n    }\n  }\n\n  return new Expr({ let: bindings, in: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} varName\n *   The name of the bound var.\n * @return {Expr}\n * */\nfunction Var(varName) {\n  arity.exact(1, arguments, Var.name)\n  return new Expr({ var: wrap(varName) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} condition\n *   An expression that returns a boolean.\n * @param {module:query~ExprArg} then\n *   The expression to run if condition is true.\n * @param {module:query~ExprArg} else\n *   The expression to run if the condition is false.\n * @return {Expr}\n * */\nfunction If(condition, then, _else) {\n  arity.exact(3, arguments, If.name)\n  return new Expr({ if: wrap(condition), then: wrap(then), else: wrap(_else) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {...module:query~ExprArg} args\n *   A series of expressions to run.\n * @return {Expr}\n * */\nfunction Do() {\n  arity.min(1, arguments, Do.name)\n  var args = argsToArray(arguments)\n  return new Expr({ do: wrap(args) })\n}\n\n/** See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {...module:query~ExprArg} fields\n *   The object to be escaped.\n * @return {Expr}\n * */\nvar objectFunction = function(fields) {\n  arity.exact(1, arguments, objectFunction.name)\n  return new Expr({ object: wrapValues(fields) })\n}\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * Directly produces a FaunaDB Lambda expression as described in the FaunaDB reference\n * documentation.\n *\n * @param {module:query~ExprArg} var\n *   The names of the variables to be bound in this lambda expression.\n * @param {module:query~ExprArg} expr\n *   The lambda expression.\n * @return {Expr}\n */\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * Takes a Javascript function, and will transform it\n * into the appropriate FaunaDB query. For example:\n *\n * ```\n * Lambda(function(a) { return Add(a, a); });\n * // Returns { lambda: 'a', expr: { add: [{ var: a }, { var: a }] } }\n * ```\n * Note that the driver will handle wrapping all usages of the lambda's bound\n * variables with the {@link modules:query~Var} function.\n *\n * @param {function} func\n *   Takes the provided function and produces the appropriate FaunaDB query expression.\n * @return {Expr}\n *\n */ function Lambda() {\n  arity.between(1, 2, arguments, Lambda.name)\n  switch (arguments.length) {\n    case 1:\n      var value = arguments[0]\n      if (typeof value === 'function') {\n        return _lambdaFunc(value)\n      } else if (\n        value instanceof Expr ||\n        util.checkInstanceHasProperty(value, '_isFaunaExpr')\n      ) {\n        return value\n      } else {\n        throw new errors.InvalidValue(\n          'Lambda function takes either a Function or an Expr.'\n        )\n      }\n    case 2:\n      var var_name = arguments[0]\n      var expr = arguments[1]\n\n      return _lambdaExpr(var_name, expr)\n  }\n}\n\n/**\n * @private\n */\nfunction _lambdaFunc(func) {\n  var vars = annotate(func)\n  switch (vars.length) {\n    case 0:\n      throw new errors.InvalidValue(\n        'Provided Function must take at least 1 argument.'\n      )\n    case 1:\n      return _lambdaExpr(vars[0], func(Var(vars[0])))\n    default:\n      return _lambdaExpr(\n        vars,\n        func.apply(\n          null,\n          vars.map(function(name) {\n            return Var(name)\n          })\n        )\n      )\n  }\n}\n\n/**\n * @private\n */\nfunction _lambdaExpr(var_name, expr) {\n  return new Expr({ lambda: wrap(var_name), expr: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * Invokes a given function passing in the provided arguments\n *\n * ```\n * Call(Ref(\"functions/a_function\"), 1, 2)\n * ```\n *\n * @param {module:query~ExprArg} ref\n *   The ref of the UserDefinedFunction to call\n * @param {...module:query~ExprArg} args\n *   A series of values to pass as arguments to the UDF.\n * @return {Expr}\n * */\nfunction Call(ref) {\n  arity.min(1, arguments, Call.name)\n  var args = argsToArray(arguments)\n  args.shift()\n  return new Expr({ call: wrap(ref), arguments: wrap(varargs(args)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * Constructs a `@query` type using the Lambda() or a function.\n *\n * ```\n * Query(Lambda(['a', 'b'], Add(Var('a'), Var('b'))))\n * Query(function (a, b) { return Add(a, b) })\n * ```\n *\n * @param {module:query~ExprArg|function} lambda\n *   A function to escape as a query.\n * @return {Expr}\n * */\nfunction Query(lambda) {\n  arity.exact(1, arguments, Query.name)\n  return new Expr({ query: wrap(lambda) })\n}\n\n// Collection functions\n\n/** See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection to be mapped over.\n * @param {module:query~ExprArg|function} lambda\n *   A function to be called for each element of the collection.\n * @return {Expr}\n * */\nfunction Map(collection, lambda_expr) {\n  arity.exact(2, arguments, Map.name)\n  return new Expr({ map: wrap(lambda_expr), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection to be iterated over.\n * @param {module:query~ExprArg|function} lambda\n *   A function to be called for each element of the collection.\n * @return {Expr}\n * */\nfunction Foreach(collection, lambda_expr) {\n  arity.exact(2, arguments, Foreach.name)\n  return new Expr({ foreach: wrap(lambda_expr), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection to be filtered.\n * @param {module:query~ExprArg|function} lambda\n *   A function that returns a boolean used to filter unwanted values.\n * @return {Expr}\n * */\nfunction Filter(collection, lambda_expr) {\n  arity.exact(2, arguments, Filter.name)\n  return new Expr({ filter: wrap(lambda_expr), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} number\n *   An expression resulting in the number of elements to take from the collection.\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n * */\nfunction Take(number, collection) {\n  arity.exact(2, arguments, Take.name)\n  return new Expr({ take: wrap(number), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} number\n *   An expression resulting in the number of elements to drop from the collection.\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n * */\nfunction Drop(number, collection) {\n  arity.exact(2, arguments, Drop.name)\n  return new Expr({ drop: wrap(number), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} elements\n *   An expression resulting in a collection of elements to prepend to the given collection.\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n */\nfunction Prepend(elements, collection) {\n  arity.exact(2, arguments, Prepend.name)\n  return new Expr({ prepend: wrap(elements), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} elements\n *   An expression resulting in a collection of elements to append to the given collection.\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n */\nfunction Append(elements, collection) {\n  arity.exact(2, arguments, Append.name)\n  return new Expr({ append: wrap(elements), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n */\nfunction IsEmpty(collection) {\n  arity.exact(1, arguments, IsEmpty.name)\n  return new Expr({ is_empty: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n */\nfunction IsNonEmpty(collection) {\n  arity.exact(1, arguments, IsNonEmpty.name)\n  return new Expr({ is_nonempty: wrap(collection) })\n}\n\n// Type check functions\n\n/**\n * Check if the expression is a number.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isnumber\">IsNumber</a>\n */\nfunction IsNumber(expr) {\n  arity.exact(1, arguments, IsNumber.name)\n  return new Expr({ is_number: wrap(expr) })\n}\n\n/**\n * Check if the expression is a double.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isdouble\">IsDouble</a>\n */\nfunction IsDouble(expr) {\n  arity.exact(1, arguments, IsDouble.name)\n  return new Expr({ is_double: wrap(expr) })\n}\n\n/**\n * Check if the expression is an integer.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isinteger\">IsInteger</a>\n */\nfunction IsInteger(expr) {\n  arity.exact(1, arguments, IsInteger.name)\n  return new Expr({ is_integer: wrap(expr) })\n}\n\n/**\n * Check if the expression is a boolean.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isboolean\">IsBoolean</a>\n */\nfunction IsBoolean(expr) {\n  arity.exact(1, arguments, IsBoolean.name)\n  return new Expr({ is_boolean: wrap(expr) })\n}\n\n/**\n * Check if the expression is null.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isnull\">IsNull</a>\n */\nfunction IsNull(expr) {\n  arity.exact(1, arguments, IsNull.name)\n  return new Expr({ is_null: wrap(expr) })\n}\n\n/**\n * Check if the expression is a byte array.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isbytes\">IsBytes</a>\n */\nfunction IsBytes(expr) {\n  arity.exact(1, arguments, IsBytes.name)\n  return new Expr({ is_bytes: wrap(expr) })\n}\n\n/**\n * Check if the expression is a timestamp.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/istimestamp\">IsTimestamp</a>\n */\nfunction IsTimestamp(expr) {\n  arity.exact(1, arguments, IsTimestamp.name)\n  return new Expr({ is_timestamp: wrap(expr) })\n}\n\n/**\n * Check if the expression is a date.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isdate\">IsDate</a>\n */\nfunction IsDate(expr) {\n  arity.exact(1, arguments, IsDate.name)\n  return new Expr({ is_date: wrap(expr) })\n}\n\n/**\n * Check if the expression is a string.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isstring\">IsString</a>\n */\nfunction IsString(expr) {\n  arity.exact(1, arguments, IsString.name)\n  return new Expr({ is_string: wrap(expr) })\n}\n\n/**\n * Check if the expression is an array.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isarray\">IsArray</a>\n */\nfunction IsArray(expr) {\n  arity.exact(1, arguments, IsArray.name)\n  return new Expr({ is_array: wrap(expr) })\n}\n\n/**\n * Check if the expression is an object.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isobject\">IsObject</a>\n */\nfunction IsObject(expr) {\n  arity.exact(1, arguments, IsObject.name)\n  return new Expr({ is_object: wrap(expr) })\n}\n\n/**\n * Check if the expression is a reference.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isref\">IsRef</a>\n */\nfunction IsRef(expr) {\n  arity.exact(1, arguments, IsRef.name)\n  return new Expr({ is_ref: wrap(expr) })\n}\n\n/**\n * Check if the expression is a set.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isset\">IsSet</a>\n */\nfunction IsSet(expr) {\n  arity.exact(1, arguments, IsSet.name)\n  return new Expr({ is_set: wrap(expr) })\n}\n\n/**\n * Check if the expression is a document (either a reference or an instance).\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isdoc\">IsDoc</a>\n */\nfunction IsDoc(expr) {\n  arity.exact(1, arguments, IsDoc.name)\n  return new Expr({ is_doc: wrap(expr) })\n}\n\n/**\n * Check if the expression is a lambda.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/islambda\">IsLambda</a>\n */\nfunction IsLambda(expr) {\n  arity.exact(1, arguments, IsLambda.name)\n  return new Expr({ is_lambda: wrap(expr) })\n}\n\n/**\n * Check if the expression is a collection.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/iscollection\">IsCollection</a>\n */\nfunction IsCollection(expr) {\n  arity.exact(1, arguments, IsCollection.name)\n  return new Expr({ is_collection: wrap(expr) })\n}\n\n/**\n * Check if the expression is a database.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isdatabase\">IsDatabase</a>\n */\nfunction IsDatabase(expr) {\n  arity.exact(1, arguments, IsDatabase.name)\n  return new Expr({ is_database: wrap(expr) })\n}\n\n/**\n * Check if the expression is an index.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isindex\">IsIndex</a>\n */\nfunction IsIndex(expr) {\n  arity.exact(1, arguments, IsIndex.name)\n  return new Expr({ is_index: wrap(expr) })\n}\n\n/**\n * Check if the expression is a function.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isfunction\">IsFunction</a>\n */\nfunction IsFunction(expr) {\n  arity.exact(1, arguments, IsFunction.name)\n  return new Expr({ is_function: wrap(expr) })\n}\n\n/**\n * Check if the expression is a key.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/iskey\">IsKey</a>\n */\nfunction IsKey(expr) {\n  arity.exact(1, arguments, IsKey.name)\n  return new Expr({ is_key: wrap(expr) })\n}\n\n/**\n * Check if the expression is a token.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/istoken\">IsToken</a>\n */\nfunction IsToken(expr) {\n  arity.exact(1, arguments, IsToken.name)\n  return new Expr({ is_token: wrap(expr) })\n}\n\n/**\n * Check if the expression is credentials.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/iscredentials\">IsCredentials</a>\n */\nfunction IsCredentials(expr) {\n  arity.exact(1, arguments, IsCredentials.name)\n  return new Expr({ is_credentials: wrap(expr) })\n}\n\n/**\n * Check if the expression is a role.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isrole\">IsRole</a>\n */\nfunction IsRole(expr) {\n  arity.exact(1, arguments, IsRole.name)\n  return new Expr({ is_role: wrap(expr) })\n}\n\n// Read functions\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n *\n * @param {module:query~ExprArg} ref\n *   An expression resulting in either a Ref or SetRef.\n * @param {?module:query~ExprArg} ts\n *   The snapshot time at which to get the document.\n * @return {Expr}\n */\nfunction Get(ref, ts) {\n  arity.between(1, 2, arguments, Get.name)\n  ts = util.defaults(ts, null)\n\n  return new Expr(params({ get: wrap(ref) }, { ts: wrap(ts) }))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n *\n * @param {module:query~ExprArg} secret\n *   The key or token secret to lookup.\n * @return {Expr}\n */\nfunction KeyFromSecret(secret) {\n  arity.exact(1, arguments, KeyFromSecret.name)\n  return new Expr({ key_from_secret: wrap(secret) })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/reduce).\n *\n * @param {module:query~ExprArg} lambda\n *   The accumulator function\n * @param {module:query~ExprArg} initial\n *   The initial value\n * @param {module:query~ExprArg} collection\n *   The colleciton to be reduced\n * @return {Expr}\n */\nfunction Reduce(lambda, initial, collection) {\n  arity.exact(3, arguments, Reduce.name)\n  return new Expr({\n    reduce: wrap(lambda),\n    initial: wrap(initial),\n    collection: wrap(collection),\n  })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n * You may want to utilize {@link Client#paginate} to obtain a {@link PageHelper},\n * rather than using this query function directly.\n *\n * @param {module:query~ExprArg} set\n *   An expression resulting in a SetRef to page over.\n * @param {?Object} opts\n *  An object representing options for pagination.\n *    - size: Maximum number of results to return.\n *    - after: Return the next page of results after this cursor (inclusive).\n *    - before: Return the previous page of results before this cursor (exclusive).\n *    - sources: If true, include the source sets along with each element.\n * @return {Expr}\n */\nfunction Paginate(set, opts) {\n  arity.between(1, 2, arguments, Paginate.name)\n  opts = util.defaults(opts, {})\n\n  return new Expr(objectAssign({ paginate: wrap(set) }, wrapValues(opts)))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n *\n * @param {module:query~ExprArg} ref\n *   An expression resulting in a Ref.\n * @param {?module:query~ExprArg} ts\n *   The snapshot time at which to check for the document's existence.\n * @return {Expr}\n */\nfunction Exists(ref, ts) {\n  arity.between(1, 2, arguments, Exists.name)\n  ts = util.defaults(ts, null)\n\n  return new Expr(params({ exists: wrap(ref) }, { ts: wrap(ts) }))\n}\n\n// Write functions\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref (usually a CollectionRef) to create.\n * @param {?module:query~ExprArg} params\n *   An object representing the parameters of the document.\n * @return {Expr}\n */\nfunction Create(collection_ref, params) {\n  arity.between(1, 2, arguments, Create.name)\n  return new Expr({ create: wrap(collection_ref), params: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to update.\n * @param {module:query~ExprArg} params\n *   An object representing the parameters of the document.\n * @return {Expr}\n */\nfunction Update(ref, params) {\n  arity.exact(2, arguments, Update.name)\n  return new Expr({ update: wrap(ref), params: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to replace.\n * @param {module:query~ExprArg} params\n *   An object representing the parameters of the document.\n * @return {Expr}\n */\nfunction Replace(ref, params) {\n  arity.exact(2, arguments, Replace.name)\n  return new Expr({ replace: wrap(ref), params: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to delete.\n * @return {Expr}\n */\nfunction Delete(ref) {\n  arity.exact(1, arguments, Delete.name)\n  return new Expr({ delete: wrap(ref) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to insert against\n * @param {module:query~ExprArg} ts\n *   The valid time of the inserted event\n * @param {module:query~ExprArg} action\n *   Whether the event should be a Create, Update, or Delete.\n * @param {module:query~ExprArg} params\n *   If this is a Create or Update, the parameters of the document.\n * @return {Expr}\n */\nfunction Insert(ref, ts, action, params) {\n  arity.exact(4, arguments, Insert.name)\n  return new Expr({\n    insert: wrap(ref),\n    ts: wrap(ts),\n    action: wrap(action),\n    params: wrap(params),\n  })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref of the document whose event should be removed.\n * @param {module:query~ExprArg} ts\n *   The valid time of the event.\n * @param {module:query~ExprArg} action\n *   The event action (Create, Update, or Delete) that should be removed.\n * @return {Expr}\n */\nfunction Remove(ref, ts, action) {\n  arity.exact(3, arguments, Remove.name)\n  return new Expr({ remove: wrap(ref), ts: wrap(ts), action: wrap(action) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a class.\n *     - name (required): the name of the class to create\n * @return {Expr}\n *\n * @deprecated use CreateCollection instead\n */\nfunction CreateClass(params) {\n  arity.exact(1, arguments, CreateClass.name)\n  return new Expr({ create_class: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a collection.\n *     - name (required): the name of the collection to create\n * @return {Expr}\n */\nfunction CreateCollection(params) {\n  arity.exact(1, arguments, CreateCollection.name)\n  return new Expr({ create_collection: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a database.\n *     - name (required): the name of the database to create\n * @return {Expr}\n */\nfunction CreateDatabase(params) {\n  arity.exact(1, arguments, CreateDatabase.name)\n  return new Expr({ create_database: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create an index.\n *     - name (required): the name of the index to create\n *     - source: One or more source objects describing source collections and (optional) field bindings.\n *     - terms: An array of term objects describing the fields to be indexed. Optional\n *     - values: An array of value objects describing the fields to be covered. Optional\n *     - unique: If true, maintains a uniqueness constraint on combined terms and values. Optional\n *     - partitions: The number of sub-partitions within each term. Optional\n * @return {Expr}\n */\nfunction CreateIndex(params) {\n  arity.exact(1, arguments, CreateIndex.name)\n  return new Expr({ create_index: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a new key\n *     - database: Ref of the database the key will be scoped to. Optional.\n *     - role: The role of the new key\n * @return {Expr}\n */\nfunction CreateKey(params) {\n  arity.exact(1, arguments, CreateKey.name)\n  return new Expr({ create_key: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a new user defined function.\n *     - name: The name of the function\n *     - body: A lambda function (escaped with `query`).\n * @return {Expr}\n */\nfunction CreateFunction(params) {\n  arity.exact(1, arguments, CreateFunction.name)\n  return new Expr({ create_function: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a new role.\n *     - name: The name of the role\n *     - privileges: An array of privileges\n *     - membership: An array of membership bindings\n * @return {Expr}\n */\nfunction CreateRole(params) {\n  arity.exact(1, arguments, CreateRole.name)\n  return new Expr({ create_role: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a new access provider.\n *     - name: A valid schema name\n *     - issuer: A unique string\n *     - jwks_uri: A valid HTTPS URI\n *     - roles: An array of role/predicate pairs where the predicate returns a boolean.\n *                   The array can also contain Role references.\n * @return {Expr}\n */\nfunction CreateAccessProvider(params) {\n  arity.exact(1, arguments, CreateAccessProvider.name)\n  return new Expr({ create_access_provider: wrap(params) })\n}\n\n// Sets\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref of the document for which to retrieve the singleton set.\n * @return {Expr}\n */\nfunction Singleton(ref) {\n  arity.exact(1, arguments, Singleton.name)\n  return new Expr({ singleton: wrap(ref) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} ref\n *   A Ref or SetRef to retrieve an event set from.\n * @return {Expr}\n */\nfunction Events(ref_set) {\n  arity.exact(1, arguments, Events.name)\n  return new Expr({ events: wrap(ref_set) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} index\n *   The Ref of the index to match against.\n * @param {...module:query~ExprArg} terms\n *   A list of terms used in the match.\n * @return {Expr}\n */\nfunction Match(index) {\n  arity.min(1, arguments, Match.name)\n  var args = argsToArray(arguments)\n  args.shift()\n  return new Expr({ match: wrap(index), terms: wrap(varargs(args)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {...module:query~ExprArg} sets\n *   A list of SetRefs to union together.\n * @return {Expr}\n */\nfunction Union() {\n  arity.min(1, arguments, Union.name)\n  return new Expr({ union: wrap(varargs(arguments)) })\n}\n\n/**\n * Merge two or more objects..\n *\n * @param {...module:query~ExprArg} merge merge the first object.\n * @param {...module:query~ExprArg} _with the second object or a list of objects\n * @param {...module:query~ExprArg} lambda a lambda to resolve possible conflicts\n * @return {Expr}\n * */\nfunction Merge(merge, _with, lambda) {\n  arity.between(2, 3, arguments, Merge.name)\n  return new Expr(\n    params({ merge: wrap(merge), with: wrap(_with) }, { lambda: wrap(lambda) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {...module:query~ExprArg} sets\n *   A list of SetRefs to intersect.\n * @return {Expr}\n * */\nfunction Intersection() {\n  arity.min(1, arguments, Intersection.name)\n  return new Expr({ intersection: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {...module:query~ExprArg} sets\n *   A list of SetRefs to diff.\n * @return {Expr}\n * */\nfunction Difference() {\n  arity.min(1, arguments, Difference.name)\n  return new Expr({ difference: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} set\n *   A SetRef to remove duplicates from.\n * @return {Expr}\n * */\nfunction Distinct(set) {\n  arity.exact(1, arguments, Distinct.name)\n  return new Expr({ distinct: wrap(set) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} source\n *   A SetRef of the source set\n * @param {module:query~ExprArg|function} target\n *   A Lambda that will accept each element of the source Set and return a Set\n * @return {Expr}\n */\nfunction Join(source, target) {\n  arity.exact(2, arguments, Join.name)\n  return new Expr({ join: wrap(source), with: wrap(target) })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/range).\n *\n * @param {module:query~ExprArg} set\n *   A SetRef of the source set\n * @param {module:query~ExprArg} from\n *   The lower bound\n * @param {module:query~ExprArg} to\n *   The upper bound\n * @return {Expr}\n */\nfunction Range(set, from, to) {\n  arity.exact(3, arguments, Range.name)\n  return new Expr({ range: wrap(set), from: wrap(from), to: wrap(to) })\n}\n\n// Authentication\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @param {module:query~ExprArg} ref\n *   A Ref with credentials to authenticate against\n * @param {module:query~ExprArg} params\n *   An object of parameters to pass to the login function\n *     - password: The password used to login\n * @return {Expr}\n * */\nfunction Login(ref, params) {\n  arity.exact(2, arguments, Login.name)\n  return new Expr({ login: wrap(ref), params: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @param {module:query~ExprArg} delete_tokens\n *   If true, log out all tokens associated with the current session.\n * @return {Expr}\n */\nfunction Logout(delete_tokens) {\n  arity.exact(1, arguments, Logout.name)\n  return new Expr({ logout: wrap(delete_tokens) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to check the password against.\n * @param {module:query~ExprArg} password\n *   The credentials password to check.\n * @return {Expr}\n */\nfunction Identify(ref, password) {\n  arity.exact(2, arguments, Identify.name)\n  return new Expr({ identify: wrap(ref), password: wrap(password) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction Identity() {\n  arity.exact(0, arguments, Identity.name)\n  return new Expr({ identity: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction CurrentIdentity() {\n  arity.exact(0, arguments, CurrentIdentity.name)\n  return new Expr({ current_identity: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction HasIdentity() {\n  arity.exact(0, arguments, HasIdentity.name)\n  return new Expr({ has_identity: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\n\nfunction HasCurrentIdentity() {\n  arity.exact(0, arguments, HasCurrentIdentity.name)\n  return new Expr({ has_current_identity: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction CurrentToken() {\n  arity.exact(0, arguments, CurrentToken.name)\n  return new Expr({ current_token: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction HasCurrentToken() {\n  arity.exact(0, arguments, HasCurrentToken.name)\n  return new Expr({ has_current_token: null })\n}\n\n// String functions\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} strings - A list of strings to concatenate.\n * @param {string} separator  - The separator to use between each string.\n * @return {string} a single combined string\n */\nfunction Concat(strings, separator) {\n  arity.min(1, arguments, Concat.name)\n  separator = util.defaults(separator, null)\n  return new Expr(\n    params({ concat: wrap(strings) }, { separator: wrap(separator) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} string - The string to casefold.\n * @param {string} normalizer - The algorithm to use. One of: NFKCCaseFold, NFC, NFD, NFKC, NFKD.\n * @return {string} a normalized string\n */\nfunction Casefold(string, normalizer) {\n  arity.min(1, arguments, Casefold.name)\n  return new Expr(\n    params({ casefold: wrap(string) }, { normalizer: wrap(normalizer) })\n  )\n}\n\n/**\n * Returns true if the string contains the given substring, or false if otherwise\n *\n * @param {string} value  - the string to evaluate\n * @param {string} search - the substring to search for\n * @return {boolean}      - was the search result found\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/containsstr\">FaunaDB ContainsStr Function</a>\n */\nfunction ContainsStr(value, search) {\n  arity.exact(2, arguments, ContainsStr.name)\n  return new Expr({ containsstr: wrap(value), search: wrap(search) })\n}\n\n/**\n * Returns true if the string contains the given pattern, or false if otherwise\n *\n * @param {string} value   - the string to evaluate\n * @param {string} pattern - the pattern to search for\n * @return {boolean}       - was the regex search result found\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/containsstrregex\">FaunaDB ContainsStrRegex Function</a>\n */\nfunction ContainsStrRegex(value, pattern) {\n  arity.exact(2, arguments, ContainsStrRegex.name)\n  return new Expr({ containsstrregex: wrap(value), pattern: wrap(pattern) })\n}\n\n/**\n * Returns true if the string starts with the given prefix value, or false if otherwise\n *\n * @param {string} value   - the string to evaluate\n * @param {string} search  - the prefix to search for\n * @return {boolean}       - does `value` start with `search`\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/startswith\">FaunaDB StartsWith Function</a>\n */\nfunction StartsWith(value, search) {\n  arity.exact(2, arguments, StartsWith.name)\n  return new Expr({ startswith: wrap(value), search: wrap(search) })\n}\n\n/**\n * Returns true if the string ends with the given suffix value, or false if otherwise\n *\n * @param {string} value   - the string to evaluate\n * @param {string} search  - the suffix to search for\n * @return {boolean}       - does `value` end with `search`\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/endswith\">FaunaDB EndsWith Function</a>\n */\nfunction EndsWith(value, search) {\n  arity.exact(2, arguments, EndsWith.name)\n  return new Expr({ endswith: wrap(value), search: wrap(search) })\n}\n\n/**\n * It takes a string and returns a regex which matches the input string verbatim.\n *\n * @param value      - the string to analyze\n * @return {string}  - a regex which matches the input string verbatim\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/regexescape\">FaunaDB RegexEscape Function</a>\n */\nfunction RegexEscape(value) {\n  arity.exact(1, arguments, RegexEscape.name)\n  return new Expr({ regexescape: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to search.\n * @param {string} find - Find the first position of this string in the search string\n * @param {int} start - An optional start offset into the search string\n * @return {int} location of the found string or -1 if not found\n */\nfunction FindStr(value, find, start) {\n  arity.between(2, 3, arguments, FindStr.name)\n  start = util.defaults(start, null)\n  return new Expr(\n    params({ findstr: wrap(value), find: wrap(find) }, { start: wrap(start) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to search.\n * @param {string} pattern - Find the first position of this pattern in the search string using a java regular expression syntax\n * @param {int} start - An optional start offset into the search string\n * @param {int} numResults - An optional number of results to return, max 1024\n * @return {Array} an array of object describing where the search pattern was located\n */\nfunction FindStrRegex(value, pattern, start, numResults) {\n  arity.between(2, 4, arguments, FindStrRegex.name)\n  start = util.defaults(start, null)\n  return new Expr(\n    params(\n      { findstrregex: wrap(value), pattern: wrap(pattern) },\n      { start: wrap(start), num_results: wrap(numResults) }\n    )\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to calculate the length in codepoints.\n * @return {int} the length of the string in codepoints\n */\nfunction Length(value) {\n  arity.exact(1, arguments, Length.name)\n  return new Expr({ length: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to LowerCase.\n * @return {string} the string converted to lowercase\n */\nfunction LowerCase(value) {\n  arity.exact(1, arguments, LowerCase.name)\n  return new Expr({ lowercase: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to trim leading white space.\n * @return {string} the string with leading white space removed\n */\nfunction LTrim(value) {\n  arity.exact(1, arguments, LTrim.name)\n  return new Expr({ ltrim: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {module:query~ExprArg} terms\n *   A document from which to produce ngrams.\n * @param {?Object} opts\n *   An object of options\n *     - min: The minimum ngram size.\n *     - max: The maximum ngram size.\n * @return {Array|Value}\n */\nfunction NGram(terms, min, max) {\n  arity.between(1, 3, arguments, NGram.name)\n  min = util.defaults(min, null)\n  max = util.defaults(max, null)\n\n  return new Expr(\n    params({ ngram: wrap(terms) }, { min: wrap(min), max: wrap(max) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to repeat.\n * @param {int} number - The number of times to repeat the string\n * @return {string} a string which was repeated\n */\nfunction Repeat(value, number) {\n  arity.between(1, 2, arguments, Repeat.name)\n  number = util.defaults(number, null)\n  return new Expr(params({ repeat: wrap(value) }, { number: wrap(number) }))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to search.\n * @param {string} find - The string to find in the search string\n * @param {string} replace - The string to replace in the search string\n * @return {String} all the occurrences of find substituted with replace string\n */\nfunction ReplaceStr(value, find, replace) {\n  arity.exact(3, arguments, ReplaceStr.name)\n  return new Expr({\n    replacestr: wrap(value),\n    find: wrap(find),\n    replace: wrap(replace),\n  })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to search.\n * @param {string} pattern - The pattern to find in the search string using a java regular expression syntax\n * @param {string} replace - The string to replace in the search string\n * @param {boolean} first - Replace all or just the first\n * @return {string} all the occurrences of find pattern substituted with replace string\n */\nfunction ReplaceStrRegex(value, pattern, replace, first) {\n  arity.between(3, 4, arguments, ReplaceStrRegex.name)\n  first = util.defaults(first, null)\n  return new Expr(\n    params(\n      {\n        replacestrregex: wrap(value),\n        pattern: wrap(pattern),\n        replace: wrap(replace),\n      },\n      { first: wrap(first) }\n    )\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to remove white space from the end.\n * @return {string} the string with trailing whitespaces removed\n */\nfunction RTrim(value) {\n  arity.exact(1, arguments, RTrim.name)\n  return new Expr({ rtrim: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {int} num - The string of N Space(s).\n * @return {string} a string with spaces\n */\nfunction Space(num) {\n  arity.exact(1, arguments, Space.name)\n  return new Expr({ space: wrap(num) })\n}\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value  The string to SubString.\n * @param {int} start  The position the first character of the return string begins at\n * @param {int} length  An optional length, if omitted then returns to the end of string\n * @return {string}\n */\nfunction SubString(value, start, length) {\n  arity.between(1, 3, arguments, SubString.name)\n  start = util.defaults(start, null)\n  length = util.defaults(length, null)\n  return new Expr(\n    params(\n      { substring: wrap(value) },\n      { start: wrap(start), length: wrap(length) }\n    )\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to TitleCase.\n * @return {string}  A string converted to titlecase\n */\nfunction TitleCase(value) {\n  arity.exact(1, arguments, TitleCase.name)\n  return new Expr({ titlecase: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to Trim.\n * @return {string} a string with leading and trailing whitespace removed\n */\nfunction Trim(value) {\n  arity.exact(1, arguments, Trim.name)\n  return new Expr({ trim: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to Uppercase.\n * @return {string} An uppercase string\n */\nfunction UpperCase(value) {\n  arity.exact(1, arguments, UpperCase.name)\n  return new Expr({ uppercase: wrap(value) })\n}\n\n/**\n * Format values into a string.\n *\n * @param  {string}  string string with format specifiers\n * @param  {array}   values list of values to format\n * @return {string}         a string\n */\nfunction Format(string) {\n  arity.min(1, arguments, Format.name)\n  var args = argsToArray(arguments)\n  args.shift()\n  return new Expr({ format: wrap(string), values: wrap(varargs(args)) })\n}\n\n// Time and date functions\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#time-and-date).\n *\n * @param {module:query~ExprArg} string\n *   A string to converted to a time object.\n * @return {Expr}\n */\nfunction Time(string) {\n  arity.exact(1, arguments, Time.name)\n  return new Expr({ time: wrap(string) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#time-and-date).\n *\n * @param {module:query~ExprArg} number\n *   The number of `unit`s from Epoch\n * @param {module:query~ExprArg} unit\n *   The unit of `number`. One of second, millisecond, microsecond, nanosecond.\n * @return {Expr}\n */\nfunction Epoch(number, unit) {\n  arity.exact(2, arguments, Epoch.name)\n  return new Expr({ epoch: wrap(number), unit: wrap(unit) })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/timeadd).\n *\n * Returns a new time or date with the offset in terms of the unit\n * added.\n *\n * @param base the base time or data\n * @param offset the number of units\n * @param unit the unit type\n * @return {Expr}\n */\nfunction TimeAdd(base, offset, unit) {\n  arity.exact(3, arguments, TimeAdd.name)\n  return new Expr({\n    time_add: wrap(base),\n    offset: wrap(offset),\n    unit: wrap(unit),\n  })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/timesubtract).\n *\n * Returns a new time or date with the offset in terms of the unit\n * subtracted.\n *\n * @param base the base time or data\n * @param offset the number of units\n * @param unit the unit type\n * @return {Expr}\n */\nfunction TimeSubtract(base, offset, unit) {\n  arity.exact(3, arguments, TimeSubtract.name)\n  return new Expr({\n    time_subtract: wrap(base),\n    offset: wrap(offset),\n    unit: wrap(unit),\n  })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/timediff).\n *\n * Returns the number of intervals in terms of the unit between\n * two times or dates. Both start and finish must be of the same\n * type.\n *\n * @param start the starting time or date, inclusive\n * @param finish the ending time or date, exclusive\n * @param unit the unit type\n * @return {Expr}\n */\nfunction TimeDiff(start, finish, unit) {\n  arity.exact(3, arguments, TimeDiff.name)\n  return new Expr({\n    time_diff: wrap(start),\n    other: wrap(finish),\n    unit: wrap(unit),\n  })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#time-and-date).\n *\n * @param {module:query~ExprArg} string\n *   A string to convert to a Date object\n * @return {Expr}\n */\nfunction Date(string) {\n  arity.exact(1, arguments, Date.name)\n  return new Expr({ date: wrap(string) })\n}\n\n/**\n * Returns the current snapshot time.\n *\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/now\">Now function</a>\n */\nfunction Now() {\n  arity.exact(0, arguments, Now.name)\n  return new Expr({ now: wrap(null) })\n}\n\n// Miscellaneous functions\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @deprecated use NewId instead\n * @return {Expr}\n */\nfunction NextId() {\n  arity.exact(0, arguments, NextId.name)\n  return new Expr({ next_id: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @return {Expr}\n */\nfunction NewId() {\n  arity.exact(0, arguments, NewId.name)\n  return new Expr({ new_id: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the database.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the database's scope.\n * @return {Expr}\n */\nfunction Database(name, scope) {\n  arity.between(1, 2, arguments, Database.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ database: wrap(name) })\n    case 2:\n      return new Expr({ database: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the index.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the index's scope.\n * @return {Expr}\n */\nfunction Index(name, scope) {\n  arity.between(1, 2, arguments, Index.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ index: wrap(name) })\n    case 2:\n      return new Expr({ index: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the class.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the class's scope.\n * @return {Expr}\n *\n * @deprecated Class is deprecated, use Collection instead\n */\nfunction Class(name, scope) {\n  arity.between(1, 2, arguments, Class.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ class: wrap(name) })\n    case 2:\n      return new Expr({ class: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the collection.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the collection's scope.\n * @return {Expr}\n */\nfunction Collection(name, scope) {\n  arity.between(1, 2, arguments, Collection.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ collection: wrap(name) })\n    case 2:\n      return new Expr({ collection: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the user defined function.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the user defined function's scope.\n * @return {Expr}\n */\nfunction FunctionFn(name, scope) {\n  arity.between(1, 2, arguments, FunctionFn.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ function: wrap(name) })\n    case 2:\n      return new Expr({ function: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the role.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the role's scope.\n * @return {Expr}\n */\nfunction Role(name, scope) {\n  arity.between(1, 2, arguments, Role.name)\n  scope = util.defaults(scope, null)\n  return new Expr(params({ role: wrap(name) }, { scope: wrap(scope) }))\n}\n\n/**\n *\n * @param {module:query~ExprArg} scope\n *   The Ref of the database set's scope.\n * @return {Expr}\n */\nfunction AccessProviders(scope) {\n  arity.max(1, arguments, AccessProviders.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ access_providers: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `classes` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the class set's scope.\n * @return {Expr}\n */\nfunction Classes(scope) {\n  arity.max(1, arguments, Classes.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ classes: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `collections` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the collection set's scope.\n * @return {Expr}\n */\nfunction Collections(scope) {\n  arity.max(1, arguments, Collections.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ collections: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `databases` functions that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the database set's scope.\n * @return {Expr}\n */\nfunction Databases(scope) {\n  arity.max(1, arguments, Databases.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ databases: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs an `indexes` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the index set's scope.\n * @return {Expr}\n */\nfunction Indexes(scope) {\n  arity.max(1, arguments, Indexes.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ indexes: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `functions` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the user defined function set's scope.\n * @return {Expr}\n */\nfunction Functions(scope) {\n  arity.max(1, arguments, Functions.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ functions: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `roles` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the role set's scope.\n * @return {Expr}\n */\nfunction Roles(scope) {\n  arity.max(1, arguments, Roles.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ roles: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `keys` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the key set's scope.\n * @return {Expr}\n */\nfunction Keys(scope) {\n  arity.max(1, arguments, Keys.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ keys: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `tokens` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the token set's scope.\n * @return {Expr}\n */\nfunction Tokens(scope) {\n  arity.max(1, arguments, Tokens.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ tokens: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `credentials` functions that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the credential set's scope.\n * @return {Expr}\n */\nfunction Credentials(scope) {\n  arity.max(1, arguments, Credentials.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ credentials: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of expressions to check for equivalence.\n * @return {Expr}\n */\nfunction Equals() {\n  arity.min(1, arguments, Equals.name)\n  return new Expr({ equals: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} path\n *   An array representing a path to check for the existence of.\n * @param {module:query~ExprArg} in\n *   An object to search against.\n * @return {Expr}\n *\n * @deprecated use ContainsPath instead\n */\nfunction Contains(path, _in) {\n  arity.exact(2, arguments, Contains.name)\n  return new Expr({ contains: wrap(path), in: wrap(_in) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} value\n *   Represent the value we want to search for.\n * @param {module:query~ExprArg} in\n *   An object we will search for the value passed in.\n * @return {Expr}\n */\nfunction ContainsValue(value, _in) {\n  arity.exact(2, arguments, ContainsValue.name)\n  return new Expr({ contains_value: wrap(value), in: wrap(_in) })\n}\n\n/**\n * @param {string} field\n *   A field name we want to confirm exists.\n * @param {module:query~ExprArg} obj\n *   An object to search against.\n * @return {Expr}\n */\nfunction ContainsField(field, obj) {\n  arity.exact(2, arguments, ContainsField.name)\n  return new Expr({ contains_field: wrap(field), in: wrap(obj) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} path\n *   An array representing a path to check for the existence of.\n * @param {module:query~ExprArg} in\n *   An object to search against.\n * @return {Expr}\n */\nfunction ContainsPath(path, _in) {\n  arity.exact(2, arguments, ContainsPath.name)\n  return new Expr({ contains_path: wrap(path), in: wrap(_in) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} path\n *   An array representing a path to pull from an object.\n * @param {module:query~ExprArg} from\n *   The object to select from\n * @param {?module:query~ExprArg} default\n *   A default value if the path does not exist.\n * @return {Expr}\n */\nfunction Select(path, from, _default) {\n  arity.between(2, 3, arguments, Select.name)\n  var exprObj = { select: wrap(path), from: wrap(from) }\n  if (_default !== undefined) {\n    exprObj.default = wrap(_default)\n  }\n  return new Expr(exprObj)\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} path\n *   An array representing a path to pull from an object.\n * @param {module:query~ExprArg} from\n *   The object to select from\n * @return {Expr}\n *\n * @deprecated avoid using\n */\nfunction SelectAll(path, from) {\n  arity.exact(2, arguments, SelectAll.name)\n  return new Expr({ select_all: wrap(path), from: wrap(from) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to provide the absolute value.\n * @return {Expr}\n */\nfunction Abs(expr) {\n  arity.exact(1, arguments, Abs.name)\n  return new Expr({ abs: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to sum together.\n * @return {Expr}\n */\nfunction Add() {\n  arity.min(1, arguments, Add.name)\n  return new Expr({ add: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to bitwise and together.\n * @return {Expr}\n */\nfunction BitAnd() {\n  arity.min(1, arguments, BitAnd.name)\n  return new Expr({ bitand: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to provide the bitwise not.\n * @return {Expr}\n */\nfunction BitNot(expr) {\n  arity.exact(1, arguments, BitNot.name)\n  return new Expr({ bitnot: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to bitwise Or'd together.\n * @return {Expr}\n */\nfunction BitOr() {\n  arity.min(1, arguments, BitOr.name)\n  return new Expr({ bitor: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to bitwise Xor'd together.\n * @return {Expr}\n */\nfunction BitXor() {\n  arity.min(1, arguments, BitXor.name)\n  return new Expr({ bitxor: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The least integer that is greater than or equal to the number\n * @return {Expr}\n */\nfunction Ceil(expr) {\n  arity.exact(1, arguments, Ceil.name)\n  return new Expr({ ceil: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to compute the quotient of.\n * @return {Expr}\n */\nfunction Divide() {\n  arity.min(1, arguments, Divide.name)\n  return new Expr({ divide: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The greatest integer that is less than or equal to the number\n * @return {Expr}\n */\nfunction Floor(expr) {\n  arity.exact(1, arguments, Floor.name)\n  return new Expr({ floor: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to multiply together.\n * @return {Expr}\n */\nfunction Max() {\n  arity.min(1, arguments, Max.name)\n  return new Expr({ max: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to multiply together.\n * @return {Expr}\n */\nfunction Min() {\n  arity.min(1, arguments, Min.name)\n  return new Expr({ min: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to compute the quotient of. The remainder will be returned.\n * @return {Expr}\n */\nfunction Modulo() {\n  arity.min(1, arguments, Modulo.name)\n  return new Expr({ modulo: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to multiply together.\n * @return {Expr}\n */\nfunction Multiply() {\n  arity.min(1, arguments, Multiply.name)\n  return new Expr({ multiply: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to round.\n * @param {...module:query~ExprArg} terms\n *   An optional precision\n * @return {Expr}\n */\nfunction Round(value, precision) {\n  arity.min(1, arguments, Round.name)\n  precision = util.defaults(precision, null)\n  return new Expr(\n    params({ round: wrap(value) }, { precision: wrap(precision) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to compute the difference of.\n * @return {Expr}\n */\nfunction Subtract() {\n  arity.min(1, arguments, Subtract.name)\n  return new Expr({ subtract: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The sign of the number is returned as positive 1, zero 0 , negative -1\n * @return {Expr}\n */\nfunction Sign(expr) {\n  arity.exact(1, arguments, Sign.name)\n  return new Expr({ sign: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The square root of the number\n * @return {Expr}\n */\nfunction Sqrt(expr) {\n  arity.exact(1, arguments, Sqrt.name)\n  return new Expr({ sqrt: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to truncate.\n * @param {...module:query~ExprArg} terms\n *   An optional precision\n * @return {Expr}\n */\nfunction Trunc(value, precision) {\n  arity.min(1, arguments, Trunc.name)\n  precision = util.defaults(precision, null)\n  return new Expr(\n    params({ trunc: wrap(value) }, { precision: wrap(precision) })\n  )\n}\n\n/**\n *\n * Count the number of elements in the collection.\n *\n * @param {array}    - array of items\n * @return {integer} - number of items in the collection\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/count\">Count function</a>\n */\nfunction Count(collection) {\n  arity.exact(1, arguments, Count.name)\n  return new Expr({ count: wrap(collection) })\n}\n\n/**\n *\n * Sum the elements in the collection.\n *\n * @param {array} - collection of numbers\n * @return {integer} - total of all numbers in collection\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/sum\">Sum function</a>\n */\nfunction Sum(collection) {\n  arity.exact(1, arguments, Sum.name)\n  return new Expr({ sum: wrap(collection) })\n}\n\n/**\n *\n * Returns the mean of all elements in the collection.\n *\n * @param {array} - collection the numbers\n * @return {float} - the mean of all numbers in the collection\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/mean\">Mean function</a>\n */\nfunction Mean(collection) {\n  arity.exact(1, arguments, Mean.name)\n  return new Expr({ mean: wrap(collection) })\n}\n\n/**\n *\n * Evaluates to true if any element of the collection is true.\n *\n * @param {array} - collection the collection\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/any\">Any function</a>\n */\nfunction Any(collection) {\n  arity.exact(1, arguments, Any.name)\n  return new Expr({ any: wrap(collection) })\n}\n\n/**\n *\n * Evaluates to true if all elements of the collection are true.\n *\n * @param {array} - collection the collection\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/all\">All function</a>\n */\nfunction All(collection) {\n  arity.exact(1, arguments, All.name)\n  return new Expr({ all: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The arc cosine of the number\n * @return {Expr}\n */\nfunction Acos(expr) {\n  arity.exact(1, arguments, Acos.name)\n  return new Expr({ acos: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The arc sine of the number\n * @return {Expr}\n */\nfunction Asin(expr) {\n  arity.exact(1, arguments, Asin.name)\n  return new Expr({ asin: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The arc tangent of the number\n * @return {Expr}\n */\nfunction Atan(expr) {\n  arity.exact(1, arguments, Atan.name)\n  return new Expr({ atan: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The cosine of a number\n * @return {Expr}\n */\nfunction Cos(expr) {\n  arity.exact(1, arguments, Cos.name)\n  return new Expr({ cos: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The hyperbolic cosine of the number\n * @return {Expr}\n */\nfunction Cosh(expr) {\n  arity.exact(1, arguments, Cosh.name)\n  return new Expr({ cosh: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   Take radians and convert it to degrees 360 degrees = 2 * pi radians\n * @return {Expr}\n */\nfunction Degrees(expr) {\n  arity.exact(1, arguments, Degrees.name)\n  return new Expr({ degrees: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The e raised to an exponent number\n * @return {Expr}\n */\nfunction Exp(expr) {\n  arity.exact(1, arguments, Exp.name)\n  return new Expr({ exp: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A side of the right triangle\n * @param {...module:query~ExprArg} terms\n *   The second side of a right triange, defaults to the first side\n * @return {Expr}\n */\nfunction Hypot(value, side) {\n  arity.min(1, arguments, Hypot.name)\n  side = util.defaults(side, null)\n  return new Expr(params({ hypot: wrap(value) }, { b: wrap(side) }))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The natural log of the number\n * @return {Expr}\n */\nfunction Ln(expr) {\n  arity.exact(1, arguments, Ln.name)\n  return new Expr({ ln: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The log base 10 of a number\n * @return {Expr}\n */\nfunction Log(expr) {\n  arity.exact(1, arguments, Log.name)\n  return new Expr({ log: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to raise to the power.\n * @param {...module:query~ExprArg} terms\n *   An optional exponent\n * @return {Expr}\n */\nfunction Pow(value, exponent) {\n  arity.min(1, arguments, Pow.name)\n  exponent = util.defaults(exponent, null)\n  return new Expr(params({ pow: wrap(value) }, { exp: wrap(exponent) }))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   Take degrees and convert the number to radians 2 * pi = 360 degrees\n * @return {Expr}\n */\nfunction Radians(expr) {\n  arity.exact(1, arguments, Radians.name)\n  return new Expr({ radians: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The sine of a number\n * @return {Expr}\n */\nfunction Sin(expr) {\n  arity.exact(1, arguments, Sin.name)\n  return new Expr({ sin: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The hyperbolic sine of a number\n * @return {Expr}\n */\nfunction Sinh(expr) {\n  arity.exact(1, arguments, Sinh.name)\n  return new Expr({ sinh: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The Tangent of a number\n * @return {Expr}\n */\nfunction Tan(expr) {\n  arity.exact(1, arguments, Tan.name)\n  return new Expr({ tan: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The hyberbolic tangent of a number\n * @return {Expr}\n */\nfunction Tanh(expr) {\n  arity.exact(1, arguments, Tanh.name)\n  return new Expr({ tanh: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of terms to compare.\n * @return {Expr}\n */\nfunction LT() {\n  arity.min(1, arguments, LT.name)\n  return new Expr({ lt: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of terms to compare.\n * @return {Expr}\n */\nfunction LTE() {\n  arity.min(1, arguments, LTE.name)\n  return new Expr({ lte: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of terms to compare.\n * @return {Expr}\n */\nfunction GT() {\n  arity.min(1, arguments, GT.name)\n  return new Expr({ gt: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of terms to compare.\n * @return {Expr}\n */\nfunction GTE() {\n  arity.min(1, arguments, GTE.name)\n  return new Expr({ gte: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection to compute the conjunction of.\n * @return {Expr}\n */\nfunction And() {\n  arity.min(1, arguments, And.name)\n  return new Expr({ and: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection to compute the disjunction of.\n * @return {Expr}\n */\nfunction Or() {\n  arity.min(1, arguments, Or.name)\n  return new Expr({ or: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {module:query~ExprArg} boolean\n *   A boolean to produce the negation of.\n * @return {Expr}\n */\nfunction Not(boolean) {\n  arity.exact(1, arguments, Not.name)\n  return new Expr({ not: wrap(boolean) })\n}\n\n/**\n * Converts an expression to a string literal.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a string.\n * @return {Expr}\n */\nfunction ToString(expr) {\n  arity.exact(1, arguments, ToString.name)\n  return new Expr({ to_string: wrap(expr) })\n}\n\n/**\n * Converts an expression to a number literal.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a number.\n * @return {Expr}\n */\nfunction ToNumber(expr) {\n  arity.exact(1, arguments, ToNumber.name)\n  return new Expr({ to_number: wrap(expr) })\n}\n\n/**\n * Converts an expression to an Object.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to an Object.\n * @return {Expr}\n */\nfunction ToObject(expr) {\n  arity.exact(1, arguments, ToObject.name)\n  return new Expr({ to_object: wrap(expr) })\n}\n\n/**\n * Converts an expression to an Array.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to an Array.\n * @return {Expr}\n */\nfunction ToArray(expr) {\n  arity.exact(1, arguments, ToArray.name)\n  return new Expr({ to_array: wrap(expr) })\n}\n\n/**\n * Converts an expression to a double value, if possible.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a double.\n * @return {Expr}\n */\nfunction ToDouble(expr) {\n  arity.exact(1, arguments, ToDouble.name)\n  return new Expr({ to_double: wrap(expr) })\n}\n\n/**\n * Converts an expression to an integer value, if possible.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to an integer.\n * @return {Expr}\n */\nfunction ToInteger(expr) {\n  arity.exact(1, arguments, ToInteger.name)\n  return new Expr({ to_integer: wrap(expr) })\n}\n\n/**\n * Converts an expression to a time literal.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a time.\n * @return {Expr}\n */\nfunction ToTime(expr) {\n  arity.exact(1, arguments, ToTime.name)\n  return new Expr({ to_time: wrap(expr) })\n}\n\n/**\n * Converts an expression evaluating to a time to seconds since epoch.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to seconds numeric value.\n * @return {Expr}\n */\nfunction ToSeconds(expr) {\n  arity.exact(1, arguments, ToSeconds.name)\n  return new Expr({ to_seconds: wrap(expr) })\n}\n\n/**\n * Converts a time expression to milliseconds since the UNIX epoch.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to millisecond numeric value.\n * @return {Expr}\n */\nfunction ToMillis(expr) {\n  arity.exact(1, arguments, ToMillis.name)\n  return new Expr({ to_millis: wrap(expr) })\n}\n\n/**\n * Converts a time expression to microseconds since the UNIX epoch.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to microsecond numeric value.\n * @return {Expr}\n */\nfunction ToMicros(expr) {\n  arity.exact(1, arguments, ToMicros.name)\n  return new Expr({ to_micros: wrap(expr) })\n}\n\n/**\n * Returns a time expression's day of the week following ISO-8601 convention, from 1 (Monday) to 7 (Sunday).\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to day of week.\n * @return {Expr}\n */\nfunction DayOfWeek(expr) {\n  arity.exact(1, arguments, DayOfWeek.name)\n  return new Expr({ day_of_week: wrap(expr) })\n}\n\n/**\n * Returns a time expression's day of the year, from 1 to 365, or 366 in a leap year.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to day of year.\n * @return {Expr}\n */\nfunction DayOfYear(expr) {\n  arity.exact(1, arguments, DayOfYear.name)\n  return new Expr({ day_of_year: wrap(expr) })\n}\n\n/**\n * Returns a time expression's day of the month, from 1 to 31.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to day of month.\n * @return {Expr}\n */\nfunction DayOfMonth(expr) {\n  arity.exact(1, arguments, DayOfMonth.name)\n  return new Expr({ day_of_month: wrap(expr) })\n}\n\n/**\n * Returns a time expression's second of the minute, from 0 to 59.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a hour.\n * @return {Expr}\n */\nfunction Hour(expr) {\n  arity.exact(1, arguments, Hour.name)\n  return new Expr({ hour: wrap(expr) })\n}\n\n/**\n * Returns a time expression's second of the minute, from 0 to 59.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a month.\n * @return {Expr}\n */\nfunction Minute(expr) {\n  arity.exact(1, arguments, Minute.name)\n  return new Expr({ minute: wrap(expr) })\n}\n\n/**\n * Returns a time expression's second of the minute, from 0 to 59.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a month.\n * @return {Expr}\n */\nfunction Second(expr) {\n  arity.exact(1, arguments, Second.name)\n  return new Expr({ second: wrap(expr) })\n}\n\n/**\n * Returns a time expression's month of the year, from 1 to 12.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a month.\n * @return {Expr}\n */\nfunction Month(expr) {\n  arity.exact(1, arguments, Month.name)\n  return new Expr({ month: wrap(expr) })\n}\n\n/**\n * Returns the time expression's year, following the ISO-8601 standard.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a year.\n * @return {Expr}\n */\nfunction Year(expr) {\n  arity.exact(1, arguments, Year.name)\n  return new Expr({ year: wrap(expr) })\n}\n\n/**\n * Converts an expression to a date literal.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a date.\n * @return {Expr}\n */\nfunction ToDate(expr) {\n  arity.exact(1, arguments, ToDate.name)\n  return new Expr({ to_date: wrap(expr) })\n}\n\n/**\n * Move database to a new hierarchy.\n *\n * @param {string}  from database reference to be moved.\n * @param {string}  to new parent database reference.\n * @return {Expr}   The expression wrapping the provided object.\n * @see <a href=\"https://app.fauna.com/documentation/reference/queryapi#write-functions\">FaunaDB Write Functions</a>\n */\nfunction MoveDatabase(from, to) {\n  arity.exact(2, arguments, MoveDatabase.name)\n  return new Expr({ move_database: wrap(from), to: wrap(to) })\n}\n\n/**\n * Returns a set of all documents in the given collection.\n * A set must be paginated in order to retrieve its values.\n *\n * @param collection a reference to the collection. Type: Ref\n * @return a new {@link Expr} instance\n * @see #Paginate(Expr)\n */\nfunction Documents(collection) {\n  arity.exact(1, arguments, Documents.name)\n  return new Expr({ documents: wrap(collection) })\n}\n\n/**\n *\n * @param {module:query~ExprArg} expr\n *  An expression (i.e. Set, Page, or Array) to reverse\n * @return {Expr}\n */\nfunction Reverse(expr) {\n  arity.exact(1, arguments, Reverse.name)\n  return new Expr({ reverse: wrap(expr) })\n}\n\n/**\n *\n * @param {module:query~ExprArg} name\n * A string representing an AccessProvider's name\n * @return {Expr}\n */\nfunction AccessProvider(name) {\n  arity.exact(1, arguments, AccessProvider.name)\n  return new Expr({ access_provider: wrap(name) })\n}\n\n// Helpers\n\n/**\n * @ignore\n */\nfunction arity(min, max, args, callerFunc) {\n  if (\n    (min !== null && args.length < min) ||\n    (max !== null && args.length > max)\n  ) {\n    throw new errors.InvalidArity(min, max, args.length, callerFunc)\n  }\n}\n\narity.exact = function(n, args, callerFunc) {\n  arity(n, n, args, callerFunc)\n}\narity.max = function(n, args, callerFunc) {\n  arity(null, n, args, callerFunc)\n}\narity.min = function(n, args, callerFunc) {\n  arity(n, null, args, callerFunc)\n}\narity.between = function(min, max, args, callerFunc) {\n  arity(min, max, args, callerFunc)\n}\n\n/** Adds optional parameters to the query.\n *\n * @ignore\n * */\nfunction params(mainParams, optionalParams) {\n  for (var key in optionalParams) {\n    var val = optionalParams[key]\n    if (val !== null && val !== undefined) {\n      mainParams[key] = val\n    }\n  }\n  return mainParams\n}\n\n/**\n * Called on rest arguments.\n * This ensures that a single value passed is not put in an array, so\n * `query.add([1, 2])` will work as well as `query.add(1, 2)`.\n *\n * @ignore\n */\nfunction varargs(values) {\n  var valuesAsArr = Array.isArray(values)\n    ? values\n    : Array.prototype.slice.call(values)\n  return values.length === 1 ? values[0] : valuesAsArr\n}\n\n/**\n * @ignore\n */\nfunction argsToArray(args) {\n  var rv = []\n  rv.push.apply(rv, args)\n  return rv\n}\n\n/**\n * Wraps an object as an Expression. This will automatically wrap any bare objects with\n * the appropriate {@link object} escaping.\n * @param {Object} obj\n *  The object to be wrapped as an Expression.\n * @returns {Expr}\n *   The expression wrapping the provided object.\n * @private\n */\nfunction wrap(obj) {\n  arity.exact(1, arguments, wrap.name)\n  if (obj === null) {\n    return null\n  } else if (\n    obj instanceof Expr ||\n    util.checkInstanceHasProperty(obj, '_isFaunaExpr')\n  ) {\n    return obj\n  } else if (typeof obj === 'symbol') {\n    return obj.toString().replace(/Symbol\\((.*)\\)/, function(str, symbol) {\n      return symbol\n    })\n  } else if (typeof obj === 'function') {\n    return Lambda(obj)\n  } else if (Array.isArray(obj)) {\n    return new Expr(\n      obj.map(function(elem) {\n        return wrap(elem)\n      })\n    )\n  } else if (obj instanceof Uint8Array || obj instanceof ArrayBuffer) {\n    return new values.Bytes(obj)\n  } else if (typeof obj === 'object') {\n    return new Expr({ object: wrapValues(obj) })\n  } else {\n    return obj\n  }\n}\n\n/**\n * Wraps all of the values of a provided Object, while leaving the parent object unwrapped.\n * @param {Object} obj\n *  The object whose values are to be wrapped as Expressions.\n * @returns {Object}\n *  A copy of the provided object, with the values wrapped as Expressions.\n * @private\n */\nfunction wrapValues(obj) {\n  if (obj !== null) {\n    var rv = {}\n\n    Object.keys(obj).forEach(function(key) {\n      rv[key] = wrap(obj[key])\n    })\n\n    return rv\n  } else {\n    return null\n  }\n}\n\nmodule.exports = {\n  Ref: Ref,\n  Bytes: Bytes,\n  Abort: Abort,\n  At: At,\n  Let: Let,\n  Var: Var,\n  If: If,\n  Do: Do,\n  Object: objectFunction,\n  Lambda: Lambda,\n  Call: Call,\n  Query: Query,\n  Map: Map,\n  Foreach: Foreach,\n  Filter: Filter,\n  Take: Take,\n  Drop: Drop,\n  Prepend: Prepend,\n  Append: Append,\n  IsEmpty: IsEmpty,\n  IsNonEmpty: IsNonEmpty,\n  IsNumber: IsNumber,\n  IsDouble: IsDouble,\n  IsInteger: IsInteger,\n  IsBoolean: IsBoolean,\n  IsNull: IsNull,\n  IsBytes: IsBytes,\n  IsTimestamp: IsTimestamp,\n  IsDate: IsDate,\n  IsString: IsString,\n  IsArray: IsArray,\n  IsObject: IsObject,\n  IsRef: IsRef,\n  IsSet: IsSet,\n  IsDoc: IsDoc,\n  IsLambda: IsLambda,\n  IsCollection: IsCollection,\n  IsDatabase: IsDatabase,\n  IsIndex: IsIndex,\n  IsFunction: IsFunction,\n  IsKey: IsKey,\n  IsToken: IsToken,\n  IsCredentials: IsCredentials,\n  IsRole: IsRole,\n  Get: Get,\n  KeyFromSecret: KeyFromSecret,\n  Reduce: Reduce,\n  Paginate: Paginate,\n  Exists: Exists,\n  Create: Create,\n  Update: Update,\n  Replace: Replace,\n  Delete: Delete,\n  Insert: Insert,\n  Remove: Remove,\n  CreateClass: deprecate(\n    CreateClass,\n    'CreateClass() is deprecated, use CreateCollection() instead'\n  ),\n  CreateCollection: CreateCollection,\n  CreateDatabase: CreateDatabase,\n  CreateIndex: CreateIndex,\n  CreateKey: CreateKey,\n  CreateFunction: CreateFunction,\n  CreateRole: CreateRole,\n  CreateAccessProvider: CreateAccessProvider,\n  Singleton: Singleton,\n  Events: Events,\n  Match: Match,\n  Union: Union,\n  Merge: Merge,\n  Intersection: Intersection,\n  Difference: Difference,\n  Distinct: Distinct,\n  Join: Join,\n  Range: Range,\n  Login: Login,\n  Logout: Logout,\n  Identify: Identify,\n  Identity: deprecate(\n    Identity,\n    'Identity() is deprecated, use CurrentIdentity() instead'\n  ),\n  CurrentIdentity: CurrentIdentity,\n  HasIdentity: deprecate(\n    HasIdentity,\n    'HasIdentity() is deprecated, use HasCurrentIdentity() instead'\n  ),\n  HasCurrentIdentity: HasCurrentIdentity,\n  CurrentToken: CurrentToken,\n  HasCurrentToken: HasCurrentToken,\n  Concat: Concat,\n  Casefold: Casefold,\n  ContainsStr: ContainsStr,\n  ContainsStrRegex: ContainsStrRegex,\n  StartsWith: StartsWith,\n  EndsWith: EndsWith,\n  FindStr: FindStr,\n  FindStrRegex: FindStrRegex,\n  Length: Length,\n  LowerCase: LowerCase,\n  LTrim: LTrim,\n  NGram: NGram,\n  Repeat: Repeat,\n  ReplaceStr: ReplaceStr,\n  ReplaceStrRegex: ReplaceStrRegex,\n  RegexEscape: RegexEscape,\n  RTrim: RTrim,\n  Space: Space,\n  SubString: SubString,\n  TitleCase: TitleCase,\n  Trim: Trim,\n  UpperCase: UpperCase,\n  Format: Format,\n  Time: Time,\n  TimeAdd: TimeAdd,\n  TimeSubtract: TimeSubtract,\n  TimeDiff: TimeDiff,\n  Epoch: Epoch,\n  Date: Date,\n  Now: Now,\n  NextId: deprecate(NextId, 'NextId() is deprecated, use NewId() instead'),\n  NewId: NewId,\n  Database: Database,\n  Index: Index,\n  Class: deprecate(Class, 'Class() is deprecated, use Collection() instead'),\n  Collection: Collection,\n  Function: FunctionFn,\n  Role: Role,\n  AccessProviders: AccessProviders,\n  Classes: deprecate(\n    Classes,\n    'Classes() is deprecated, use Collections() instead'\n  ),\n  Collections: Collections,\n  Databases: Databases,\n  Indexes: Indexes,\n  Functions: Functions,\n  Roles: Roles,\n  Keys: Keys,\n  Tokens: Tokens,\n  Credentials: Credentials,\n  Equals: Equals,\n  Contains: deprecate(\n    Contains,\n    'Contains() is deprecated, use ContainsPath() instead'\n  ),\n  ContainsPath: ContainsPath,\n  ContainsField: ContainsField,\n  ContainsValue: ContainsValue,\n  Select: Select,\n  SelectAll: deprecate(SelectAll, 'SelectAll() is deprecated. Avoid use.'),\n  Abs: Abs,\n  Add: Add,\n  BitAnd: BitAnd,\n  BitNot: BitNot,\n  BitOr: BitOr,\n  BitXor: BitXor,\n  Ceil: Ceil,\n  Divide: Divide,\n  Floor: Floor,\n  Max: Max,\n  Min: Min,\n  Modulo: Modulo,\n  Multiply: Multiply,\n  Round: Round,\n  Subtract: Subtract,\n  Sign: Sign,\n  Sqrt: Sqrt,\n  Trunc: Trunc,\n  Count: Count,\n  Sum: Sum,\n  Mean: Mean,\n  Any: Any,\n  All: All,\n  Acos: Acos,\n  Asin: Asin,\n  Atan: Atan,\n  Cos: Cos,\n  Cosh: Cosh,\n  Degrees: Degrees,\n  Exp: Exp,\n  Hypot: Hypot,\n  Ln: Ln,\n  Log: Log,\n  Pow: Pow,\n  Radians: Radians,\n  Sin: Sin,\n  Sinh: Sinh,\n  Tan: Tan,\n  Tanh: Tanh,\n  LT: LT,\n  LTE: LTE,\n  GT: GT,\n  GTE: GTE,\n  And: And,\n  Or: Or,\n  Not: Not,\n  ToString: ToString,\n  ToNumber: ToNumber,\n  ToObject: ToObject,\n  ToArray: ToArray,\n  ToDouble: ToDouble,\n  ToInteger: ToInteger,\n  ToTime: ToTime,\n  ToSeconds: ToSeconds,\n  ToMicros: ToMicros,\n  ToMillis: ToMillis,\n  DayOfMonth: DayOfMonth,\n  DayOfWeek: DayOfWeek,\n  DayOfYear: DayOfYear,\n  Second: Second,\n  Minute: Minute,\n  Hour: Hour,\n  Month: Month,\n  Year: Year,\n  ToDate: ToDate,\n  MoveDatabase: MoveDatabase,\n  Documents: Documents,\n  Reverse: Reverse,\n  AccessProvider: AccessProvider,\n  wrap: wrap,\n}\n","'use strict'\n\n/** @module stream */\n\n// NOTE: Although implemented in a separate module, streaming shares internal\n// responsibilities with both Client and HTTP interfaces, such as updating last\n// seen transaction timestamp. Therefore, this implementation\n// sometimes breaks encapsulation and calls internal getters and methods. As a\n// general rule: it's okay to call internal methods. You can interpret this\n// as calling for a package visible method in languages with fine-grained\n// visibility control. However, DO NOT change any internal state from outside of\n// its context as it'd most certainly lead to errors.\n\nrequire('abort-controller/polyfill')\nvar RequestResult = require('./RequestResult')\nvar errors = require('./errors')\nvar json = require('./_json')\nvar http = require('./_http')\nvar q = require('./query')\nvar util = require('./_util')\n\nvar DefaultEvents = ['start', 'error', 'version', 'history_rewrite']\nvar DocumentStreamEvents = DefaultEvents.concat(['snapshot'])\n\n/**\n * The internal stream client interface. This class handles the network side of\n * a stream subscription.\n *\n * @constructor\n * @param {Client} client The FaunaDB client.\n * @param {module:query~ExprArg} expression The FQL expression you are subscribing to.\n * @param {module:stream~Options} options The stream options.\n * @param {function} onEvent The stream event's callback function.\n * @private\n */\nfunction StreamClient(client, expression, options, onEvent) {\n  options = util.applyDefaults(options, {\n    fields: null,\n  })\n\n  this._client = client\n  this._onEvent = onEvent\n  this._query = q.wrap(expression)\n  this._urlParams = options.fields ? { fields: options.fields.join(',') } : null\n  this._abort = new AbortController()\n  this._state = 'idle'\n}\n\n/**\n * Takes a snapshot of the current query. Assumes the subscribed query returns a\n * reference.\n */\nStreamClient.prototype.snapshot = function() {\n  var self = this\n  self._client\n    .query(q.Get(self._query))\n    .then(function(doc) {\n      self._onEvent({\n        type: 'snapshot',\n        event: doc,\n      })\n    })\n    .catch(function(error) {\n      self._onEvent({\n        type: 'error',\n        event: error,\n      })\n    })\n}\n\n/** Initiates the stream subscription.  */\nStreamClient.prototype.subscribe = function() {\n  var self = this\n\n  if (self._state === 'idle') {\n    self._state = 'open'\n  } else {\n    throw new Error(\n      'Subscription#start should not be called several times, ' +\n        'consider instantiating a new stream instead.'\n    )\n  }\n\n  var body = JSON.stringify(self._query)\n  var startTime = Date.now()\n  var buffer = ''\n\n  function onResponse(response) {\n    var endTime = Date.now()\n    var parsed\n\n    try {\n      parsed = json.parseJSON(response.body)\n    } catch (_) {\n      parsed = response.body\n    }\n\n    var result = new RequestResult(\n      'POST',\n      'stream',\n      self._urlParams,\n      body,\n      self._query,\n      response.body,\n      parsed,\n      response.status,\n      response.headers,\n      startTime,\n      endTime\n    )\n\n    self._client._handleRequestResult(response, result)\n  }\n\n  function onData(data) {\n    var result = json.parseJSONStreaming(buffer + data)\n\n    buffer = result.buffer\n\n    result.values.forEach(function(event) {\n      if (event.txn !== undefined) {\n        self._client.syncLastTxnTime(event.txn)\n      }\n\n      if (event.event === 'error') {\n        onError(new errors.StreamErrorEvent(event))\n      } else {\n        self._onEvent(event)\n      }\n    })\n  }\n\n  function onError(error) {\n    // AbortError is triggered as result of calling\n    // close() on a Subscription. There's no need to relay this event back up.\n    if (error instanceof http.AbortError) {\n      return\n    }\n\n    self._onEvent({\n      type: 'error',\n      event: error,\n    })\n  }\n\n  self._client._http\n    .execute({\n      method: 'POST',\n      path: 'stream',\n      body: body,\n      query: self._urlParams,\n      signal: this._abort.signal,\n      streamConsumer: {\n        onError: onError,\n        onData: onData,\n      },\n    })\n    .then(onResponse)\n    .catch(onError)\n}\n\n/** Closes the stream subscription by aborting its underlying http request. */\nStreamClient.prototype.close = function() {\n  if (this._state !== 'closed') {\n    this._state = 'closed'\n    this._abort.abort()\n  }\n}\n\n/**\n * Event dispatch interface for stream subscription.\n *\n * @constructor\n * @param {string[]} allowedEvents List of allowed events.\n * @private\n */\nfunction EventDispatcher(allowedEvents) {\n  this._allowedEvents = allowedEvents\n  this._listeners = {}\n}\n\n/** Subscribe to an event\n *\n * @param {string} type The event type.\n * @param {module:stream~Subscription~eventCalllback} callback\n *   The event's callback.\n */\nEventDispatcher.prototype.on = function(type, callback) {\n  if (this._allowedEvents.indexOf(type) === -1) {\n    throw new Error('Unknown event type: ' + type)\n  }\n  if (this._listeners[type] === undefined) {\n    this._listeners[type] = []\n  }\n  this._listeners[type].push(callback)\n}\n\n/**\n * Dispatch the given event to the appropriate listeners.\n *\n * @param {Object} event The event.\n */\nEventDispatcher.prototype.dispatch = function(event) {\n  var listeners = this._listeners[event.type]\n  if (!listeners) {\n    return\n  }\n\n  for (var i = 0; i < listeners.length; i++) {\n    listeners[i].call(null, event.event, event)\n  }\n}\n\n/**\n * Stream's start event. A stream subscription always begins with a start event.\n * Upcoming events are guaranteed to have transaction timestamps equal to or greater than\n * the stream's start timestamp.\n *\n * @event module:stream~Subscription#start\n * @type {object}\n * @property {string} type='start'\n *   The event type.\n * @property {number} txn\n *   The event's transaction timestamp.\n * @property {module:number} event\n *   The stream start timestamp.\n */\n\n/**\n * A version event occurs upon any modifications to the current state of the\n * subscribed document.\n *\n * @event module:stream~Subscription#version\n * @type {object}\n * @property {string} type='version'\n *   The event type.\n * @property {number} txn\n *   The event's transaction timestamp.\n * @property {object} event\n *   The event's data.\n */\n\n/**\n * A history rewrite event occurs upon any modifications to the history of the\n * subscribed document.\n *\n * @event module:stream~Subscription#history_rewrite\n * @type {object}\n * @property {string} type='history_rewrite'\n *   The event type.\n * @property {number} txn\n *   The event's transaction timestamp.\n * @property {object} event\n *   The event's data.\n */\n\n/**\n * A snapshot event. A snapshot event is fired once the `document` stream helper\n * finishes loading the subscribed document's snapshot data. See {@link\n * Client#stream} for more details on the `document` stream helper.\n *\n * @event module:stream~Subscription#snapshot\n * @type {object}\n * @property {string} type='snapshot'\n *   The event type.\n * @property {number} txn\n *   The event's transaction timestamp.\n * @property {object} event\n *   The event's data.\n */\n\n/**\n * An error event is fired both for client and server errors that may occur as\n * a result of a subscription.\n *\n * @event module:stream~Subscription#error\n * @type {object}\n * @property {string} type='error'\n *   The event type.\n * @property {?number} txn\n *   The event's transaction timestamp.\n * @property {Error} event\n *   The underlying error.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string[]} [fields=['action', 'document', 'diff', 'prev']]\n *   The fields event fields to opt-in during stream subscription. Possible\n *   options:\n *   * 'action': The action type\n *   * 'document': The document's data\n *   * 'diff': The difference between 'document' and 'prev'\n *   * 'prev': The event's previous data\n */\n\n/**\n * The callback to be executed when an new event occurs.\n *\n * @callback module:stream~Subscription~eventCalllback\n * @param {any} data The event's data field.\n * @param {object} event The event's entire object.\n */\n\n/**\n * A stream subscription which dispatches events received to the registered\n * listener functions. This class must be constructed via {@link Client#stream}\n * method.\n *\n * @constructor\n * @param {StreamClient} client\n *   Internal stream client interface.\n * @param {EventDispatcher} dispatcher\n *   Internal event dispatcher interface.\n */\nfunction Subscription(client, dispatcher) {\n  this._client = client\n  this._dispatcher = dispatcher\n}\n\n/**\n * Subscribes to an event type.\n *\n * @param {string} event\n *   The event's type.\n * @param {module:stream~Subscription~eventCalllback} callback\n *   A callback function.\n *\n * @returns {module:stream~Subscription} This instance.\n */\nSubscription.prototype.on = function(type, callback) {\n  this._dispatcher.on(type, callback)\n  return this\n}\n\n/**\n * Initiates the underlying subscription network calls.\n * @returns {module:stream~Subscription} This instance.\n */\nSubscription.prototype.start = function() {\n  this._client.subscribe()\n  return this\n}\n\n/**\n * Stops the current subscription and closes the underlying network connection.\n */\nSubscription.prototype.close = function() {\n  this._client.close()\n}\n\n/**\n * Stream API factory function. See {@link Client#stream} for details on how to\n * use stream's public interface.\n * @private\n */\nfunction StreamAPI(client) {\n  var api = function(expression, options) {\n    var dispatcher = new EventDispatcher(DefaultEvents)\n    var streamClient = new StreamClient(client, expression, options, function(\n      event\n    ) {\n      dispatcher.dispatch(event)\n    })\n    return new Subscription(streamClient, dispatcher)\n  }\n\n  api.document = function(expression, options) {\n    var buffer = []\n    var buffering = true\n    var dispatcher = new EventDispatcher(DocumentStreamEvents)\n    var streamClient = new StreamClient(client, expression, options, onEvent)\n\n    function onEvent(event) {\n      switch (event.type) {\n        case 'start':\n          dispatcher.dispatch(event)\n          streamClient.snapshot()\n          break\n        case 'snapshot':\n          resume(event)\n          break\n        case 'error':\n          dispatcher.dispatch(event)\n          break\n        default:\n          if (buffering) {\n            buffer.push(event)\n          } else {\n            dispatcher.dispatch(event)\n          }\n      }\n    }\n\n    function resume(snapshotEvent) {\n      dispatcher.dispatch(snapshotEvent)\n      for (var i = 0; i < buffer.length; i++) {\n        var bufferedEvent = buffer[i]\n        if (bufferedEvent.txn > snapshotEvent.event.ts) {\n          dispatcher.dispatch(bufferedEvent)\n        }\n      }\n      buffering = false\n      buffer = null\n    }\n\n    return new Subscription(streamClient, dispatcher)\n  }\n\n  return api\n}\n\nmodule.exports = {\n  StreamAPI: StreamAPI,\n}\n","'use strict'\n\nvar base64 = require('base64-js')\nvar deprecate = require('util-deprecate')\nvar errors = require('./errors')\nvar Expr = require('./Expr')\nvar util = require('./_util')\nvar nodeUtil = util.isNodeEnv() ? require('util') : null\n\nvar customInspect = nodeUtil && nodeUtil.inspect.custom\nvar stringify = nodeUtil ? nodeUtil.inspect : JSON.stringify\n\n/**\n * FaunaDB value types. Generally, these collections do not need to be instantiated\n * directly; they can be constructed through helper methods in {@link module:query}.\n *\n * Instances of these collections will be returned in responses if the response object\n * contains these values. For example, a FaunaDB response containing\n *`{ \"@ref\": { \"id\": \"123\", \"collection\": { \"@ref\": { \"id\": \"frogs\", \"collection\": { \"@ref\": { \"id\": \"collectiones\" } } } } } }`\n * will be returned as `new values.Ref(\"123\", new values.Ref(\"frogs\", values.Native.COLLECTIONS))`.\n *\n * See the [FaunaDB Query API Documentation](https://app.fauna.com/documentation/reference/queryapi#simple-type)\n * for more information.\n *\n * @module values\n */\n\n/**\n * Base type for FaunaDB value objects.\n *\n * @extends Expr\n * @abstract\n * @constructor\n */\nfunction Value() {}\n\nValue.prototype._isFaunaValue = true\n\nutil.inherits(Value, Expr)\n\n/**\n * FaunaDB ref.\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {string} id\n *   The id portion of the ref.\n * @param {Ref} [collection]\n *   The collection portion of the ref.\n * @param {Ref} [database]\n *   The database portion of the ref.\n *\n * @extends module:values~Value\n * @constructor\n */\nfunction Ref(id, collection, database) {\n  if (!id) throw new errors.InvalidValue('id cannot be null or undefined')\n\n  this.value = { id: id }\n  if (collection) this.value['collection'] = collection\n  if (database) this.value['database'] = database\n}\n\nRef.prototype._isFaunaRef = true\n\nutil.inherits(Ref, Value)\n\n/**\n * Gets the collection part out of the Ref.\n *\n * @member {string}\n * @name module:values~Ref#collection\n */\nObject.defineProperty(Ref.prototype, 'collection', {\n  get: function() {\n    return this.value['collection']\n  },\n})\n\n/**\n * DEPRECATED. Gets the class part out of the Ref.\n *\n * @member {string}\n * @name module:values~Ref#class\n */\nObject.defineProperty(Ref.prototype, 'class', {\n  get: deprecate(function() {\n    return this.value['collection']\n  }, 'class is deprecated, use collection instead'),\n})\n\n/**\n * Gets the database part out of the Ref.\n *\n * @member {Ref}\n * @name module:values~Ref#database\n */\nObject.defineProperty(Ref.prototype, 'database', {\n  get: function() {\n    return this.value['database']\n  },\n})\n\n/**\n * Gets the id part out of the Ref.\n *\n * @member {Ref}\n * @name module:values~Ref#id\n */\nObject.defineProperty(Ref.prototype, 'id', {\n  get: function() {\n    return this.value['id']\n  },\n})\n\n/** @ignore */\nRef.prototype.toJSON = function() {\n  return { '@ref': this.value }\n}\n\nwrapToString(Ref, function() {\n  var constructors = {\n    collections: 'Collection',\n    databases: 'Database',\n    indexes: 'Index',\n    functions: 'Function',\n    roles: 'Role',\n    access_providers: 'AccessProvider',\n  }\n\n  var isNative = function(ref) {\n    return ref.collection === undefined\n  }\n\n  var toString = function(ref) {\n    if (isNative(ref)) {\n      var db = ref.database !== undefined ? ref.database.toString() : ''\n\n      if (ref.id === 'access_providers') return 'AccessProviders(' + db + ')'\n\n      return ref.id.charAt(0).toUpperCase() + ref.id.slice(1) + '(' + db + ')'\n    }\n\n    if (isNative(ref.collection)) {\n      var constructor = constructors[ref.collection.id]\n      if (constructor !== undefined) {\n        var db =\n          ref.database !== undefined ? ', ' + ref.database.toString() : ''\n        return constructor + '(\"' + ref.id + '\"' + db + ')'\n      }\n    }\n\n    return 'Ref(' + toString(ref.collection) + ', \"' + ref.id + '\")'\n  }\n\n  return toString(this)\n})\n\n/** @ignore */\nRef.prototype.valueOf = function() {\n  return this.value\n}\n\n/**\n * Whether these are both Refs and have the same value.\n * @param {any} other\n * @returns {boolean}\n */\nRef.prototype.equals = function(other) {\n  return (\n    (other instanceof Ref ||\n      util.checkInstanceHasProperty(other, '_isFaunaRef')) &&\n    this.id === other.id &&\n    ((this.collection === undefined && other.collection === undefined) ||\n      this.collection.equals(other.collection)) &&\n    ((this.database === undefined && other.database === undefined) ||\n      this.database.equals(other.database))\n  )\n}\n\nvar Native = {\n  COLLECTIONS: new Ref('collections'),\n  INDEXES: new Ref('indexes'),\n  DATABASES: new Ref('databases'),\n  FUNCTIONS: new Ref('functions'),\n  ROLES: new Ref('roles'),\n  KEYS: new Ref('keys'),\n  ACCESS_PROVIDERS: new Ref('access_providers'),\n}\n\nNative.fromName = function(name) {\n  switch (name) {\n    case 'collections':\n      return Native.COLLECTIONS\n    case 'indexes':\n      return Native.INDEXES\n    case 'databases':\n      return Native.DATABASES\n    case 'functions':\n      return Native.FUNCTIONS\n    case 'roles':\n      return Native.ROLES\n    case 'keys':\n      return Native.KEYS\n    case 'access_providers':\n      return Native.ACCESS_PROVIDERS\n  }\n  return new Ref(name)\n}\n\n/**\n * FaunaDB Set.\n * This represents a set returned as part of a response.\n * This looks like `{\"@set\": set_query}`.\n * For query sets see {@link match}, {@link union},\n * {@link intersection}, {@link difference}, and {@link join}.\n *\n * @extends module:values~Value\n * @constructor\n */\nfunction SetRef(value) {\n  /** Raw query object. */\n  this.value = value\n}\n\nutil.inherits(SetRef, Value)\n\nwrapToString(SetRef, function() {\n  return Expr.toString(this.value)\n})\n\n/** @ignore */\nSetRef.prototype.toJSON = function() {\n  return { '@set': this.value }\n}\n\n/** FaunaDB time. See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {string|Date} value If a Date, this is converted to a string.\n * @extends module:values~Value\n * @constructor\n */\nfunction FaunaTime(value) {\n  if (value instanceof Date) {\n    value = value.toISOString()\n  } else if (!(value.charAt(value.length - 1) === 'Z')) {\n    throw new errors.InvalidValue(\"Only allowed timezone is 'Z', got: \" + value)\n  }\n\n  this.value = value\n}\n\nutil.inherits(FaunaTime, Value)\n\n/**\n * Returns the date wrapped by this object.\n * This is lossy as Dates have millisecond rather than nanosecond precision.\n *\n * @member {Date}\n * @name module:values~FaunaTime#date\n */\nObject.defineProperty(FaunaTime.prototype, 'date', {\n  get: function() {\n    return new Date(this.value)\n  },\n})\n\nwrapToString(FaunaTime, function() {\n  return 'Time(\"' + this.value + '\")'\n})\n\n/** @ignore */\nFaunaTime.prototype.toJSON = function() {\n  return { '@ts': this.value }\n}\n\n/** FaunaDB date. See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {string|Date} value\n *   If a Date, this is converted to a string, with time-of-day discarded.\n * @extends module:values~Value\n * @constructor\n */\nfunction FaunaDate(value) {\n  if (value instanceof Date) {\n    // The first 10 characters 'YYYY-MM-DD' are the date portion.\n    value = value.toISOString().slice(0, 10)\n  }\n\n  /**\n   * ISO8601 date.\n   * @type {string}\n   */\n  this.value = value\n}\n\nutil.inherits(FaunaDate, Value)\n\n/**\n * @member {Date}\n * @name module:values~FaunaDate#date\n */\nObject.defineProperty(FaunaDate.prototype, 'date', {\n  get: function() {\n    return new Date(this.value)\n  },\n})\n\nwrapToString(FaunaDate, function() {\n  return 'Date(\"' + this.value + '\")'\n})\n\n/** @ignore */\nFaunaDate.prototype.toJSON = function() {\n  return { '@date': this.value }\n}\n\n/** FaunaDB bytes. See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {Uint8Array|ArrayBuffer|string} value\n *    If ArrayBuffer it's converted to Uint8Array\n *    If string it must be base64 encoded and it's converted to Uint8Array\n * @extends module:values~Value\n * @constructor\n */\nfunction Bytes(value) {\n  if (value instanceof ArrayBuffer) {\n    this.value = new Uint8Array(value)\n  } else if (typeof value === 'string') {\n    this.value = base64.toByteArray(value)\n  } else if (value instanceof Uint8Array) {\n    this.value = value\n  } else {\n    throw new errors.InvalidValue(\n      'Bytes type expect argument to be either Uint8Array|ArrayBuffer|string, got: ' +\n        stringify(value)\n    )\n  }\n}\n\nutil.inherits(Bytes, Value)\n\nwrapToString(Bytes, function() {\n  return 'Bytes(\"' + base64.fromByteArray(this.value) + '\")'\n})\n\n/** @ignore */\nBytes.prototype.toJSON = function() {\n  return { '@bytes': base64.fromByteArray(this.value) }\n}\n\n/** FaunaDB query. See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {any} value\n * @extends module:values~Value\n * @constructor\n */\nfunction Query(value) {\n  this.value = value\n}\n\nutil.inherits(Query, Value)\n\nwrapToString(Query, function() {\n  return 'Query(' + Expr.toString(this.value) + ')'\n})\n\n/** @ignore */\nQuery.prototype.toJSON = function() {\n  return { '@query': this.value }\n}\n\n/** @ignore */\nfunction wrapToString(type, fn) {\n  type.prototype.toString = fn\n  type.prototype.inspect = fn\n\n  if (customInspect) {\n    type.prototype[customInspect] = fn\n  }\n}\n\nmodule.exports = {\n  Value: Value,\n  Ref: Ref,\n  Native: Native,\n  SetRef: SetRef,\n  FaunaTime: FaunaTime,\n  FaunaDate: FaunaDate,\n  Bytes: Bytes,\n  Query: Query,\n}\n","'use strict';\n\nmodule.exports = annotate;\n\nfunction annotate(fn) {\n\n  if (typeof fn !== 'function') {\n    throw new Error('Could not parse function signature for injection dependencies: Object is not a function');\n  }\n\n  if (!fn.length) return [];\n\n  var injects = /^()\\(?([^)=]*)\\)? *=>/.exec(fn + '') ||\n                /^[^(]+([^ \\(]*) *\\(([^\\)]*)\\)/.exec(fn + '');\n\n  if (!injects) {\n    throw new Error('Could not parse function signature for injection dependencies: ' + fn + '');\n  }\n\n  var argumentString = injects[2]\n\n  // Strip multi-line comments:\n  // Uses the lazy-quantifier (.*?): http://www.rexegg.com/regex-quantifiers.html#lazy_solution\n  .replace(/\\/\\*[\\S\\s]*?\\*\\//g, ' ')\n\n  // Strip single-line comments:\n  .replace(/\\/\\/.*/g, ' ');\n\n  function groupSubArguments(_, type, keys) {\n    return type + keys.split(',')\n    .map(function (arg) {\n      return arg && arg.trim();\n    })\n    .filter(Boolean)\n    .join('@');\n  }\n\n  argumentString = argumentString.replace(/(\\{)([^}]*)\\}/g, groupSubArguments);\n  argumentString = argumentString.replace(/(\\[)([^}]*)\\]/g, groupSubArguments);\n\n  return argumentString.split(',')\n  .map(function (arg) {\n    return arg && arg.trim();\n  })\n  .map(function (arg) {\n    if (arg[0] === '{') {\n      return arg.substring(1).split('@');\n    }\n    if (arg[0] === '[') {\n      return { items: arg.substring(1).split('@') };\n    }\n    return arg;\n  })\n  .filter(Boolean);\n\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","import type {RestypedBase, RestypedRoute} from 'restyped'\nimport { Router } from 'worktop'\nimport type { ServerRequest } from 'worktop/request'\nimport type { ServerResponse } from 'worktop/response'\n\nexport interface TypedRequest<T extends RestypedRoute> extends ServerRequest {\n  body: {\n    (): Promise<T['body']>\n    json<T=any>(): Promise<T>\n    arrayBuffer(): Promise<ArrayBuffer>\n    formData(): Promise<FormData>\n    text(): Promise<string>\n    blob(): Promise<Blob>\n  }\n  params: T['params']\n  query: T['query']\n}\n\ntype HTTPMethod =\n  | 'GET'\n  | 'POST'\n  | 'PUT'\n  | 'PATCH'\n  | 'HEAD'\n  | 'DELETE'\n  | 'OPTIONS'\n\nexport class TypedRouter<APIDef extends RestypedBase> {\n  worktopRouter = new Router()\n\n  add<\n    Path extends keyof APIDef,\n    Method extends HTTPMethod\n  >(\n    method: Method,\n    path: Path,\n    handler: (\n      req: ServerRequest,\n      res: ServerResponse\n    ) => Promise<APIDef[Path][Method]['response']>\n  ) {\n\n    console.log('/api' + path)\n\n    this.worktopRouter.add(method, '/api' + path as string, async (req, res) => {\n      const obj = await handler(req, res)\n      if (obj) {\n        res.send(200, obj)\n      }\n    })\n\n    // route(path, function(req, res, next) {\n    //   return handler(req, res)\n    //     .then(result => {\n    //       if (!res.headersSent) {\n    //         res.send(result)\n    //       }\n    //     })\n    //     .catch(err => next(err))\n    // })\n  }\n}","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","export function parse(str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n\nvar RGX = /*#__PURE__*/ /(\\/|^)([:*][^/]*?)(\\?)?(?=[/.]|$)/g;\n\n// error if key missing?\nexport function inject(route, values) {\n\treturn route.replace(RGX, (x, lead, key, optional) => {\n\t\tx = values[key=='*' ? 'wild' : key.substring(1)];\n\t\treturn x ? '/'+x : (optional || key=='*') ? '' : '/' + key;\n\t});\n}\n","// src/internal/request.ts\nfunction n(e) {\n  let r, t, a, o = {};\n  for ([r, t] of e)\n    o[r] = (a = o[r]) !== void 0 ? [].concat(a, t) : t;\n  return o;\n}\nasync function i(e, r) {\n  if (!(!e.body || !r))\n    return ~r.indexOf(\"application/json\") ? e.json() : ~r.indexOf(\"multipart/form-data\") || ~r.indexOf(\"application/x-www-form-urlencoded\") ? e.formData().then(n) : ~r.indexOf(\"text/\") ? e.text() : e.arrayBuffer();\n}\n\n// src/request.ts\nfunction f(e) {\n  let r = this, {request: t} = e, a = new URL(t.url);\n  return r.url = t.url, r.method = t.method, r.headers = t.headers, r.extend = e.waitUntil.bind(e), r.cf = t.cf, r.params = {}, r.path = a.pathname, r.hostname = a.hostname, r.origin = a.origin, r.query = a.searchParams, r.search = a.search, r.body = i.bind(0, t, r.headers.get(\"content-type\")), r.body.blob = t.blob.bind(t), r.body.text = t.text.bind(t), r.body.arrayBuffer = t.arrayBuffer.bind(t), r.body.formData = t.formData.bind(t), r.body.json = t.json.bind(t), r;\n}\nexport {\n  f as ServerRequest\n};\n","// src/response.ts\nimport {byteLength as b} from \"worktop/utils\";\n\n// src/internal/constants.ts\nvar s = \"content-type\", i = \"content-length\";\n\n// src/response.ts\nfunction h(u) {\n  var e = this, r = e.headers = new Headers({\n    \"Cache-Control\": \"private, no-cache\"\n  });\n  return e.body = \"\", e.finished = !1, e.status = e.statusCode = 200, e.getHeaders = () => Object.fromEntries(r), e.getHeaderNames = () => [...r.keys()], e.hasHeader = r.has.bind(r), e.getHeader = r.get.bind(r), e.removeHeader = r.delete.bind(r), e.setHeader = r.set.bind(r), Object.defineProperty(e, \"status\", {\n    set: (n) => {\n      e.statusCode = n;\n    },\n    get: () => e.statusCode\n  }), e.end = (n) => {\n    e.finished || (e.finished = !0, e.body = n);\n  }, e.writeHead = (n, t) => {\n    e.statusCode = n;\n    for (let d in t)\n      r.set(d, t[d]);\n  }, e.send = (n, t, d) => {\n    let a = typeof t, o = {};\n    for (let p in d)\n      o[p.toLowerCase()] = d[p];\n    let f = o[i] || e.getHeader(i), l = o[s] || e.getHeader(s);\n    t == null ? t = \"\" : a === \"object\" ? (t = JSON.stringify(t), l = l || \"application/json;charset=utf-8\") : a !== \"string\" && (t = String(t)), o[s] = l || \"text/plain\", o[i] = f || String(t.byteLength || b(t)), n === 204 || n === 205 || n === 304 ? (e.removeHeader(i), e.removeHeader(s), delete o[i], delete o[s], t = null) : u === \"HEAD\" && (t = null), e.writeHead(n, o), e.end(t);\n  }, e;\n}\nexport {\n  h as ServerResponse\n};\n","// src/router.ts\nimport {parse as f} from \"regexparam\";\nimport {ServerRequest as u} from \"worktop/request\";\nimport {ServerResponse as R} from \"worktop/response\";\n\n// src/internal/constants.ts\nvar c = {\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"413\": \"Payload Too Large\",\n  \"422\": \"Unprocessable Entity\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\"\n};\n\n// src/router.ts\nfunction m(t) {\n  return (o) => o.respondWith(t(o));\n}\nfunction w(t) {\n  addEventListener(\"fetch\", m(t));\n}\nvar l = !1;\nfunction E(...t) {\n  return async function(o, s) {\n    let r, e, n = t.length;\n    for (r of t)\n      if (e = await d(r, --n <= 0 && !l, o, s))\n        return e;\n  };\n}\nasync function d(t, o, s, r, ...e) {\n  let n = await t(s, r, ...e);\n  if (n instanceof Response)\n    return n;\n  if (o || r.finished)\n    return new Response(r.body, r);\n}\nfunction y(t, o, s) {\n  let r = {}, e, n, a, i, p;\n  if (n = t[o]) {\n    if (e = n.__s[s])\n      return {params: r, handler: e.handler};\n    for ([a, i] of n.__d)\n      if (p = a.exec(s), p !== null) {\n        if (p.groups !== void 0)\n          for (e in p.groups)\n            r[e] = p.groups[e];\n        else if (i.keys.length > 0)\n          for (e = 0; e < i.keys.length; )\n            r[i.keys[e++]] = p[e];\n        return {params: r, handler: i.handler};\n      }\n  }\n}\nfunction x() {\n  let t, o = {};\n  return t = {\n    add(s, r, e) {\n      let n = o[s];\n      if (n === void 0 && (n = o[s] = {\n        __d: new Map(),\n        __s: {}\n      }), r instanceof RegExp)\n        n.__d.set(r, {keys: [], handler: e});\n      else if (/[:|*]/.test(r)) {\n        let {keys: a, pattern: i} = f(r);\n        n.__d.set(i, {keys: a, handler: e});\n      } else\n        n.__s[r] = {keys: [], handler: e};\n    },\n    onerror(s, r, e, n) {\n      let a = c[e = e || 500], i = n && n.message || a || String(e);\n      return new Response(i, {status: e, statusText: a});\n    },\n    async run(s) {\n      let r, e = new u(s), n = new R(e.method);\n      if (l = !!t.prepare) {\n        if (r = await d(t.prepare, !1, e, n), r)\n          return r;\n        l = !1;\n      }\n      return r = y(o, e.method, e.path), r ? (e.params = r.params, d(r.handler, !0, e, n).catch((a) => d(t.onerror, !0, e, n, 500, a))) : d(t.onerror, !0, e, n, 404);\n    }\n  };\n}\nexport {\n  x as Router,\n  c as STATUS_CODES,\n  E as compose,\n  w as listen,\n  m as reply\n};\n","// src/utils.ts\nvar b = [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"0a\", \"0b\", \"0c\", \"0d\", \"0e\", \"0f\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"1a\", \"1b\", \"1c\", \"1d\", \"1e\", \"1f\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"2a\", \"2b\", \"2c\", \"2d\", \"2e\", \"2f\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"3a\", \"3b\", \"3c\", \"3d\", \"3e\", \"3f\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"4a\", \"4b\", \"4c\", \"4d\", \"4e\", \"4f\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\", \"5a\", \"5b\", \"5c\", \"5d\", \"5e\", \"5f\", \"60\", \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"6a\", \"6b\", \"6c\", \"6d\", \"6e\", \"6f\", \"70\", \"71\", \"72\", \"73\", \"74\", \"75\", \"76\", \"77\", \"78\", \"79\", \"7a\", \"7b\", \"7c\", \"7d\", \"7e\", \"7f\", \"80\", \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"8a\", \"8b\", \"8c\", \"8d\", \"8e\", \"8f\", \"90\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\", \"9a\", \"9b\", \"9c\", \"9d\", \"9e\", \"9f\", \"a0\", \"a1\", \"a2\", \"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\", \"a9\", \"aa\", \"ab\", \"ac\", \"ad\", \"ae\", \"af\", \"b0\", \"b1\", \"b2\", \"b3\", \"b4\", \"b5\", \"b6\", \"b7\", \"b8\", \"b9\", \"ba\", \"bb\", \"bc\", \"bd\", \"be\", \"bf\", \"c0\", \"c1\", \"c2\", \"c3\", \"c4\", \"c5\", \"c6\", \"c7\", \"c8\", \"c9\", \"ca\", \"cb\", \"cc\", \"cd\", \"ce\", \"cf\", \"d0\", \"d1\", \"d2\", \"d3\", \"d4\", \"d5\", \"d6\", \"d7\", \"d8\", \"d9\", \"da\", \"db\", \"dc\", \"dd\", \"de\", \"df\", \"e0\", \"e1\", \"e2\", \"e3\", \"e4\", \"e5\", \"e6\", \"e7\", \"e8\", \"e9\", \"ea\", \"eb\", \"ec\", \"ed\", \"ee\", \"ef\", \"f0\", \"f1\", \"f2\", \"f3\", \"f4\", \"f5\", \"f6\", \"f7\", \"f8\", \"f9\", \"fa\", \"fb\", \"fc\", \"fd\", \"fe\", \"ff\"];\nfunction x(e) {\n  let r = 0, n = \"\", t = new Uint8Array(e);\n  for (; r < t.length; r++)\n    n += b[t[r]];\n  return n;\n}\nfunction p(e) {\n  let r = 0, n = e.length, t = [];\n  for (n & 1 && (e += \"0\", n++); r < n; r += 2)\n    t.push(parseInt(e[r] + e[r + 1], 16));\n  return new Uint8Array(t);\n}\nvar A = () => crypto.randomUUID(), u = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890-_\";\nfunction g(e) {\n  for (var r = \"\", n = e || 11, t = f(n); n--; )\n    r += u[t[n] & 63];\n  return r;\n}\nvar a = \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\";\nfunction l() {\n  for (var e = \"\", r = 16, n = Date.now(), t, c = a.length, o = f(r); r--; )\n    t = o[r] / 255 * c | 0, t === c && (t = 31), e = a.charAt(t) + e;\n  for (r = 10; r--; )\n    t = n % c, n = (n - t) / c, e = a.charAt(t) + e;\n  return e;\n}\nfunction f(e) {\n  return crypto.getRandomValues(new Uint8Array(e));\n}\nvar d = /* @__PURE__ */ new TextEncoder(), i = /* @__PURE__ */ new TextDecoder(), m = (e) => d.encode(e), y = (e, r = !1) => i.decode(e, {stream: r});\nfunction h(e) {\n  return e ? d.encode(e).byteLength : 0;\n}\nexport {\n  i as Decoder,\n  d as Encoder,\n  b as HEX,\n  h as byteLength,\n  y as decode,\n  m as encode,\n  f as randomize,\n  x as toHEX,\n  g as uid,\n  l as ulid,\n  A as uuid,\n  p as viaHEX\n};\n","var extendStatics=function(e,t){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)};function __extends(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}extendStatics(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var util,__assign=function(){return(__assign=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function __awaiter(e,i,s,u){return new(s=s||Promise)(function(r,t){function n(e){try{a(u.next(e))}catch(e){t(e)}}function o(e){try{a(u.throw(e))}catch(e){t(e)}}function a(e){var t;e.done?r(e.value):((t=e.value)instanceof s?t:new s(function(e){e(t)})).then(n,o)}a((u=u.apply(e,i||[])).next())})}function __generator(r,n){var o,a,i,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]},e={next:t(0),throw:t(1),return:t(2)};return\"function\"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(t){return function(e){return function(t){if(o)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(o=1,a&&(i=2&t[0]?a.return:t[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,t[1])).done)return i;switch(a=0,(t=i?[2&t[0],i.value]:t)[0]){case 0:case 1:i=t;break;case 4:return s.label++,{value:t[1],done:!1};case 5:s.label++,a=t[1],t=[0];continue;case 7:t=s.ops.pop(),s.trys.pop();continue;default:if(!(i=0<(i=s.trys).length&&i[i.length-1])&&(6===t[0]||2===t[0])){s=0;continue}if(3===t[0]&&(!i||t[1]>i[0]&&t[1]<i[3])){s.label=t[1];break}if(6===t[0]&&s.label<i[1]){s.label=i[1],i=t;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(t);break}i[2]&&s.ops.pop(),s.trys.pop();continue}t=n.call(r,s)}catch(e){t=[6,e],a=0}finally{o=i=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([t,e])}}}function __values(e){var t=\"function\"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&\"number\"==typeof e.length)return{next:function(){return{value:(e=e&&n>=e.length?void 0:e)&&e[n++],done:!e}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}function __read(e,t){var r=\"function\"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,o,a=r.call(e),i=[];try{for(;(void 0===t||0<t--)&&!(n=a.next()).done;)i.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(r=a.return)&&r.call(a)}finally{if(o)throw o.error}}return i}function __spread(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(__read(arguments[t]));return e}!function(u){u.assertNever=function(e){throw new Error},u.arrayToEnum=function(e){var t,r,n={};try{for(var o=__values(e),a=o.next();!a.done;a=o.next()){var i=a.value;n[i]=i}}catch(e){t={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return n},u.getValidEnumValues=function(t){var r,e,n=u.objectKeys(t).filter(function(e){return\"number\"!=typeof t[t[e]]}),o={};try{for(var a=__values(n),i=a.next();!i.done;i=a.next()){var s=i.value;o[s]=t[s]}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=a.return)&&e.call(a)}finally{if(r)throw r.error}}return u.objectValues(o)},u.objectValues=function(t){return u.objectKeys(t).map(function(e){return t[e]})},u.objectKeys=\"function\"==typeof Object.keys?function(e){return Object.keys(e)}:function(e){var t,r=[];for(t in e)Object.prototype.hasOwnProperty.call(e,t)&&r.push(t);return r},u.find=function(e,t){var r,n;try{for(var o=__values(e),a=o.next();!a.done;a=o.next()){var i=a.value;if(t(i))return i}}catch(e){r={error:e}}finally{try{a&&!a.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}},u.isInteger=\"function\"==typeof Number.isInteger?function(e){return Number.isInteger(e)}:function(e){return\"number\"==typeof e&&isFinite(e)&&Math.floor(e)===e}}(util=util||{});var errorUtil,ZodIssueCode=util.arrayToEnum([\"invalid_type\",\"custom\",\"invalid_union\",\"invalid_enum_value\",\"unrecognized_keys\",\"invalid_arguments\",\"invalid_return_type\",\"invalid_date\",\"invalid_string\",\"too_small\",\"too_big\",\"invalid_intersection_types\",\"not_multiple_of\"]),quotelessJson=function(e){return JSON.stringify(e,null,2).replace(/\"([^\"]+)\":/g,\"$1:\")},ZodError=function(r){function t(e){var t=this.constructor,u=r.call(this)||this;u.issues=[],u.format=function(){var c={_errors:[]},p=function(e){var t,r;try{for(var n=__values(e.issues),o=n.next();!o.done;o=n.next()){var a=o.value;if(\"invalid_union\"===a.code)a.unionErrors.map(p);else if(\"invalid_return_type\"===a.code)p(a.returnTypeError);else if(\"invalid_arguments\"===a.code)p(a.argumentsError);else if(0===a.path.length)c._errors.push(a.message);else for(var i=c,s=0;s<a.path.length;){var u,d=a.path[s];s===a.path.length-1?(i[d]=i[d]||{_errors:[]},i[d]._errors.push(a.message)):\"string\"==typeof d?i[d]=i[d]||{_errors:[]}:\"number\"==typeof d&&((u=[])._errors=[],i[d]=i[d]||u),i=i[d],s++}}}catch(e){t={error:e}}finally{try{o&&!o.done&&(r=n.return)&&r.call(n)}finally{if(t)throw t.error}}};return p(u),c},u.addIssue=function(e){u.issues=__spread(u.issues,[e])},u.addIssues=function(e){u.issues=__spread(u.issues,e=void 0===e?[]:e)},u.flatten=function(e){var t,r;void 0===e&&(e=function(e){return e.message});var n={},o=[];try{for(var a=__values(u.issues),i=a.next();!i.done;i=a.next()){var s=i.value;0<s.path.length?(n[s.path[0]]=n[s.path[0]]||[],n[s.path[0]].push(e(s))):o.push(e(s))}}catch(e){t={error:e}}finally{try{i&&!i.done&&(r=a.return)&&r.call(a)}finally{if(t)throw t.error}}return{formErrors:o,fieldErrors:n}};t=t.prototype;return Object.setPrototypeOf?Object.setPrototypeOf(u,t):u.__proto__=t,u.name=\"ZodError\",u.issues=e,u}return __extends(t,r),Object.defineProperty(t.prototype,\"errors\",{get:function(){return this.issues},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return this.message},Object.defineProperty(t.prototype,\"message\",{get:function(){return JSON.stringify(this.issues,null,2)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"isEmpty\",{get:function(){return 0===this.issues.length},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"formErrors\",{get:function(){return this.flatten()},enumerable:!1,configurable:!0}),t.create=function(e){return new t(e)},t}(Error),defaultErrorMap=function(e,t){var r;switch(e.code){case ZodIssueCode.invalid_type:r=\"undefined\"===e.received?\"Required\":\"Expected \"+e.expected+\", received \"+e.received;break;case ZodIssueCode.unrecognized_keys:r=\"Unrecognized key(s) in object: \"+e.keys.map(function(e){return\"'\"+e+\"'\"}).join(\", \");break;case ZodIssueCode.invalid_union:r=\"Invalid input\";break;case ZodIssueCode.invalid_enum_value:r=\"Invalid enum value. Expected \"+e.options.map(function(e){return\"string\"==typeof e?\"'\"+e+\"'\":e}).join(\" | \")+\", received \"+(\"string\"==typeof t.data?\"'\"+t.data+\"'\":t.data);break;case ZodIssueCode.invalid_arguments:r=\"Invalid function arguments\";break;case ZodIssueCode.invalid_return_type:r=\"Invalid function return type\";break;case ZodIssueCode.invalid_date:r=\"Invalid date\";break;case ZodIssueCode.invalid_string:r=\"regex\"!==e.validation?\"Invalid \"+e.validation:\"Invalid\";break;case ZodIssueCode.too_small:r=\"array\"===e.type?\"Should have \"+(e.inclusive?\"at least\":\"more than\")+\" \"+e.minimum+\" items\":\"string\"===e.type?\"Should be \"+(e.inclusive?\"at least\":\"over\")+\" \"+e.minimum+\" characters\":\"number\"===e.type?\"Value should be greater than \"+(e.inclusive?\"or equal to \":\"\")+e.minimum:\"Invalid input\";break;case ZodIssueCode.too_big:r=\"array\"===e.type?\"Should have \"+(e.inclusive?\"at most\":\"less than\")+\" \"+e.maximum+\" items\":\"string\"===e.type?\"Should be \"+(e.inclusive?\"at most\":\"under\")+\" \"+e.maximum+\" characters long\":\"number\"===e.type?\"Value should be less than \"+(e.inclusive?\"or equal to \":\"\")+e.maximum:\"Invalid input\";break;case ZodIssueCode.custom:r=\"Invalid input\";break;case ZodIssueCode.invalid_intersection_types:r=\"Intersection results could not be merged\";break;case ZodIssueCode.not_multiple_of:r=\"Should be multiple of \"+e.multipleOf;break;default:r=t.defaultError,util.assertNever(e)}return{message:r}},overrideErrorMap=defaultErrorMap,setErrorMap=function(e){overrideErrorMap=e},ZodParsedType=util.arrayToEnum([\"string\",\"nan\",\"number\",\"integer\",\"float\",\"boolean\",\"date\",\"bigint\",\"symbol\",\"function\",\"undefined\",\"null\",\"array\",\"object\",\"unknown\",\"promise\",\"void\",\"never\",\"map\",\"set\"]),getParsedType=function(e){switch(typeof e){case\"undefined\":return ZodParsedType.undefined;case\"string\":return ZodParsedType.string;case\"number\":return isNaN(e)?ZodParsedType.nan:ZodParsedType.number;case\"boolean\":return ZodParsedType.boolean;case\"function\":return ZodParsedType.function;case\"bigint\":return ZodParsedType.bigint;case\"object\":return Array.isArray(e)?ZodParsedType.array:null===e?ZodParsedType.null:e.then&&\"function\"==typeof e.then&&e.catch&&\"function\"==typeof e.catch?ZodParsedType.promise:e instanceof Map?ZodParsedType.map:e instanceof Set?ZodParsedType.set:e instanceof Date?ZodParsedType.date:ZodParsedType.object;default:return ZodParsedType.unknown}},makeIssue=function(e){var t,r,n=e.data,o=e.path,a=e.errorMaps,e=e.issueData,o=__spread(o,e.path||[]),i=__assign(__assign({},e),{path:o}),s=\"\",a=a.filter(function(e){return!!e}).slice().reverse();try{for(var u=__values(a),d=u.next();!d.done;d=u.next())s=(0,d.value)(i,{data:n,defaultError:s}).message}catch(e){t={error:e}}finally{try{d&&!d.done&&(r=u.return)&&r.call(u)}finally{if(t)throw t.error}}return __assign(__assign({},e),{path:o,message:e.message||s})},EMPTY_PATH=null,pathToArray=function(e){if(null===e)return[];for(var t=new Array(e.count);null!==e;)t[e.count-1]=e.component,e=e.parent;return t},pathFromArray=function(e){for(var t=null,r=0;r<e.length;r++)t={parent:t,component:e[r],count:r+1};return t},ParseContext=function(){function t(e){this.def=e}return Object.defineProperty(t.prototype,\"path\",{get:function(){return this.def.path},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"issues\",{get:function(){return this.def.issues},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"errorMap\",{get:function(){return this.def.errorMap},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"async\",{get:function(){return this.def.async},enumerable:!1,configurable:!0}),t.prototype.stepInto=function(e){return new t(__assign(__assign({},this.def),{path:null===this.path?{parent:null,count:1,component:e}:{parent:this.path,count:this.path.count+1,component:e}}))},t.prototype.addIssue=function(e,t,r){void 0===r&&(r={});r=makeIssue({data:e,issueData:t,path:pathToArray(this.path),errorMaps:[this.def.errorMap,r.schemaErrorMap,overrideErrorMap,defaultErrorMap]});this.issues.push(r)},t}(),INVALID=Object.freeze({valid:!1}),OK=function(e){return{valid:!0,value:e}},isInvalid=function(e){return!1===e.valid},isOk=function(e){return!0===e.valid},isAsync=function(e){return e instanceof Promise};!function(e){e.errToObj=function(e){return\"string\"==typeof e?{message:e}:e||{}},e.toString=function(e){return\"string\"==typeof e?e:null==e?void 0:e.message}}(errorUtil=errorUtil||{});var createRootContext=function(e){return new ParseContext({path:pathFromArray(e.path||[]),issues:[],errorMap:e.errorMap,async:null!==(e=e.async)&&void 0!==e&&e})},handleResult=function(e,t){return isOk(t)&&!e.issues.length?{success:!0,data:t.value}:{success:!1,error:new ZodError(e.issues)}};function processCreateParams(r){if(!r)return{};if(r.errorMap&&(r.invalid_type_error||r.required_error))throw new Error('Can\\'t use \"invalid\" or \"required\" in conjunction with custom error map.');if(r.errorMap)return{errorMap:r.errorMap};return{errorMap:function(e,t){return\"invalid_type\"!==e.code?{message:t.defaultError}:void 0===t.data&&r.required_error?{message:r.required_error}:r.invalid_type_error?{message:r.invalid_type_error}:{message:t.defaultError}}}}var objectUtil,ZodType=function(){function e(e){this.spa=this.safeParseAsync,this.superRefine=this._refinement,this._def=e,this.transform=this.transform.bind(this),this.default=this.default.bind(this)}return e.prototype._addIssue=function(e,t,r){e.addIssue(r.data,t,{schemaErrorMap:this._def.errorMap})},e.prototype._parseSync=function(e,t,r){r=this._parse(e,t,r);if(isAsync(r))throw new Error(\"Synchronous parse encountered promise.\");return r},e.prototype._parseAsync=function(e,t,r){r=this._parse(e,t,r);return Promise.resolve(r)},e.prototype.parse=function(e,t){t=this.safeParse(e,t);if(t.success)return t.data;throw t.error},e.prototype.safeParse=function(e,t){t=createRootContext(__assign(__assign({},t),{async:!1})),e=this._parseSync(t,e,getParsedType(e));return handleResult(t,e)},e.prototype.parseAsync=function(r,n){return __awaiter(this,void 0,void 0,function(){var t;return __generator(this,function(e){switch(e.label){case 0:return[4,this.safeParseAsync(r,n)];case 1:if((t=e.sent()).success)return[2,t.data];throw t.error}})})},e.prototype.safeParseAsync=function(n,o){return __awaiter(this,void 0,void 0,function(){var t,r;return __generator(this,function(e){switch(e.label){case 0:return t=createRootContext(__assign(__assign({},o),{async:!0})),r=this._parse(t,n,getParsedType(n)),[4,isAsync(r)?r:Promise.resolve(r)];case 1:return r=e.sent(),[2,handleResult(t,r)]}})})},e.prototype.refine=function(o,a){return this._refinement(function(t,r){function n(){return r.addIssue(__assign({code:ZodIssueCode.custom},(e=t,\"string\"==typeof a||void 0===a?{message:a}:\"function\"==typeof a?a(e):a)));var e}var e=o(t);return e instanceof Promise?e.then(function(e){return!!e||(n(),!1)}):!!e||(n(),!1)})},e.prototype.refinement=function(r,n){return this._refinement(function(e,t){return!!r(e)||(t.addIssue(\"function\"==typeof n?n(e,t):n),!1)})},e.prototype._refinement=function(e){return new ZodEffects({schema:this,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:{type:\"refinement\",refinement:e}})},e.prototype.optional=function(){return ZodOptional.create(this)},e.prototype.nullable=function(){return ZodNullable.create(this)},e.prototype.nullish=function(){return this.optional().nullable()},e.prototype.array=function(){return ZodArray.create(this)},e.prototype.promise=function(){return ZodPromise.create(this)},e.prototype.or=function(e){return ZodUnion.create([this,e])},e.prototype.and=function(e){return ZodIntersection.create(this,e)},e.prototype.transform=function(e){return new ZodEffects({schema:this,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:{type:\"transform\",transform:e}})},e.prototype.default=function(e){return new ZodDefault({innerType:this,defaultValue:\"function\"==typeof e?e:function(){return e},typeName:ZodFirstPartyTypeKind.ZodDefault})},e.prototype.isOptional=function(){return this.safeParse(void 0).success},e.prototype.isNullable=function(){return this.safeParse(null).success},e}(),cuidRegex=/^c[^\\s-]{8,}$/i,uuidRegex=/^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i,emailRegex=/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,ZodString=function(e){function t(){var n=null!==e&&e.apply(this,arguments)||this;return n._regex=function(t,e,r){return n.refinement(function(e){return t.test(e)},__assign({validation:e,code:ZodIssueCode.invalid_string},errorUtil.errToObj(r)))},n.nonempty=function(e){return n.min(1,errorUtil.errToObj(e))},n}return __extends(t,e),t.prototype._parse=function(t,r,e){var n,o;if(e!==ZodParsedType.string)return this._addIssue(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.string,received:e},{data:r}),INVALID;var a=!1;try{for(var i=__values(this._def.checks),s=i.next();!s.done;s=i.next()){var u=s.value;if(\"min\"===u.kind)r.length<u.value&&(a=!0,this._addIssue(t,{code:ZodIssueCode.too_small,minimum:u.value,type:\"string\",inclusive:!0,message:u.message},{data:r}));else if(\"max\"===u.kind)r.length>u.value&&(a=!0,this._addIssue(t,{code:ZodIssueCode.too_big,maximum:u.value,type:\"string\",inclusive:!0,message:u.message},{data:r}));else if(\"email\"===u.kind)emailRegex.test(r)||(a=!0,this._addIssue(t,{validation:\"email\",code:ZodIssueCode.invalid_string,message:u.message},{data:r}));else if(\"uuid\"===u.kind)uuidRegex.test(r)||(a=!0,this._addIssue(t,{validation:\"uuid\",code:ZodIssueCode.invalid_string,message:u.message},{data:r}));else if(\"cuid\"===u.kind)cuidRegex.test(r)||(a=!0,this._addIssue(t,{validation:\"cuid\",code:ZodIssueCode.invalid_string,message:u.message},{data:r}));else if(\"url\"===u.kind)try{new URL(r)}catch(e){a=!0,this._addIssue(t,{validation:\"url\",code:ZodIssueCode.invalid_string,message:u.message},{data:r})}else\"regex\"===u.kind&&(u.regex.lastIndex=0,u.regex.test(r)||(a=!0,this._addIssue(t,{validation:\"regex\",code:ZodIssueCode.invalid_string,message:u.message},{data:r})))}}catch(e){n={error:e}}finally{try{s&&!s.done&&(o=i.return)&&o.call(i)}finally{if(n)throw n.error}}return a?INVALID:OK(r)},t.prototype._addCheck=function(e){return new t(__assign(__assign({},this._def),{checks:__spread(this._def.checks,[e])}))},t.prototype.email=function(e){return this._addCheck(__assign({kind:\"email\"},errorUtil.errToObj(e)))},t.prototype.url=function(e){return this._addCheck(__assign({kind:\"url\"},errorUtil.errToObj(e)))},t.prototype.uuid=function(e){return this._addCheck(__assign({kind:\"uuid\"},errorUtil.errToObj(e)))},t.prototype.cuid=function(e){return this._addCheck(__assign({kind:\"cuid\"},errorUtil.errToObj(e)))},t.prototype.regex=function(e,t){return this._addCheck(__assign({kind:\"regex\",regex:e},errorUtil.errToObj(t)))},t.prototype.min=function(e,t){return this._addCheck(__assign({kind:\"min\",value:e},errorUtil.errToObj(t)))},t.prototype.max=function(e,t){return this._addCheck(__assign({kind:\"max\",value:e},errorUtil.errToObj(t)))},t.prototype.length=function(e,t){return this.min(e,t).max(e,t)},Object.defineProperty(t.prototype,\"isEmail\",{get:function(){return!!this._def.checks.find(function(e){return\"email\"===e.kind})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"isURL\",{get:function(){return!!this._def.checks.find(function(e){return\"url\"===e.kind})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"isUUID\",{get:function(){return!!this._def.checks.find(function(e){return\"uuid\"===e.kind})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"isCUID\",{get:function(){return!!this._def.checks.find(function(e){return\"cuid\"===e.kind})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"minLength\",{get:function(){var t=-1/0;return this._def.checks.map(function(e){\"min\"===e.kind&&(null===t||e.value>t)&&(t=e.value)}),t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"maxLength\",{get:function(){var t=null;return this._def.checks.map(function(e){\"max\"===e.kind&&(null===t||e.value<t)&&(t=e.value)}),t},enumerable:!1,configurable:!0}),t.create=function(e){return new t(__assign({checks:[],typeName:ZodFirstPartyTypeKind.ZodString},processCreateParams(e)))},t}(ZodType),ZodNumber=function(t){function o(){var e=null!==t&&t.apply(this,arguments)||this;return e.min=e.gte,e.max=e.lte,e.step=e.multipleOf,e}return __extends(o,t),o.prototype._parse=function(e,t,r){var n,o;if(r!==ZodParsedType.number)return this._addIssue(e,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.number,received:r},{data:t}),INVALID;var a=!1;try{for(var i=__values(this._def.checks),s=i.next();!s.done;s=i.next()){var u=s.value;\"int\"===u.kind?util.isInteger(t)||(a=!0,this._addIssue(e,{code:ZodIssueCode.invalid_type,expected:\"integer\",received:\"float\",message:u.message},{data:t})):\"min\"===u.kind?(u.inclusive?t<u.value:t<=u.value)&&(a=!0,this._addIssue(e,{code:ZodIssueCode.too_small,minimum:u.value,type:\"number\",inclusive:u.inclusive,message:u.message},{data:t})):\"max\"===u.kind?(u.inclusive?t>u.value:t>=u.value)&&(a=!0,this._addIssue(e,{code:ZodIssueCode.too_big,maximum:u.value,type:\"number\",inclusive:u.inclusive,message:u.message},{data:t})):\"multipleOf\"===u.kind?t%u.value!=0&&(a=!0,this._addIssue(e,{code:ZodIssueCode.not_multiple_of,multipleOf:u.value,message:u.message},{data:t})):util.assertNever(u)}}catch(e){n={error:e}}finally{try{s&&!s.done&&(o=i.return)&&o.call(i)}finally{if(n)throw n.error}}return a?INVALID:OK(t)},o.prototype.gte=function(e,t){return this.setLimit(\"min\",e,!0,errorUtil.toString(t))},o.prototype.gt=function(e,t){return this.setLimit(\"min\",e,!1,errorUtil.toString(t))},o.prototype.lte=function(e,t){return this.setLimit(\"max\",e,!0,errorUtil.toString(t))},o.prototype.lt=function(e,t){return this.setLimit(\"max\",e,!1,errorUtil.toString(t))},o.prototype.setLimit=function(e,t,r,n){return new o(__assign(__assign({},this._def),{checks:__spread(this._def.checks,[{kind:e,value:t,inclusive:r,message:errorUtil.toString(n)}])}))},o.prototype._addCheck=function(e){return new o(__assign(__assign({},this._def),{checks:__spread(this._def.checks,[e])}))},o.prototype.int=function(e){return this._addCheck({kind:\"int\",message:errorUtil.toString(e)})},o.prototype.positive=function(e){return this._addCheck({kind:\"min\",value:0,inclusive:!1,message:errorUtil.toString(e)})},o.prototype.negative=function(e){return this._addCheck({kind:\"max\",value:0,inclusive:!1,message:errorUtil.toString(e)})},o.prototype.nonpositive=function(e){return this._addCheck({kind:\"max\",value:0,inclusive:!0,message:errorUtil.toString(e)})},o.prototype.nonnegative=function(e){return this._addCheck({kind:\"min\",value:0,inclusive:!0,message:errorUtil.toString(e)})},o.prototype.multipleOf=function(e,t){return this._addCheck({kind:\"multipleOf\",value:e,message:errorUtil.toString(t)})},Object.defineProperty(o.prototype,\"minValue\",{get:function(){var t,e,r=null;try{for(var n=__values(this._def.checks),o=n.next();!o.done;o=n.next()){var a=o.value;\"min\"===a.kind&&(null===r||a.value>r)&&(r=a.value)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}return r},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,\"maxValue\",{get:function(){var t,e,r=null;try{for(var n=__values(this._def.checks),o=n.next();!o.done;o=n.next()){var a=o.value;\"max\"===a.kind&&(null===r||a.value<r)&&(r=a.value)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}return r},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,\"isInt\",{get:function(){return!!this._def.checks.find(function(e){return\"int\"===e.kind})},enumerable:!1,configurable:!0}),o.create=function(e){return new o(__assign(__assign({checks:[],typeName:ZodFirstPartyTypeKind.ZodNumber},processCreateParams(e)),processCreateParams(e)))},o}(ZodType),ZodBigInt=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype._parse=function(e,t,r){return r!==ZodParsedType.bigint?(this._addIssue(e,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.bigint,received:r},{data:t}),INVALID):OK(t)},t.create=function(e){return new t(__assign({typeName:ZodFirstPartyTypeKind.ZodBigInt},processCreateParams(e)))},t}(ZodType),ZodBoolean=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype._parse=function(e,t,r){return r!==ZodParsedType.boolean?(this._addIssue(e,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.boolean,received:r},{data:t}),INVALID):OK(t)},t.create=function(e){return new t(__assign({typeName:ZodFirstPartyTypeKind.ZodBoolean},processCreateParams(e)))},t}(ZodType),ZodDate=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype._parse=function(e,t,r){return r!==ZodParsedType.date?(this._addIssue(e,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.date,received:r},{data:t}),INVALID):isNaN(t.getTime())?(this._addIssue(e,{code:ZodIssueCode.invalid_date},{data:t}),INVALID):OK(new Date(t.getTime()))},t.create=function(e){return new t(__assign({typeName:ZodFirstPartyTypeKind.ZodDate},processCreateParams(e)))},t}(ZodType),ZodUndefined=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype._parse=function(e,t,r){return r!==ZodParsedType.undefined?(this._addIssue(e,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.undefined,received:r},{data:t}),INVALID):OK(t)},t.create=function(e){return new t(__assign({typeName:ZodFirstPartyTypeKind.ZodUndefined},processCreateParams(e)))},t}(ZodType),ZodNull=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype._parse=function(e,t,r){return r!==ZodParsedType.null?(this._addIssue(e,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.null,received:r},{data:t}),INVALID):OK(t)},t.create=function(e){return new t(__assign({typeName:ZodFirstPartyTypeKind.ZodNull},processCreateParams(e)))},t}(ZodType),ZodAny=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e._any=!0,e}return __extends(r,t),r.prototype._parse=function(e,t,r){return OK(t)},r.create=function(e){return new r(__assign({typeName:ZodFirstPartyTypeKind.ZodAny},processCreateParams(e)))},r}(ZodType),ZodUnknown=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e._unknown=!0,e}return __extends(r,t),r.prototype._parse=function(e,t,r){return OK(t)},r.create=function(e){return new r(__assign({typeName:ZodFirstPartyTypeKind.ZodUnknown},processCreateParams(e)))},r}(ZodType),ZodNever=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype._parse=function(e,t,r){return this._addIssue(e,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.never,received:r},{data:t}),INVALID},t.create=function(e){return new t(__assign({typeName:ZodFirstPartyTypeKind.ZodNever},processCreateParams(e)))},t}(ZodType),ZodVoid=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype._parse=function(e,t,r){return r!==ZodParsedType.undefined?(this._addIssue(e,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.void,received:r},{data:t}),INVALID):OK(t)},t.create=function(e){return new t(__assign({typeName:ZodFirstPartyTypeKind.ZodVoid},processCreateParams(e)))},t}(ZodType),ZodArray=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return __extends(r,e),r.prototype._parse=function(r,e,t){var n=this._def;if(t!==ZodParsedType.array)return r.addIssue(e,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:t}),INVALID;var e=e,o=!1;null!==n.minLength&&e.length<n.minLength.value&&(o=!0,this._addIssue(r,{code:ZodIssueCode.too_small,minimum:n.minLength.value,type:\"array\",inclusive:!0,message:n.minLength.message},{data:e})),null!==n.maxLength&&e.length>n.maxLength.value&&(o=!0,this._addIssue(r,{code:ZodIssueCode.too_big,maximum:n.maxLength.value,type:\"array\",inclusive:!0,message:n.maxLength.message},{data:e}));var a=[],i=new Array(e.length),s=n.type,u=function(t,e){isOk(e)?i[t]=e.value:isInvalid(e)?o=!0:a.push(e.then(function(e){return u(t,e)}))};return e.forEach(function(e,t){u(t,s._parse(r.stepInto(t),e,getParsedType(e)))}),r.async?Promise.all(a).then(function(){return o?INVALID:OK(i)}):o?INVALID:OK(i)},Object.defineProperty(r.prototype,\"element\",{get:function(){return this._def.type},enumerable:!1,configurable:!0}),r.prototype.min=function(e,t){return new r(__assign(__assign({},this._def),{minLength:{value:e,message:errorUtil.toString(t)}}))},r.prototype.max=function(e,t){return new r(__assign(__assign({},this._def),{maxLength:{value:e,message:errorUtil.toString(t)}}))},r.prototype.length=function(e,t){return this.min(e,t).max(e,t)},r.prototype.nonempty=function(e){return this.min(1,e)},r.create=function(e,t){return new r(__assign({type:e,minLength:null,maxLength:null,typeName:ZodFirstPartyTypeKind.ZodArray},processCreateParams(t)))},r}(ZodType);!function(e){e.mergeShapes=function(e,t){return __assign(__assign({},e),t)},e.intersectShapes=function(e,t){var r,n,o=util.objectKeys(e),a=util.objectKeys(t),o=o.filter(function(e){return-1!==a.indexOf(e)}),i={};try{for(var s=__values(o),u=s.next();!u.done;u=s.next()){var d=u.value;i[d]=ZodIntersection.create(e[d],t[d])}}catch(e){r={error:e}}finally{try{u&&!u.done&&(n=s.return)&&n.call(s)}finally{if(r)throw r.error}}return __assign(__assign(__assign({},e),t),i)}}(objectUtil=objectUtil||{});var mergeObjects=function(r){return function(e){var t=objectUtil.mergeShapes(r._def.shape(),e._def.shape());return new ZodObject({unknownKeys:r._def.unknownKeys,catchall:r._def.catchall,shape:function(){return t},typeName:ZodFirstPartyTypeKind.ZodObject})}},AugmentFactory=function(t){return function(e){return new ZodObject(__assign(__assign({},t),{shape:function(){return __assign(__assign({},t.shape()),e)}}))}};function deepPartialify(e){if(e instanceof ZodObject){var t,r={};for(t in e.shape){var n=e.shape[t];r[t]=ZodOptional.create(deepPartialify(n))}return new ZodObject(__assign(__assign({},e._def),{shape:function(){return r}}))}return e instanceof ZodArray?ZodArray.create(deepPartialify(e.element)):e instanceof ZodOptional?ZodOptional.create(deepPartialify(e.unwrap())):e instanceof ZodNullable?ZodNullable.create(deepPartialify(e.unwrap())):e instanceof ZodTuple?ZodTuple.create(e.items.map(function(e){return deepPartialify(e)})):e}var ZodObject=function(t){function a(){var e=null!==t&&t.apply(this,arguments)||this;return e._cached=null,e.nonstrict=e.passthrough,e.augment=AugmentFactory(e._def),e.extend=AugmentFactory(e._def),e}return __extends(a,t),a.prototype._getCached=function(){if(null!==this._cached)return this._cached;var e=this._def.shape(),t=util.objectKeys(e);return this._cached={shape:e,keys:t}},a.prototype._parse=function(e,n,t){var r,o,a,i,s;if(t!==ZodParsedType.object)return this._addIssue(e,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:t},{data:n}),INVALID;var t=this._getCached(),u=t.shape,t=t.keys,d=!1,c=[],p={},l=function(t,e){var r;isOk(e)?(void 0!==(r=e.value)||t in n)&&(p[t]=r):isInvalid(e)?d=!0:c.push(e.then(function(e){return l(t,e)}))};try{for(var f=__values(t),y=f.next();!y.done;y=f.next()){var _=y.value,h=u[_],m=n[_];l(_,h._parse(e.stepInto(_),m,getParsedType(m)))}}catch(e){v={error:e}}finally{try{y&&!y.done&&(r=f.return)&&r.call(f)}finally{if(v)throw v.error}}if(this._def.catchall instanceof ZodNever){var v=this._def.unknownKeys;if(\"passthrough\"===v){var Z=util.objectKeys(n).filter(function(e){return!(e in u)});try{for(var g=__values(Z),T=g.next();!T.done;T=g.next()){_=T.value;p[_]=n[_]}}catch(e){o={error:e}}finally{try{T&&!T.done&&(a=g.return)&&a.call(g)}finally{if(o)throw o.error}}}else if(\"strict\"===v)0<(Z=util.objectKeys(n).filter(function(e){return!(e in u)})).length&&(d=!0,this._addIssue(e,{code:ZodIssueCode.unrecognized_keys,keys:Z},{data:n}));else if(\"strip\"!==v)throw new Error(\"Internal ZodObject error: invalid unknownKeys value.\")}else{var b=this._def.catchall,Z=util.objectKeys(n).filter(function(e){return!(e in u)});try{for(var I=__values(Z),P=I.next();!P.done;P=I.next()){_=P.value,m=n[_];l(_,b._parse(e.stepInto(_),m,getParsedType(m)))}}catch(e){i={error:e}}finally{try{P&&!P.done&&(s=I.return)&&s.call(I)}finally{if(i)throw i.error}}}return e.async?Promise.all(c).then(function(){return d?INVALID:OK(p)}):d?INVALID:OK(p)},Object.defineProperty(a.prototype,\"shape\",{get:function(){return this._def.shape()},enumerable:!1,configurable:!0}),a.prototype.strict=function(){return new a(__assign(__assign({},this._def),{unknownKeys:\"strict\"}))},a.prototype.strip=function(){return new a(__assign(__assign({},this._def),{unknownKeys:\"strip\"}))},a.prototype.passthrough=function(){return new a(__assign(__assign({},this._def),{unknownKeys:\"passthrough\"}))},a.prototype.setKey=function(e,t){var r;return this.augment(((r={})[e]=t,r))},a.prototype.merge=function(e){var t=objectUtil.mergeShapes(this._def.shape(),e._def.shape());return new a({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:function(){return t},typeName:ZodFirstPartyTypeKind.ZodObject})},a.prototype.catchall=function(e){return new a(__assign(__assign({},this._def),{catchall:e}))},a.prototype.pick=function(e){var t=this,r={};return util.objectKeys(e).map(function(e){r[e]=t.shape[e]}),new a(__assign(__assign({},this._def),{shape:function(){return r}}))},a.prototype.omit=function(t){var r=this,n={};return util.objectKeys(this.shape).map(function(e){-1===util.objectKeys(t).indexOf(e)&&(n[e]=r.shape[e])}),new a(__assign(__assign({},this._def),{shape:function(){return n}}))},a.prototype.deepPartial=function(){return deepPartialify(this)},a.prototype.partial=function(t){var e,r=this,n={};if(t)return util.objectKeys(this.shape).map(function(e){-1===util.objectKeys(t).indexOf(e)?n[e]=r.shape[e]:n[e]=r.shape[e].optional()}),new a(__assign(__assign({},this._def),{shape:function(){return n}}));for(e in this.shape){var o=this.shape[e];n[e]=o.optional()}return new a(__assign(__assign({},this._def),{shape:function(){return n}}))},a.prototype.required=function(){var e,t={};for(e in this.shape){for(var r=this.shape[e];r instanceof ZodOptional;)r=r._def.innerType;t[e]=r}return new a(__assign(__assign({},this._def),{shape:function(){return t}}))},a.create=function(e,t){return new a(__assign({shape:function(){return e},unknownKeys:\"strip\",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject},processCreateParams(t)))},a.strictCreate=function(e,t){return new a(__assign({shape:function(){return e},unknownKeys:\"strict\",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject},processCreateParams(t)))},a.lazycreate=function(e,t){return new a(__assign({shape:e,unknownKeys:\"strip\",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject},processCreateParams(t)))},a}(ZodType),ZodUnion=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return __extends(r,e),r.prototype._parse=function(r,n,o){function i(e){var t=e.map(function(e){return new ZodError(e)});return 1===(e=t.filter(function(e){return\"invalid_type\"!==e.issues[0].code})).length?e[0].issues.forEach(function(e){return r.issues.push(e)}):a._addIssue(r,{code:ZodIssueCode.invalid_union,unionErrors:t},{data:n}),INVALID}var t,e,a=this,s=this._def.options;if(r.async){var u=s.map(function(){return new ParseContext(__assign(__assign({},r.def),{issues:[]}))});return Promise.all(s.map(function(e,t){return e._parse(u[t],n,o)})).then(function(e){var t,r;try{for(var n=__values(e),o=n.next();!o.done;o=n.next()){var a=o.value;if(isOk(a))return a}}catch(e){t={error:e}}finally{try{o&&!o.done&&(r=n.return)&&r.call(n)}finally{if(t)throw t.error}}return i(u.map(function(e){return e.issues}))})}var d=[];try{for(var c=__values(s),p=c.next();!p.done;p=c.next()){var l=p.value,f=new ParseContext(__assign(__assign({},r.def),{issues:[]})),y=l._parseSync(f,n,o);if(!isInvalid(y))return y;d.push(f.issues)}}catch(e){t={error:e}}finally{try{p&&!p.done&&(e=c.return)&&e.call(c)}finally{if(t)throw t.error}}return i(d)},Object.defineProperty(r.prototype,\"options\",{get:function(){return this._def.options},enumerable:!1,configurable:!0}),r.create=function(e,t){return new r(__assign({options:e,typeName:ZodFirstPartyTypeKind.ZodUnion},processCreateParams(t)))},r}(ZodType);function mergeValues(e,t){var r,n,o=getParsedType(e),a=getParsedType(t);if(e===t)return{valid:!0,data:e};if(o!==ZodParsedType.object||a!==ZodParsedType.object)return{valid:!1};var i=util.objectKeys(t),a=util.objectKeys(e).filter(function(e){return-1!==i.indexOf(e)}),s=__assign(__assign({},e),t);try{for(var u=__values(a),d=u.next();!d.done;d=u.next()){var c=d.value,p=mergeValues(e[c],t[c]);if(!p.valid)return{valid:!1};s[c]=p.data}}catch(e){r={error:e}}finally{try{d&&!d.done&&(n=u.return)&&n.call(u)}finally{if(r)throw r.error}}return{valid:!0,data:s}}var ZodIntersection=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return __extends(n,e),n.prototype._parse=function(r,n,e){function o(e,t){return isInvalid(e)||isInvalid(t)?INVALID:(t=mergeValues(e.value,t.value)).valid?OK(t.data):(a._addIssue(r,{code:ZodIssueCode.invalid_intersection_types},{data:n}),INVALID)}var a=this;return r.async?Promise.all([this._def.left._parse(r,n,e),this._def.right._parse(r,n,e)]).then(function(e){var t=__read(e,2),e=t[0],t=t[1];return o(e,t)}):o(this._def.left._parseSync(r,n,e),this._def.right._parseSync(r,n,e))},n.create=function(e,t,r){return new n(__assign({left:e,right:t,typeName:ZodFirstPartyTypeKind.ZodIntersection},processCreateParams(r)))},n}(ZodType),ZodTuple=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return __extends(r,e),r.prototype._parse=function(r,n,e){if(e!==ZodParsedType.array)return this._addIssue(r,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:e},{data:n}),INVALID;var o=this._def.rest;if(!o&&n.length>this._def.items.length)return this._addIssue(r,{code:ZodIssueCode.too_big,maximum:this._def.items.length,inclusive:!0,type:\"array\"},{data:n}),INVALID;if(n.length<this._def.items.length)return this._addIssue(r,{code:ZodIssueCode.too_small,minimum:this._def.items.length,inclusive:!0,type:\"array\"},{data:n}),INVALID;var a=[],i=this._def.items,s=new Array(n.length),u=!1,d=function(t,e){isOk(e)?s[t]=e.value:isInvalid(e)?u=!0:a.push(e.then(function(e){return d(t,e)}))};return i.forEach(function(e,t){d(t,e._parse(r.stepInto(t),n[t],getParsedType(n[t])))}),o&&n.slice(i.length).forEach(function(e,t){t+=i.length;d(t,o._parse(r.stepInto(t),e,getParsedType(e)))}),r.async?Promise.all(a).then(function(){return u?INVALID:OK(s)}):u?INVALID:OK(s)},Object.defineProperty(r.prototype,\"items\",{get:function(){return this._def.items},enumerable:!1,configurable:!0}),r.prototype.rest=function(e){return new r(__assign(__assign({},this._def),{rest:e}))},r.create=function(e,t){return new r(__assign({items:e,typeName:ZodFirstPartyTypeKind.ZodTuple,rest:null},processCreateParams(t)))},r}(ZodType),ZodRecord=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return __extends(n,e),Object.defineProperty(n.prototype,\"keySchema\",{get:function(){return this._def.keyType},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"valueSchema\",{get:function(){return this._def.valueType},enumerable:!1,configurable:!0}),n.prototype._parse=function(e,t,r){if(r!==ZodParsedType.object)return this._addIssue(e,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:r},{data:t}),INVALID;var n,o=[],a=this._def.keyType,i=this._def.valueType,s={},u=!1,d=function(e,t){isOk(e)&&isOk(t)?s[e.value]=t.value:isAsync(e)||isAsync(t)?o.push(Promise.all([e,t]).then(function(e){var t=__read(e,2),e=t[0],t=t[1];return d(e,t)})):u=!0};for(n in t)d(a._parse(e.stepInto(n),n,getParsedType(n)),i._parse(e.stepInto(n),t[n],getParsedType(t[n])));return e.async?Promise.all(o).then(function(){return u?INVALID:OK(s)}):u?INVALID:OK(s)},Object.defineProperty(n.prototype,\"element\",{get:function(){return this._def.valueType},enumerable:!1,configurable:!0}),n.create=function(e,t,r){return new n(t instanceof ZodType?__assign({keyType:e,valueType:t,typeName:ZodFirstPartyTypeKind.ZodRecord},processCreateParams(r)):__assign({keyType:ZodString.create(),valueType:e,typeName:ZodFirstPartyTypeKind.ZodRecord},processCreateParams(t)))},n}(ZodType),ZodMap=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return __extends(n,e),n.prototype._parse=function(n,e,t){if(t!==ZodParsedType.map)return this._addIssue(n,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.map,received:t},{data:e}),INVALID;var o=this._def.keyType,a=this._def.valueType,e=e,r=new Map,i=[],s=!1,u=function(e,t){isAsync(e)||isAsync(t)?i.push(Promise.all([e,t]).then(function(e){var t=__read(e,2),e=t[0],t=t[1];return u(e,t)})):isInvalid(e)||isInvalid(t)?s=!0:r.set(e.value,t.value)};return __spread(e.entries()).forEach(function(e,t){var r=__read(e,2),e=r[0],r=r[1],t=n.stepInto(t),e=o._parse(t.stepInto(\"key\"),e,getParsedType(e)),r=a._parse(t.stepInto(\"value\"),r,getParsedType(r));u(e,r)}),n.async?Promise.all(i).then(function(){return s?INVALID:OK(r)}):s?INVALID:OK(r)},n.create=function(e,t,r){return new n(__assign({valueType:t,keyType:e,typeName:ZodFirstPartyTypeKind.ZodMap},processCreateParams(r)))},n}(ZodType),ZodSet=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return __extends(r,e),r.prototype._parse=function(r,e,t){if(t!==ZodParsedType.set)return this._addIssue(r,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.set,received:t},{data:e}),INVALID;var e=e,n=this._def.valueType,o=new Set,a=[],i=!1,s=function(e){isOk(e)?o.add(e.value):isInvalid(e)?i=!0:a.push(e.then(function(e){return s(e)}))};return __spread(e.values()).forEach(function(e,t){return s(n._parse(r.stepInto(t),e,getParsedType(e)))}),r.async?Promise.all(a).then(function(){return i?INVALID:OK(o)}):i?INVALID:OK(o)},r.create=function(e,t){return new r(__assign({valueType:e,typeName:ZodFirstPartyTypeKind.ZodSet},processCreateParams(t)))},r}(ZodType),ZodFunction=function(t){function n(){var e=null!==t&&t.apply(this,arguments)||this;return e.validate=e.implement,e}return __extends(n,t),n.prototype._parse=function(r,e,t){var a=this;if(t!==ZodParsedType.function)return this._addIssue(r,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.function,received:t},{data:e}),INVALID;function i(e,t){return makeIssue({data:e,path:pathToArray(r.path),errorMaps:[r.errorMap],issueData:{code:ZodIssueCode.invalid_arguments,argumentsError:t}})}function s(e,t){return makeIssue({data:e,path:pathToArray(r.path),errorMaps:[r.errorMap],issueData:{code:ZodIssueCode.invalid_return_type,returnTypeError:t}})}var u={errorMap:r.errorMap},d=e;return this._def.returns instanceof ZodPromise?OK(function(){for(var o=[],e=0;e<arguments.length;e++)o[e]=arguments[e];return __awaiter(a,void 0,void 0,function(){var t,r,n;return __generator(this,function(e){switch(e.label){case 0:return t=new ZodError([]),[4,this._def.args.parseAsync(o,u).catch(function(e){throw t.addIssue(i(o,e)),t})];case 1:return r=e.sent(),[4,d.apply(void 0,__spread(r))];case 2:return n=e.sent(),[4,this._def.returns.parseAsync(n,u).catch(function(e){throw t.addIssue(s(n,e)),t})];case 3:return[2,e.sent()]}})})}):OK(function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=a._def.args.safeParse(e,u);if(!r.success)throw new ZodError([i(e,r.error)]);var n=d.apply(void 0,__spread(r.data)),r=a._def.returns.safeParse(n,u);if(!r.success)throw new ZodError([s(n,r.error)]);return r.data})},n.prototype.parameters=function(){return this._def.args},n.prototype.returnType=function(){return this._def.returns},n.prototype.args=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return new n(__assign(__assign({},this._def),{args:ZodTuple.create(e).rest(ZodUnknown.create())}))},n.prototype.returns=function(e){return new n(__assign(__assign({},this._def),{returns:e}))},n.prototype.implement=function(e){return this.parse(e)},n.prototype.strictImplement=function(e){return this.parse(e)},n.create=function(e,t,r){return new n(__assign({args:(e||ZodTuple.create([])).rest(ZodUnknown.create()),returns:t||ZodUnknown.create(),typeName:ZodFirstPartyTypeKind.ZodFunction},processCreateParams(r)))},n}(ZodType),ZodLazy=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return __extends(r,e),Object.defineProperty(r.prototype,\"schema\",{get:function(){return this._def.getter()},enumerable:!1,configurable:!0}),r.prototype._parse=function(e,t,r){return this._def.getter()._parse(e,t,r)},r.create=function(e,t){return new r(__assign({getter:e,typeName:ZodFirstPartyTypeKind.ZodLazy},processCreateParams(t)))},r}(ZodType),ZodLiteral=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return __extends(r,e),r.prototype._parse=function(e,t,r){return t!==this._def.value?(this._addIssue(e,{code:ZodIssueCode.invalid_type,expected:this._def.value,received:t},{data:t}),INVALID):OK(t)},Object.defineProperty(r.prototype,\"value\",{get:function(){return this._def.value},enumerable:!1,configurable:!0}),r.create=function(e,t){return new r(__assign({value:e,typeName:ZodFirstPartyTypeKind.ZodLiteral},processCreateParams(t)))},r}(ZodType);function createZodEnum(e){return new ZodEnum({values:e,typeName:ZodFirstPartyTypeKind.ZodEnum})}var ZodFirstPartyTypeKind,ZodEnum=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype._parse=function(e,t,r){return-1===this._def.values.indexOf(t)?(this._addIssue(e,{code:ZodIssueCode.invalid_enum_value,options:this._def.values},{data:t}),INVALID):OK(t)},Object.defineProperty(t.prototype,\"options\",{get:function(){return this._def.values},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"enum\",{get:function(){var t,e,r={};try{for(var n=__values(this._def.values),o=n.next();!o.done;o=n.next()){var a=o.value;r[a]=a}}catch(e){t={error:e}}finally{try{o&&!o.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}return r},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"Values\",{get:function(){var t,e,r={};try{for(var n=__values(this._def.values),o=n.next();!o.done;o=n.next()){var a=o.value;r[a]=a}}catch(e){t={error:e}}finally{try{o&&!o.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}return r},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"Enum\",{get:function(){var t,e,r={};try{for(var n=__values(this._def.values),o=n.next();!o.done;o=n.next()){var a=o.value;r[a]=a}}catch(e){t={error:e}}finally{try{o&&!o.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}return r},enumerable:!1,configurable:!0}),t.create=createZodEnum,t}(ZodType),ZodNativeEnum=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return __extends(r,e),r.prototype._parse=function(e,t,r){var n=util.getValidEnumValues(this._def.values);return-1===n.indexOf(t)?(this._addIssue(e,{code:ZodIssueCode.invalid_enum_value,options:util.objectValues(n)},{data:t}),INVALID):OK(t)},r.create=function(e,t){return new r(__assign({values:e,typeName:ZodFirstPartyTypeKind.ZodNativeEnum},processCreateParams(t)))},r}(ZodType),ZodPromise=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return __extends(r,e),r.prototype._parse=function(t,e,r){var n=this;if(r!==ZodParsedType.promise&&!1===t.async)return this._addIssue(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.promise,received:r},{data:e}),INVALID;e=r===ZodParsedType.promise?e:Promise.resolve(e);return OK(e.then(function(e){return n._def.type.parseAsync(e,{path:pathToArray(t.path),errorMap:t.errorMap})}))},r.create=function(e,t){return new r(__assign({type:e,typeName:ZodFirstPartyTypeKind.ZodPromise},processCreateParams(t)))},r}(ZodType),ZodEffects=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return __extends(n,e),n.prototype.innerType=function(){return this._def.schema},n.prototype._parse=function(t,e,r){var n=this,o=!1===t.async,a=this._def.effect||null,i=e,r=r;if(\"preprocess\"===a.type){var s=a.transform(e);if(t.async)return Promise.resolve(s).then(function(e){return n._def.schema._parseAsync(t,e,getParsedType(e))});if((s=this._def.schema._parseSync(t,s,getParsedType(s)))instanceof Promise)throw new Error(\"Asynchronous preprocess step encountered during synchronous parse operation. Use .parseAsync instead.\");return s}if(\"refinement\"===a.type){function u(e,t){t=t.refinement(e,d);if(t instanceof Promise){if(o)throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");return t.then(function(){return e})}return e}var d={addIssue:function(e){n._addIssue(t,e,{data:i})},get path(){return pathToArray(t.path)}};if(d.addIssue=d.addIssue.bind(d),o){var c=this._def.schema._parseSync(t,i,r);if(isInvalid(c))return INVALID;s=u(c.value,a);return OK(s)}return this._def.schema._parseAsync(t,i,r).then(function(e){return isInvalid(e)?INVALID:u(e.value,a)}).then(function(e){return OK(e)})}if(\"transform\"===a.type){function p(e,t){e=t.transform(e);if(e instanceof Promise&&o)throw new Error(\"Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.\");return e}if(o){c=this._def.schema._parseSync(t,i,r);if(isInvalid(c))return INVALID;s=p(c.value,a);return OK(s)}return this._def.schema._parseAsync(t,i,r).then(function(e){return isInvalid(e)?INVALID:p(e.value,a)}).then(function(e){return OK(e)})}util.assertNever(a)},n.create=function(e,t,r){return new n(__assign({schema:e,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:t},processCreateParams(r)))},n.createWithPreprocess=function(e,t,r){return new n(__assign({schema:t,effect:{type:\"preprocess\",transform:e},typeName:ZodFirstPartyTypeKind.ZodEffects},processCreateParams(r)))},n}(ZodType),ZodOptional=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return __extends(r,e),r.prototype._parse=function(e,t,r){return r===ZodParsedType.undefined?OK(void 0):this._def.innerType._parse(e,t,r)},r.prototype.unwrap=function(){return this._def.innerType},r.create=function(e,t){return new r(__assign({innerType:e,typeName:ZodFirstPartyTypeKind.ZodOptional},processCreateParams(t)))},r}(ZodType),ZodNullable=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return __extends(r,e),r.prototype._parse=function(e,t,r){return r===ZodParsedType.null?OK(null):this._def.innerType._parse(e,t,r)},r.prototype.unwrap=function(){return this._def.innerType},r.create=function(e,t){return new r(__assign({innerType:e,typeName:ZodFirstPartyTypeKind.ZodNullable},processCreateParams(t)))},r}(ZodType),ZodDefault=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype._parse=function(e,t,r){return r===ZodParsedType.undefined&&(t=this._def.defaultValue()),this._def.innerType._parse(e,t,getParsedType(t))},t.prototype.removeDefault=function(){return this._def.innerType},t.create=function(e,t){return new ZodOptional(__assign({innerType:e,typeName:ZodFirstPartyTypeKind.ZodOptional},processCreateParams(t)))},t}(ZodType),custom=function(e,t){return e?ZodAny.create().refine(e,t):ZodAny.create()},late={object:ZodObject.lazycreate};!function(e){e.ZodString=\"ZodString\",e.ZodNumber=\"ZodNumber\",e.ZodBigInt=\"ZodBigInt\",e.ZodBoolean=\"ZodBoolean\",e.ZodDate=\"ZodDate\",e.ZodUndefined=\"ZodUndefined\",e.ZodNull=\"ZodNull\",e.ZodAny=\"ZodAny\",e.ZodUnknown=\"ZodUnknown\",e.ZodNever=\"ZodNever\",e.ZodVoid=\"ZodVoid\",e.ZodArray=\"ZodArray\",e.ZodObject=\"ZodObject\",e.ZodUnion=\"ZodUnion\",e.ZodIntersection=\"ZodIntersection\",e.ZodTuple=\"ZodTuple\",e.ZodRecord=\"ZodRecord\",e.ZodMap=\"ZodMap\",e.ZodSet=\"ZodSet\",e.ZodFunction=\"ZodFunction\",e.ZodLazy=\"ZodLazy\",e.ZodLiteral=\"ZodLiteral\",e.ZodEnum=\"ZodEnum\",e.ZodEffects=\"ZodEffects\",e.ZodNativeEnum=\"ZodNativeEnum\",e.ZodOptional=\"ZodOptional\",e.ZodNullable=\"ZodNullable\",e.ZodDefault=\"ZodDefault\",e.ZodPromise=\"ZodPromise\"}(ZodFirstPartyTypeKind=ZodFirstPartyTypeKind||{});var instanceOfType=function(t,e){return void 0===e&&(e={message:\"Input not instance of \"+t.name}),custom(function(e){return e instanceof t},e)},stringType=ZodString.create,numberType=ZodNumber.create,bigIntType=ZodBigInt.create,booleanType=ZodBoolean.create,dateType=ZodDate.create,undefinedType=ZodUndefined.create,nullType=ZodNull.create,anyType=ZodAny.create,unknownType=ZodUnknown.create,neverType=ZodNever.create,voidType=ZodVoid.create,arrayType=ZodArray.create,objectType=ZodObject.create,strictObjectType=ZodObject.strictCreate,unionType=ZodUnion.create,intersectionType=ZodIntersection.create,tupleType=ZodTuple.create,recordType=ZodRecord.create,mapType=ZodMap.create,setType=ZodSet.create,functionType=ZodFunction.create,lazyType=ZodLazy.create,literalType=ZodLiteral.create,enumType=ZodEnum.create,nativeEnumType=ZodNativeEnum.create,promiseType=ZodPromise.create,effectsType=ZodEffects.create,optionalType=ZodOptional.create,nullableType=ZodNullable.create,preprocessType=ZodEffects.createWithPreprocess,ostring=function(){return stringType().optional()},onumber=function(){return numberType().optional()},oboolean=function(){return booleanType().optional()},external=Object.freeze({__proto__:null,ZodParsedType:ZodParsedType,getParsedType:getParsedType,makeIssue:makeIssue,EMPTY_PATH:EMPTY_PATH,pathToArray:pathToArray,pathFromArray:pathFromArray,ParseContext:ParseContext,INVALID:INVALID,OK:OK,isInvalid:isInvalid,isOk:isOk,isAsync:isAsync,ZodType:ZodType,ZodString:ZodString,ZodNumber:ZodNumber,ZodBigInt:ZodBigInt,ZodBoolean:ZodBoolean,ZodDate:ZodDate,ZodUndefined:ZodUndefined,ZodNull:ZodNull,ZodAny:ZodAny,ZodUnknown:ZodUnknown,ZodNever:ZodNever,ZodVoid:ZodVoid,ZodArray:ZodArray,get objectUtil(){return objectUtil},mergeObjects:mergeObjects,ZodObject:ZodObject,ZodUnion:ZodUnion,ZodIntersection:ZodIntersection,ZodTuple:ZodTuple,ZodRecord:ZodRecord,ZodMap:ZodMap,ZodSet:ZodSet,ZodFunction:ZodFunction,ZodLazy:ZodLazy,ZodLiteral:ZodLiteral,ZodEnum:ZodEnum,ZodNativeEnum:ZodNativeEnum,ZodPromise:ZodPromise,ZodEffects:ZodEffects,ZodTransformer:ZodEffects,ZodOptional:ZodOptional,ZodNullable:ZodNullable,ZodDefault:ZodDefault,custom:custom,Schema:ZodType,ZodSchema:ZodType,late:late,get ZodFirstPartyTypeKind(){return ZodFirstPartyTypeKind},any:anyType,array:arrayType,bigint:bigIntType,boolean:booleanType,date:dateType,effect:effectsType,enum:enumType,function:functionType,instanceof:instanceOfType,intersection:intersectionType,lazy:lazyType,literal:literalType,map:mapType,nativeEnum:nativeEnumType,never:neverType,null:nullType,nullable:nullableType,number:numberType,object:objectType,oboolean:oboolean,onumber:onumber,optional:optionalType,ostring:ostring,preprocess:preprocessType,promise:promiseType,record:recordType,set:setType,strictObject:strictObjectType,string:stringType,transformer:effectsType,tuple:tupleType,undefined:undefinedType,union:unionType,unknown:unknownType,void:voidType,ZodIssueCode:ZodIssueCode,quotelessJson:quotelessJson,ZodError:ZodError,defaultErrorMap:defaultErrorMap,get overrideErrorMap(){return overrideErrorMap},setErrorMap:setErrorMap});export{EMPTY_PATH,INVALID,OK,ParseContext,ZodType as Schema,ZodAny,ZodArray,ZodBigInt,ZodBoolean,ZodDate,ZodDefault,ZodEffects,ZodEnum,ZodError,ZodFirstPartyTypeKind,ZodFunction,ZodIntersection,ZodIssueCode,ZodLazy,ZodLiteral,ZodMap,ZodNativeEnum,ZodNever,ZodNull,ZodNullable,ZodNumber,ZodObject,ZodOptional,ZodParsedType,ZodPromise,ZodRecord,ZodType as ZodSchema,ZodSet,ZodString,ZodEffects as ZodTransformer,ZodTuple,ZodType,ZodUndefined,ZodUnion,ZodUnknown,ZodVoid,anyType as any,arrayType as array,bigIntType as bigint,booleanType as boolean,custom,dateType as date,defaultErrorMap,effectsType as effect,enumType as enum,functionType as function,getParsedType,instanceOfType as instanceof,intersectionType as intersection,isAsync,isInvalid,isOk,late,lazyType as lazy,literalType as literal,makeIssue,mapType as map,mergeObjects,nativeEnumType as nativeEnum,neverType as never,nullType as null,nullableType as nullable,numberType as number,objectType as object,objectUtil,oboolean,onumber,optionalType as optional,ostring,overrideErrorMap,pathFromArray,pathToArray,preprocessType as preprocess,promiseType as promise,quotelessJson,recordType as record,setType as set,setErrorMap,strictObjectType as strictObject,stringType as string,effectsType as transformer,tupleType as tuple,undefinedType as undefined,unionType as union,unknownType as unknown,voidType as void,external as z};\n//# sourceMappingURL=index.mjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { listen } from 'worktop'\nimport faunadb from 'faunadb'\nimport { TypedRouter } from './TypedRouter'\nimport type { APISchema, Pattern } from '../common/api'\nimport * as z from 'zod'\n\nexport function customFetch(url: RequestInfo, params: RequestInit | undefined) {\n  const signal = params?.signal\n  delete params?.signal\n\n  const abortPromise: Promise<Response> = new Promise((resolve) => {\n    if (signal) {\n      signal.onabort = resolve as any\n    }\n  })\n\n  return Promise.race([abortPromise, fetch(url, params)])\n}\n\nexport function getFaunaError(error: any) {\n  const { code, description } = error.requestResult.responseContent.errors[0]\n  let status\n\n  switch (code) {\n    case 'instance not found':\n      status = 404\n      break\n    case 'instance not unique':\n      status = 409\n      break\n    case 'permission denied':\n      status = 403\n      break\n    case 'unauthorized':\n    case 'authentication failed':\n      status = 401\n      break\n    default:\n      status = 500\n  }\n\n  return { code, description, status }\n}\n\ndeclare const FAUNA_SECRET: string\n\nconst router = new TypedRouter<APISchema>()\n\nconst faunaClient = new faunadb.Client({\n  secret: FAUNA_SECRET,\n  fetch: customFetch\n})\n\nconst { Create, Collection, Match, Index, Get, Ref, Documents, Paginate, Sum, Delete, Add, Select, Let, Var, Update, Map, Lambda } = faunadb.query\n\n\nfunction flattenFauna<T>(d: FaunaDocument<T>): T {\n  return {\n    id: d.ref.value.id,\n    ts: d.ts,\n    ...d.data\n  } as any\n}\n``\n\ntype FaunaDocument<T> = {\n  ref: { value: { id: string } }\n  ts: number\n  data: Omit<T, 'id'|'ts'>\n}\n\nrouter.add('GET', '/patterns/:id', async (req, res) => {\n  const result = await faunaClient.query(\n    Get(Ref(Collection(\"patterns\"), req.params.id))\n  ) as FaunaDocument<Pattern>\n\n  return flattenFauna(result)\n})\n\nrouter.add('GET', '/patterns', async (req, res) => {\n  const result = await faunaClient.query(\n    Map(\n      Paginate(Documents(Collection(\"patterns\"))),\n      Lambda(\"id\", Get(Var(\"id\")))\n    )\n  ) as { data: FaunaDocument<Pattern>[] }\n\n  return result.data.map(flattenFauna)\n})\n\nconst newPatternForm = z.object({\n  title: z.string(),\n  slug: z.string(),\n  explanation: z.string()\n})\nrouter.add('POST', '/patterns', async (req, res) => {\n  const data = newPatternForm.parse(await req.body())\n\n  const result = await faunaClient.query(\n    Create(\n      Collection('patterns'),\n      {\n        data: data\n      }\n    )\n  ) as FaunaDocument<Pattern>\n\n  return flattenFauna(result)\n})\n\nrouter.add('PATCH', '/patterns/:id', async (req, res) => {\n  const changes = await req.body()\n\n  const result = await faunaClient.query(\n    Update(\n      Ref(Collection('patterns'), req.params.id),\n      {\n        data: changes\n      }\n    )\n  ) as FaunaDocument<Pattern>\n\n  return flattenFauna(result)\n})\n\nrouter.add('DELETE', '/patterns/:id', async (req, res) => {\n  await faunaClient.query(\n    Delete(\n      Ref(Collection('patterns'), req.params.id)\n    )\n  )\n})\n\nlisten(router.worktopRouter.run)"],"names":[],"sourceRoot":""}